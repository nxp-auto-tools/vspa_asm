// Pre-processed
/*
	
	Assembler code implementation file for ppc generated by ADL.
	
	*/

#include <stdio.h>
#include <sstream>
#include <string>
extern "C" {
  #  include "as.h"
  #  include "bfd/elf-bfd.h"
}

#define __NO_RNUMBER__

#include "adl-asm-impl.h"
#include "adl-asm-info.h"

#define bits le_intbv
#define sbits le_sintbv

#define ns_bits le_intbv
#define ns_sbits le_ sintbv

extern "C" {
  #include "tc-ppc.h"
}




/* Figure out the BFD architecture to use.  These functions 
   are called well before vcpu_md_begin, when the output file is opened.  */ 

enum bfd_architecture vcpu_ppc_arch () 
{
  return ADL_TARGET_ARCH;
}

const char adl_parallel_separator_chars[] = "{}";
const char adl_symbol_chars[] = "[";
const char comment_chars[] = "#";
const char line_comment_chars[] = "#";
const char line_separator_chars[] = "";
const char packet_begin_chars[] = "{\n";
  const char packet_end_chars[] = "}\n";
static const char *init_comment_strs[] = {"//",};
static int init_num_comment_strs = 1;
static const char *init_line_comment_strs[] = {"//",};
static int init_num_line_comment_strs = 1;
static int init_queue_size = 2;
unsigned long vcpu_ppc_mach ()
{
  return default_adl_mach();
}

extern char*
vcpu_ppc_target_format ()
{
  return default_adl_target_format();
}

static const char instr_separator_chars[] = ";";


enum InstrAttrs {
  instr_done = 0x0,
  instr_opA = 0x1,
  instr_opB = 0x2,
  instr_opAB = 0x3,
  instr_opBS = 0x4,
  instr_opV = 0x5,
  instr_opZ = 0x6,
  instr_opX = 0x7,
  instr_opC = 0x8,
  instr_opD = 0x9,
  instr_fnop = 0xa,
  instr_opVs0 = 0xb,
  instr_opVs1 = 0xc,
  instr_opVs2 = 0xd,
  instr_opVrot = 0xe,
  instr_opVr = 0xf,
  instr_opVd = 0x10,
  instr_opVau = 0x11,
  instr_opS = 0x12,
  instr_opS_LO_st_Iu17_gX = 0x13,
  instr_opS_HI_st_Iu17_gX = 0x14,
  instr_opS_LO_st_Iu17_H = 0x15,
  instr_opS_HI_st_Iu17_H = 0x16,
  instr_opS_LO_ld_gX_Iu17 = 0x17,
  instr_opS_HI_ld_gX_Iu17 = 0x18,
  instr_opS_LO_ld_H_Iu17 = 0x19,
  instr_opS_HI_ld_H_Iu17 = 0x1a,
  instr_opS_LO_mv_sp_Iu17 = 0x1b,
  instr_opS_HI_mv_sp_Iu17 = 0x1c,
  instr_loop_begin = 0x1d,
  instr_loop_end = 0x1e,
  instr_loop_label = 0x1f,
  instr_null = 0x20,
  instr_jmp_jsr = 0x21,
  instr_rts = 0x22,
  instr_loop = 0x23,
  instr_load = 0x24,
  instr_store = 0x25,
  instr_ctrl = 0x26,
  instr_pseudo = 0x27,
  instr_var = 0x28,
  instr_inst = 0x29,
  instr_no_comp = 0x2a,
  instr_wide_imm = 0x2b,
  instr_en_4au = 0x2c,
  instr_dis_64au_sp = 0x2d,
  instr_dis_all_dp = 0x2e,
  instr_cmp_aX_Iu17 = 0x2f,
  instr_set_range = 0x30,
  instr_set_prec = 0x31,
  instr_dis_64au = 0x32,
  instr_set_vra_ptr = 0x33,
  instr_illegal = 0x34,
};

static void error(const char *msg,int pos ATTRIBUTE_UNUSED,int current_position ATTRIBUTE_UNUSED) ATTRIBUTE_UNUSED;
static void error(const char *msg,int pos ATTRIBUTE_UNUSED,int current_position ATTRIBUTE_UNUSED)
{
  adl_error(msg,pos,current_position);
}

static void info(const char *msg,int pos ATTRIBUTE_UNUSED,int current_position ATTRIBUTE_UNUSED) ATTRIBUTE_UNUSED;
static void info(const char *msg,int pos ATTRIBUTE_UNUSED,int current_position ATTRIBUTE_UNUSED)
{
  adl_info(msg,pos,current_position);
}

// Prefix variables.
static struct adl_prefix_field *pfx_fields0[] = { 0 };
static struct adl_prefix_field *pfx_fields1[] = { 0 };
static struct adl_prefix_fields pfx_queue[] = {{pfx_fields0},{pfx_fields1},};
// Prefix counters.

static void reset_prefix_counters()
{
}

 uint32_t im112im22 ( uint32_t u11 , uint32_t v11 );
 uint32_t im15n2im8n ( uint32_t u15 );
 uint32_t im15n2line ( uint32_t u15 );
 uint32_t im15s2im8s ( uint32_t u15 );
 uint32_t im15s2line ( uint32_t u15 );
 uint32_t log2_fun_as ( uint32_t num );
 uint32_t log2_num_elem_per_line_as ( uint32_t au_num , uint32_t elem_size );
 uint32_t nau2bit48 (  );
 uint32_t xtrm1b ( uint32_t xtrm_n );
 uint32_t xtrm4b ( uint32_t xtrm_n );
//
// Instruction field inserter functions.
//

static  void set_AA23_imp_bits__44_43__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x3) << 11);
}

static  void set_AA_imp_bits__10_9__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 26);
}

static  void set_AA_imp_bits__13_12__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 19);
}

static  void set_AA_imp_bits__44_43__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x3) << 11);
}

static  void set_AA_imp_bits__5_4__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 21);
}

static  void set_AA_imp_bits__7_6__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 23);
}

static  void set_AAsubAM_imp_bits__16_16__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 23);
}

static  void set_AAsubAM_imp_bits__7_7__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 24);
}

static  void set_AM_imp_bits__1_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 17);
}

static  void set_AM_imp_bits__5_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 11);
}

static  void set_AS0_imp_bits__0_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 7);
}

static  void set_AS10_imp_bits__10_10__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 17);
}

static  void set_AS11_imp_bits__11_11__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 18);
}

static  void set_AS12_imp_bits__12_12__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 19);
}

static  void set_AS13_imp_bits__13_13__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 20);
}

static  void set_AS14_imp_bits__14_14__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 21);
}

static  void set_AS15_imp_bits__15_15__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 22);
}

static  void set_AS1_imp_bits__1_1__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 8);
}

static  void set_AS2_imp_bits__2_2__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 9);
}

static  void set_AS3_imp_bits__3_3__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 10);
}

static  void set_AS4_imp_bits__4_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 11);
}

static  void set_AS5_imp_bits__5_5__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 12);
}

static  void set_AS6_imp_bits__6_6__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 13);
}

static  void set_AS7_imp_bits__7_7__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 14);
}

static  void set_AS8_imp_bits__8_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 15);
}

static  void set_AS9_imp_bits__9_9__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 16);
}

static  void set_AS_imp_bits__23_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 20);
}

static  void set_AS_imp_bits__3_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 17);
}

static  void set_AS_imp_bits__3_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 7);
}

static  void set_AS_imp_bits__40_37__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0xf) << 5);
}

static  void set_AS_imp_bits__41_38__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0xf) << 6);
}

static  void set_AS_imp_bits__6_3__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 20);
}

static  void set_AU_PREC_imp_bits__1_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 17);
}

static  void set_BIT48_imp_bits__48_48__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x1) << 16);
}

static  void set_BR_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 19);
  val >>=   0x1;
  x[0] |= ((val&0x1) << 21);
  val >>=   0x1;
  x[0] |= ((val&0x1) << 25);
}

static  void set_CGU_MODE_OVSF_CONJ_imp_bits__41_41_x_40_40_x_44_42__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x7) << 10);
  val >>=   0x3;
  x[1] |= ((val&0x3) << 8);
}

static  void set_CGU_REG_imp_bits__41_38__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0xf) << 6);
}

static  void set_COND_imp_bits__15_12__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 19);
}

static  void set_CREG_ADDR_FIELD_imp_bits__11_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xff) << 11);
}

static  void set_EV1b_imp_bits__43_43__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x1) << 11);
}

static  void set_FFT_SIZE_imp_bits__5_3__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 20);
}

static  void set_G0_imp_bits__0_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 7);
}

static  void set_G10_imp_bits__10_10__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 17);
}

static  void set_G11_imp_bits__11_11__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 18);
}

static  void set_G1_imp_bits__1_1__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 8);
}

static  void set_G2_imp_bits__2_2__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 9);
}

static  void set_G3_imp_bits__3_3__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 10);
}

static  void set_G4_imp_bits__4_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 11);
}

static  void set_G5_imp_bits__5_5__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 12);
}

static  void set_G6_imp_bits__6_6__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 13);
}

static  void set_G7_imp_bits__7_7__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 14);
}

static  void set_G8_imp_bits__8_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 15);
}

static  void set_G9_imp_bits__9_9__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 16);
}

static  void set_GP1_0to7_imp_bits__6_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 11);
}

static  void set_GP1_8to11_imp_bits__5_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 11);
}

static  void set_GP1_imp_bits__11_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 15);
}

static  void set_GP1_imp_bits__33_30__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 30);
  val >>=   0x2;
  x[1] |= ((val&0x3));
}

static  void set_GP1_imp_bits__7_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 11);
}

static  void set_GP2_0to7_imp_bits__10_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 15);
}

static  void set_GP2_8to11_imp_bits__9_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 15);
}

static  void set_GP2_imp_bits__11_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 15);
}

static  void set_GP_0to7_imp_bits__2_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 7);
}

static  void set_GP_0to7_imp_bits__36_34__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x7) << 2);
}

static  void set_GP_8to11_imp_bits__1_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 7);
}

static  void set_GP_8to11_imp_bits__35_34__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x3) << 2);
}

static  void set_GP_imp_bits__23_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 20);
}

static  void set_GP_imp_bits__37_34__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0xf) << 2);
}

static  void set_GP_imp_bits__3_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 17);
}

static  void set_GP_imp_bits__3_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 7);
}

static  void set_GP_imp_bits__7_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 11);
}

static  void set_H_QUADRANT_imp_bits__1_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 17);
}

static  void set_IM10s_imp_bits__13_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3ff) << 11);
}

static  void set_IM10s_imp_bits__9_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3ff) << 17);
}

static  void set_IM12_imp_bits__11_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xfff) << 7);
}

static  void set_IM16R20_imp_bits__17_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xffff) << 2);
}

static  void set_IM16_imp_bits__19_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xffff) << 11);
}

static  void set_IM16s2_imp_bits__35_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xfff) << 20);
  val >>=   0xc;
  x[1] |= ((val&0xf));
}

static  void set_IM16sR20_imp_bits__17_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xffff) << 2);
}

static  void set_IM16s_imp_bits__17_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xffff) << 2);
}

static  void set_IM17R13_imp_bits__36_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xfff) << 20);
  val >>=   0xc;
  x[1] |= ((val&0x1f));
}

static  void set_IM17R14_imp_bits__16_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ffff) << 7);
}

static  void set_IM17R15_imp_bits__16_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ffff) << 7);
}

static  void set_IM17R4_imp_bits__20_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ffff) << 11);
}

static  void set_IM17R5_imp_bits__20_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ffff) << 11);
}

static  void set_IM17R9_imp_bits__35_19__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1fff) << 19);
  val >>=   0xd;
  x[1] |= ((val&0xf));
}

static  void set_IM17sR13_imp_bits__36_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xfff) << 20);
  val >>=   0xc;
  x[1] |= ((val&0x1f));
}

static  void set_IM22_imp_bits__44_23__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ff) << 23);
  val >>=   0x9;
  x[1] |= ((val&0x1fff));
}

static  void set_IM32_imp_bits__33_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3fffffff) << 2);
  val >>=   0x1e;
  x[1] |= ((val&0x3));
}

static  void set_IM32sR11_imp_bits__33_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3fffffff) << 2);
  val >>=   0x1e;
  x[1] |= ((val&0x3));
}

static  void set_IM32sR18_imp_bits__33_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3fffffff) << 2);
  val >>=   0x1e;
  x[1] |= ((val&0x3));
}

static  void set_IM32s_imp_bits__33_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3fffffff) << 2);
  val >>=   0x1e;
  x[1] |= ((val&0x3));
}

static  void set_IM3_imp_bits__4_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 2);
}

static  void set_IM4_imp_bits__23_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 20);
}

static  void set_IM4_imp_bits__3_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 7);
}

static  void set_IM4_imp_bits__7_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 11);
}

static  void set_IM5_imp_bits__12_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1f) << 15);
}

static  void set_IM8s_imp_bits__11_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xff) << 11);
}

static  void set_IM8s_imp_bits__7_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xff) << 17);
}

static  void set_IM8s_imp_bits__9_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xff) << 2);
}

static  void set_IM9_2_imp_bits__34_26__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3f) << 26);
  val >>=   0x6;
  x[1] |= ((val&0x7));
}

static  void set_IM9_3_imp_bits__24_16__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ff) << 16);
}

static  void set_IM9_4_imp_bits__14_6__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ff) << 6);
}

static  void set_IM9_imp_bits__11_3__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ff) << 20);
}

static  void set_IM9_imp_bits__44_36__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x1ff) << 4);
}

static  void set_IM9_imp_bits__8_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ff) << 17);
}

static  void set_IPAGE_imp_bits__5_4__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 21);
}

static  void set_IPAGE_imp_bits__8_7__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 24);
}

static  void set_IP_REG_imp_bits__46_38__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x1ff) << 6);
}

static  void set_ITER_CNT_imp_bits__29_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3ff) << 20);
}

static  void set_ITER_CNT_imp_bits__9_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3ff) << 17);
}

static  void set_Is16_imp_bits__19_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xffff) << 11);
}

static  void set_Iu16_imp_bits__19_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xffff) << 11);
}

static  void set_JMP_CND_AU_imp_bits__40_39__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x3) << 7);
}

static  void set_JMP_CND_CC_imp_bits__42_39__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0xf) << 7);
}

static  void set_LI17R8_imp_bits__36_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xfff) << 20);
  val >>=   0xc;
  x[1] |= ((val&0x1f));
}

static  void set_LINE1b_imp_bits__16_16__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 23);
}

static  void set_LINE1b_imp_bits__42_42__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x1) << 10);
}

static  void set_LINE1b_imp_bits__8_8__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 25);
}

static  void set_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 19);
  val >>=   0x1;
  x[0] |= ((val&0x1) << 21);
  val >>=   0x1;
  x[0] |= ((val&0x1) << 25);
}

static  void set_LOOP_SIZE_R10_imp_bits__39_30__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 30);
  val >>=   0x2;
  x[1] |= ((val&0xff));
}

static  void set_MIN1b_imp_bits__40_40__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x1) << 8);
}

static  void set_NCO_FREQ_imp_bits__42_30_x_19_3__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ffff) << 3);
  val >>=   0x11;
  x[0] |= ((val&0x3) << 30);
  val >>=   0x2;
  x[1] |= ((val&0x7ff));
}

static  void set_NCO_K_imp_bits__29_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3ff) << 20);
}

static  void set_NCO_K_imp_bits__9_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3ff) << 17);
}

static  void set_NCO_MODE_imp_bits__44_43__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x3) << 11);
}

static  void set_NCO_NEG_POS_imp_bits__2_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 2);
}

static  void set_RFdes_imp_bits__2_0__width_7(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 25);
}

static  void set_ROT_MODE_imp_bits__5_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3f) << 17);
}

static  void set_RPAGE_imp_bits__1_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 17);
}

static  void set_RPAGE_imp_bits__4_3__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 20);
}

static  void set_S0_CONJ_imp_bits__0_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 17);
}

static  void set_S0_MODE_imp_bits__5_2__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 19);
}

static  void set_S0_PREC_imp_bits__3_2__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 19);
}

static  void set_S0_SIGN_imp_bits__1_1__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 18);
}

static  void set_S1_MODE_imp_bits__9_6__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 23);
}

static  void set_S1_PREC_imp_bits__5_4__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 21);
}

static  void set_S2_MODE_imp_bits__12_10__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 27);
}

static  void set_S2_PREC_imp_bits__7_6__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 23);
}

static  void set_UNS1b_imp_bits__41_41__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x1) << 9);
}

static  void set_UNSIGN_SIGN_imp_bits__16_16__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 23);
}

static  void set_UNSIGN_SIGN_imp_bits__20_20__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 27);
}

static  void set_WB_PREC_imp_bits__9_8__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 25);
}

static  void set_opA_imp_bits__48_34__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x7fff) << 2);
}

static  void set_opB_imp_bits__49_49_x_33_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xfff) << 20);
  val >>=   0xc;
  x[1] |= ((val&0x3));
  val >>=   0x2;
  x[1] |= ((val&0x1) << 17);
}

static  void set_opS_HI_imp_bits__51_27__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1f) << 27);
  val >>=   0x5;
  x[1] |= ((val&0xfffff));
}

static  void set_opS_LO_imp_bits__26_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ffffff) << 2);
}

static  void set_opVau_imp_bits__5_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 2);
}

static  void set_opVd_imp_bits__8_6__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 6);
}

static  void set_opVr_imp_bits__15_9__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7f) << 9);
}

static  void set_opVrot_imp_bits__16_16__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 16);
}

static  void set_opVs0_imp_bits__17_17__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 17);
}

static  void set_opVs1_imp_bits__18_18__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 18);
}

static  void set_opVs2_imp_bits__19_19__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 19);
}

static  void set_opX_imp_bits__55_54__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x3) << 22);
}

static  void set_opZ_imp_bits__1_0__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3));
}

static  void set_reserved_imp_bits__10_9_x_6_5__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 22);
  val >>=   0x2;
  x[0] |= ((val&0x3) << 26);
}

static  void set_reserved_imp_bits__11_6__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3f) << 13);
}

static  void set_reserved_imp_bits__11_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 15);
}

static  void set_reserved_imp_bits__12_10__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 27);
}

static  void set_reserved_imp_bits__13_13__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 20);
}

static  void set_reserved_imp_bits__13_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3f) << 15);
}

static  void set_reserved_imp_bits__14_12__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 19);
}

static  void set_reserved_imp_bits__14_12_x_11_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7f) << 15);
}

static  void set_reserved_imp_bits__14_12_x_3_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 7);
  val >>=   0x4;
  x[0] |= ((val&0x7) << 19);
}

static  void set_reserved_imp_bits__15_12__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 19);
}

static  void set_reserved_imp_bits__15_12_x_11_8__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xff) << 15);
}

static  void set_reserved_imp_bits__16_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1ffff) << 7);
}

static  void set_reserved_imp_bits__16_15_x_11_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xff) << 11);
  val >>=   0x8;
  x[0] |= ((val&0x3) << 22);
}

static  void set_reserved_imp_bits__16_15_x_11_5_x_3_0__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 7);
  val >>=   0x4;
  x[0] |= ((val&0x7f) << 12);
  val >>=   0x7;
  x[0] |= ((val&0x3) << 22);
}

static  void set_reserved_imp_bits__16_16__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 23);
}

static  void set_reserved_imp_bits__18_16__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 23);
}

static  void set_reserved_imp_bits__19_4__width_25(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xffff) << 11);
}

static  void set_reserved_imp_bits__33_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xfff) << 20);
  val >>=   0xc;
  x[1] |= ((val&0x3));
}

static  void set_reserved_imp_bits__38_24__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xff) << 24);
  val >>=   0x8;
  x[1] |= ((val&0x7f));
}

static  void set_reserved_imp_bits__38_37__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x3) << 5);
}

static  void set_reserved_imp_bits__39_24__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xff) << 24);
  val >>=   0x8;
  x[1] |= ((val&0xff));
}

static  void set_reserved_imp_bits__39_2__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3fffffff) << 2);
  val >>=   0x1e;
  x[1] |= ((val&0xff));
}

static  void set_reserved_imp_bits__3_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 17);
}

static  void set_reserved_imp_bits__44_40__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x1f) << 8);
}

static  void set_reserved_imp_bits__44_40_x_29_24__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3f) << 24);
  val >>=   0x6;
  x[1] |= ((val&0x1f) << 8);
}

static  void set_reserved_imp_bits__45_45__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x1) << 13);
}

static  void set_reserved_imp_bits__45_45_x_33_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xfff) << 20);
  val >>=   0xc;
  x[1] |= ((val&0x3));
  val >>=   0x2;
  x[1] |= ((val&0x1) << 13);
}

static  void set_reserved_imp_bits__45_45_x_38_38_x_33_20__width_64(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xfff) << 20);
  val >>=   0xc;
  x[1] |= ((val&0x3));
  val >>=   0x2;
  x[1] |= ((val&0x1) << 6);
  val >>=   0x1;
  x[1] |= ((val&0x1) << 13);
}

static  void set_reserved_imp_bits__45_45_x_39_38__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x3) << 6);
  val >>=   0x2;
  x[1] |= ((val&0x1) << 13);
}

static  void set_reserved_imp_bits__45_45_x_40_37__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0xf) << 5);
  val >>=   0x4;
  x[1] |= ((val&0x1) << 13);
}

static  void set_reserved_imp_bits__45_45_x_44_43__width_64(unsigned *x, bfd_uint64_t val) {
  x[1] |= ((val&0x7) << 11);
}

static  void set_reserved_imp_bits__4_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1f) << 17);
}

static  void set_reserved_imp_bits__4_3__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 20);
}

static  void set_reserved_imp_bits__4_4__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 21);
}

static  void set_reserved_imp_bits__5_2__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0xf) << 19);
}

static  void set_reserved_imp_bits__5_4__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 21);
}

static  void set_reserved_imp_bits__7_7__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1) << 24);
}

static  void set_reserved_imp_bits__7_7_x_6_3__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x1f) << 20);
}

static  void set_reserved_imp_bits__8_8_x_2_0__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x7) << 17);
  val >>=   0x3;
  x[0] |= ((val&0x1) << 25);
}

static  void set_reserved_imp_bits__8_8_x_5_4__width_15(unsigned *x, bfd_uint64_t val) {
  x[0] |= ((val&0x3) << 21);
  val >>=   0x2;
  x[0] |= ((val&0x1) << 25);
}


//
// Instruction field clearer functions.
//

static  void clear_AA23_imp_bits__44_43__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1800);
  
}

static  void clear_AA_imp_bits__10_9__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x600);
  
}

static  void clear_AA_imp_bits__13_12__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3000);
  
}

static  void clear_AA_imp_bits__44_43__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1800);
  
}

static  void clear_AA_imp_bits__5_4__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x30);
  
}

static  void clear_AA_imp_bits__7_6__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xc0);
  
}

static  void clear_AAsubAM_imp_bits__16_16__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x10000);
  
}

static  void clear_AAsubAM_imp_bits__7_7__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x80);
  
}

static  void clear_AM_imp_bits__1_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3);
  
}

static  void clear_AM_imp_bits__5_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x30);
  
}

static  void clear_AS0_imp_bits__0_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1);
  
}

static  void clear_AS10_imp_bits__10_10__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x400);
  
}

static  void clear_AS11_imp_bits__11_11__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x800);
  
}

static  void clear_AS12_imp_bits__12_12__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1000);
  
}

static  void clear_AS13_imp_bits__13_13__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x2000);
  
}

static  void clear_AS14_imp_bits__14_14__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x4000);
  
}

static  void clear_AS15_imp_bits__15_15__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x8000);
  
}

static  void clear_AS1_imp_bits__1_1__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x2);
  
}

static  void clear_AS2_imp_bits__2_2__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x4);
  
}

static  void clear_AS3_imp_bits__3_3__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x8);
  
}

static  void clear_AS4_imp_bits__4_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x10);
  
}

static  void clear_AS5_imp_bits__5_5__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x20);
  
}

static  void clear_AS6_imp_bits__6_6__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x40);
  
}

static  void clear_AS7_imp_bits__7_7__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x80);
  
}

static  void clear_AS8_imp_bits__8_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x100);
  
}

static  void clear_AS9_imp_bits__9_9__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x200);
  
}

static  void clear_AS_imp_bits__23_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf00000);
  
}

static  void clear_AS_imp_bits__3_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf);
  
}

static  void clear_AS_imp_bits__3_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf);
  
}

static  void clear_AS_imp_bits__40_37__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1e0);
  
}

static  void clear_AS_imp_bits__41_38__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3c0);
  
}

static  void clear_AS_imp_bits__6_3__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x78);
  
}

static  void clear_AU_PREC_imp_bits__1_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3);
  
}

static  void clear_BIT48_imp_bits__48_48__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x10000);
  
}

static  void clear_BR_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x114);
  
}

static  void clear_CGU_MODE_OVSF_CONJ_imp_bits__41_41_x_40_40_x_44_42__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1f00);
  
}

static  void clear_CGU_REG_imp_bits__41_38__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3c0);
  
}

static  void clear_COND_imp_bits__15_12__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf000);
  
}

static  void clear_CREG_ADDR_FIELD_imp_bits__11_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xff0);
  
}

static  void clear_EV1b_imp_bits__43_43__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x800);
  
}

static  void clear_FFT_SIZE_imp_bits__5_3__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x38);
  
}

static  void clear_G0_imp_bits__0_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1);
  
}

static  void clear_G10_imp_bits__10_10__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x400);
  
}

static  void clear_G11_imp_bits__11_11__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x800);
  
}

static  void clear_G1_imp_bits__1_1__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x2);
  
}

static  void clear_G2_imp_bits__2_2__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x4);
  
}

static  void clear_G3_imp_bits__3_3__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x8);
  
}

static  void clear_G4_imp_bits__4_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x10);
  
}

static  void clear_G5_imp_bits__5_5__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x20);
  
}

static  void clear_G6_imp_bits__6_6__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x40);
  
}

static  void clear_G7_imp_bits__7_7__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x80);
  
}

static  void clear_G8_imp_bits__8_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x100);
  
}

static  void clear_G9_imp_bits__9_9__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x200);
  
}

static  void clear_GP1_0to7_imp_bits__6_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x70);
  
}

static  void clear_GP1_8to11_imp_bits__5_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x30);
  
}

static  void clear_GP1_imp_bits__11_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf00);
  
}

static  void clear_GP1_imp_bits__33_30__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3);
    x[0] = x[0] & (~0xc0000000);
  
}

static  void clear_GP1_imp_bits__7_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf0);
  
}

static  void clear_GP2_0to7_imp_bits__10_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x700);
  
}

static  void clear_GP2_8to11_imp_bits__9_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x300);
  
}

static  void clear_GP2_imp_bits__11_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf00);
  
}

static  void clear_GP_0to7_imp_bits__2_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x7);
  
}

static  void clear_GP_0to7_imp_bits__36_34__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1c);
  
}

static  void clear_GP_8to11_imp_bits__1_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3);
  
}

static  void clear_GP_8to11_imp_bits__35_34__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0xc);
  
}

static  void clear_GP_imp_bits__23_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf00000);
  
}

static  void clear_GP_imp_bits__37_34__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3c);
  
}

static  void clear_GP_imp_bits__3_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf);
  
}

static  void clear_GP_imp_bits__3_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf);
  
}

static  void clear_GP_imp_bits__7_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf0);
  
}

static  void clear_H_QUADRANT_imp_bits__1_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3);
  
}

static  void clear_IM10s_imp_bits__13_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3ff0);
  
}

static  void clear_IM10s_imp_bits__9_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3ff);
  
}

static  void clear_IM12_imp_bits__11_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xfff);
  
}

static  void clear_IM16R20_imp_bits__17_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3fffc);
  
}

static  void clear_IM16_imp_bits__19_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xffff0);
  
}

static  void clear_IM16s2_imp_bits__35_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0xf);
    x[0] = x[0] & (~0xfff00000);
  
}

static  void clear_IM16sR20_imp_bits__17_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3fffc);
  
}

static  void clear_IM16s_imp_bits__17_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3fffc);
  
}

static  void clear_IM17R13_imp_bits__36_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1f);
    x[0] = x[0] & (~0xfff00000);
  
}

static  void clear_IM17R14_imp_bits__16_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1ffff);
  
}

static  void clear_IM17R15_imp_bits__16_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1ffff);
  
}

static  void clear_IM17R4_imp_bits__20_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1ffff0);
  
}

static  void clear_IM17R5_imp_bits__20_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1ffff0);
  
}

static  void clear_IM17R9_imp_bits__35_19__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0xf);
    x[0] = x[0] & (~0xfff80000);
  
}

static  void clear_IM17sR13_imp_bits__36_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1f);
    x[0] = x[0] & (~0xfff00000);
  
}

static  void clear_IM22_imp_bits__44_23__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1fff);
    x[0] = x[0] & (~0xff800000);
  
}

static  void clear_IM32_imp_bits__33_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3);
    x[0] = x[0] & (~0xfffffffc);
  
}

static  void clear_IM32sR11_imp_bits__33_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3);
    x[0] = x[0] & (~0xfffffffc);
  
}

static  void clear_IM32sR18_imp_bits__33_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3);
    x[0] = x[0] & (~0xfffffffc);
  
}

static  void clear_IM32s_imp_bits__33_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3);
    x[0] = x[0] & (~0xfffffffc);
  
}

static  void clear_IM3_imp_bits__4_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1c);
  
}

static  void clear_IM4_imp_bits__23_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf00000);
  
}

static  void clear_IM4_imp_bits__3_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf);
  
}

static  void clear_IM4_imp_bits__7_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf0);
  
}

static  void clear_IM5_imp_bits__12_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1f00);
  
}

static  void clear_IM8s_imp_bits__11_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xff0);
  
}

static  void clear_IM8s_imp_bits__7_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xff);
  
}

static  void clear_IM8s_imp_bits__9_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3fc);
  
}

static  void clear_IM9_2_imp_bits__34_26__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x7);
    x[0] = x[0] & (~0xfc000000);
  
}

static  void clear_IM9_3_imp_bits__24_16__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1ff0000);
  
}

static  void clear_IM9_4_imp_bits__14_6__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x7fc0);
  
}

static  void clear_IM9_imp_bits__11_3__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xff8);
  
}

static  void clear_IM9_imp_bits__44_36__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1ff0);
  
}

static  void clear_IM9_imp_bits__8_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1ff);
  
}

static  void clear_IPAGE_imp_bits__5_4__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x30);
  
}

static  void clear_IPAGE_imp_bits__8_7__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x180);
  
}

static  void clear_IP_REG_imp_bits__46_38__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x7fc0);
  
}

static  void clear_ITER_CNT_imp_bits__29_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3ff00000);
  
}

static  void clear_ITER_CNT_imp_bits__9_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3ff);
  
}

static  void clear_Is16_imp_bits__19_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xffff0);
  
}

static  void clear_Iu16_imp_bits__19_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xffff0);
  
}

static  void clear_JMP_CND_AU_imp_bits__40_39__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x180);
  
}

static  void clear_JMP_CND_CC_imp_bits__42_39__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x780);
  
}

static  void clear_LI17R8_imp_bits__36_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1f);
    x[0] = x[0] & (~0xfff00000);
  
}

static  void clear_LINE1b_imp_bits__16_16__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x10000);
  
}

static  void clear_LINE1b_imp_bits__42_42__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x400);
  
}

static  void clear_LINE1b_imp_bits__8_8__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x100);
  
}

static  void clear_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x114);
  
}

static  void clear_LOOP_SIZE_R10_imp_bits__39_30__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0xff);
    x[0] = x[0] & (~0xc0000000);
  
}

static  void clear_MIN1b_imp_bits__40_40__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x100);
  
}

static  void clear_NCO_FREQ_imp_bits__42_30_x_19_3__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x7ff);
    x[0] = x[0] & (~0xc00ffff8);
  
}

static  void clear_NCO_K_imp_bits__29_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3ff00000);
  
}

static  void clear_NCO_K_imp_bits__9_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3ff);
  
}

static  void clear_NCO_MODE_imp_bits__44_43__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1800);
  
}

static  void clear_NCO_NEG_POS_imp_bits__2_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x4);
  
}

static  void clear_RFdes_imp_bits__2_0__width_7(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x7);
  
}

static  void clear_ROT_MODE_imp_bits__5_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3f);
  
}

static  void clear_RPAGE_imp_bits__1_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3);
  
}

static  void clear_RPAGE_imp_bits__4_3__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x18);
  
}

static  void clear_S0_CONJ_imp_bits__0_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1);
  
}

static  void clear_S0_MODE_imp_bits__5_2__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3c);
  
}

static  void clear_S0_PREC_imp_bits__3_2__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xc);
  
}

static  void clear_S0_SIGN_imp_bits__1_1__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x2);
  
}

static  void clear_S1_MODE_imp_bits__9_6__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3c0);
  
}

static  void clear_S1_PREC_imp_bits__5_4__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x30);
  
}

static  void clear_S2_MODE_imp_bits__12_10__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1c00);
  
}

static  void clear_S2_PREC_imp_bits__7_6__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xc0);
  
}

static  void clear_UNS1b_imp_bits__41_41__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x200);
  
}

static  void clear_UNSIGN_SIGN_imp_bits__16_16__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x10000);
  
}

static  void clear_UNSIGN_SIGN_imp_bits__20_20__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x100000);
  
}

static  void clear_WB_PREC_imp_bits__9_8__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x300);
  
}

static  void clear_opA_imp_bits__48_34__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1fffc);
  
}

static  void clear_opB_imp_bits__49_49_x_33_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x20003);
    x[0] = x[0] & (~0xfff00000);
  
}

static  void clear_opS_HI_imp_bits__51_27__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0xfffff);
    x[0] = x[0] & (~0xf8000000);
  
}

static  void clear_opS_LO_imp_bits__26_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x7fffffc);
  
}

static  void clear_opVau_imp_bits__5_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3c);
  
}

static  void clear_opVd_imp_bits__8_6__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1c0);
  
}

static  void clear_opVr_imp_bits__15_9__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xfe00);
  
}

static  void clear_opVrot_imp_bits__16_16__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x10000);
  
}

static  void clear_opVs0_imp_bits__17_17__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x20000);
  
}

static  void clear_opVs1_imp_bits__18_18__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x40000);
  
}

static  void clear_opVs2_imp_bits__19_19__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x80000);
  
}

static  void clear_opX_imp_bits__55_54__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0xc00000);
  
}

static  void clear_opZ_imp_bits__1_0__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3);
  
}

static  void clear_reserved_imp_bits__10_9_x_6_5__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x660);
  
}

static  void clear_reserved_imp_bits__11_6__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xfc0);
  
}

static  void clear_reserved_imp_bits__11_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf00);
  
}

static  void clear_reserved_imp_bits__12_10__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1c00);
  
}

static  void clear_reserved_imp_bits__13_13__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x2000);
  
}

static  void clear_reserved_imp_bits__13_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3f00);
  
}

static  void clear_reserved_imp_bits__14_12__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x7000);
  
}

static  void clear_reserved_imp_bits__14_12_x_11_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x7f00);
  
}

static  void clear_reserved_imp_bits__14_12_x_3_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x700f);
  
}

static  void clear_reserved_imp_bits__15_12__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf000);
  
}

static  void clear_reserved_imp_bits__15_12_x_11_8__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xff00);
  
}

static  void clear_reserved_imp_bits__16_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1ffff);
  
}

static  void clear_reserved_imp_bits__16_15_x_11_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x18ff0);
  
}

static  void clear_reserved_imp_bits__16_15_x_11_5_x_3_0__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x18fef);
  
}

static  void clear_reserved_imp_bits__16_16__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x10000);
  
}

static  void clear_reserved_imp_bits__18_16__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x70000);
  
}

static  void clear_reserved_imp_bits__19_4__width_25(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xffff0);
  
}

static  void clear_reserved_imp_bits__33_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3);
    x[0] = x[0] & (~0xfff00000);
  
}

static  void clear_reserved_imp_bits__38_24__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x7f);
    x[0] = x[0] & (~0xff000000);
  
}

static  void clear_reserved_imp_bits__38_37__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x60);
  
}

static  void clear_reserved_imp_bits__39_24__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0xff);
    x[0] = x[0] & (~0xff000000);
  
}

static  void clear_reserved_imp_bits__39_2__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0xff);
    x[0] = x[0] & (~0xfffffffc);
  
}

static  void clear_reserved_imp_bits__3_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf);
  
}

static  void clear_reserved_imp_bits__44_40__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1f00);
  
}

static  void clear_reserved_imp_bits__44_40_x_29_24__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x1f00);
    x[0] = x[0] & (~0x3f000000);
  
}

static  void clear_reserved_imp_bits__45_45__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x2000);
  
}

static  void clear_reserved_imp_bits__45_45_x_33_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x2003);
    x[0] = x[0] & (~0xfff00000);
  
}

static  void clear_reserved_imp_bits__45_45_x_38_38_x_33_20__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x2043);
    x[0] = x[0] & (~0xfff00000);
  
}

static  void clear_reserved_imp_bits__45_45_x_39_38__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x20c0);
  
}

static  void clear_reserved_imp_bits__45_45_x_40_37__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x21e0);
  
}

static  void clear_reserved_imp_bits__45_45_x_44_43__width_64(unsigned *x ATTRIBUTE_UNUSED) {
    x[1] = x[1] & (~0x3800);
  
}

static  void clear_reserved_imp_bits__4_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x1f);
  
}

static  void clear_reserved_imp_bits__4_3__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x18);
  
}

static  void clear_reserved_imp_bits__4_4__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x10);
  
}

static  void clear_reserved_imp_bits__5_2__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x3c);
  
}

static  void clear_reserved_imp_bits__5_4__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x30);
  
}

static  void clear_reserved_imp_bits__7_7__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x80);
  
}

static  void clear_reserved_imp_bits__7_7_x_6_3__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0xf8);
  
}

static  void clear_reserved_imp_bits__8_8_x_2_0__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x107);
  
}

static  void clear_reserved_imp_bits__8_8_x_5_4__width_15(unsigned *x ATTRIBUTE_UNUSED) {
    x[0] = x[0] & (~0x130);
  
}


static bfd_uint64_t IM10n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 512UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM10n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM11n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 1024UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM11n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM12n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 2048UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM12n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM13n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 4096UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM13n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM14n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 8192UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM14n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM15n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 16384UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM15n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM3n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 4UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM3n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM4n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 8UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM4n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM5n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 16UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM5n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM6n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 32UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM6n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM7n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 64UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM7n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM8n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 128UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM8n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t IM9n_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 256UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand IM9n is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t ITER_CNT_1_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (1ULL <= n && n <= 1024ULL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand ITER_CNT_1 is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t LOOP_SIZE_R10_1_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (1ULL <= n && n <= 1024ULL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand LOOP_SIZE_R10_1 is out of bounds"));
      return -1;
  }
  return n;
};
static bfd_uint64_t XTRM_N_checker(bfd_uint64_t n, bool check_only){
  bfd_boolean result1 = FALSE;
  bfd_boolean result2 = FALSE;
  if (n <= 2048UL) {
      result1 = TRUE;
  } 
  result2 = TRUE;
  
  if (check_only) {
       return (result1 && result2) ? 1 : 0;}
  
  if (!(result1 && result2)) {
      as_fatal(_("Operand XTRM_N is out of bounds"));
      return -1;
  }
  return n;
};
// For field AA
static enum_field _sym1[] = { { "a0", 0 }, { "a1", 1 }, { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym2 = { _sym1 , 4 };

// For field AA23
static enum_field _sym3[] = { { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym4 = { _sym3 , 2 };

// For field AA23_imp_bits__44_43_
static enum_field _sym5[] = { { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym6 = { _sym5 , 2 };

// For field AA_imp_bits__10_9_
static enum_field _sym7[] = { { "a0", 0 }, { "a1", 1 }, { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym8 = { _sym7 , 4 };

// For field AA_imp_bits__13_12_
static enum_field _sym9[] = { { "a0", 0 }, { "a1", 1 }, { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym10 = { _sym9 , 4 };

// For field AA_imp_bits__44_43_
static enum_field _sym11[] = { { "a0", 0 }, { "a1", 1 }, { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym12 = { _sym11 , 4 };

// For field AA_imp_bits__5_4_
static enum_field _sym13[] = { { "a0", 0 }, { "a1", 1 }, { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym14 = { _sym13 , 4 };

// For field AA_imp_bits__7_6_
static enum_field _sym15[] = { { "a0", 0 }, { "a1", 1 }, { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym16 = { _sym15 , 4 };

// For field AAsubAM
static enum_field _sym17[] = { { "+", 0 }, { "-", 1 }, };
static enum_fields _sym18 = { _sym17 , 2 };

// For field AAsubAM_imp_bits__16_16_
static enum_field _sym19[] = { { "+", 0 }, { "-", 1 }, };
static enum_fields _sym20 = { _sym19 , 2 };

// For field AAsubAM_imp_bits__7_7_
static enum_field _sym21[] = { { "+", 0 }, { "-", 1 }, };
static enum_fields _sym22 = { _sym21 , 2 };

// For field AM
static enum_field _sym23[] = { { "a0", 0 }, { "a1", 1 }, { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym24 = { _sym23 , 4 };

// For field AM_imp_bits__1_0_
static enum_field _sym25[] = { { "a0", 0 }, { "a1", 1 }, { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym26 = { _sym25 , 4 };

// For field AM_imp_bits__5_4_
static enum_field _sym27[] = { { "a0", 0 }, { "a1", 1 }, { "a2", 2 }, { "a3", 3 }, };
static enum_fields _sym28 = { _sym27 , 4 };

// For field AS
static enum_field _sym29[] = { { "as0", 0 }, { "as1", 1 }, { "as10", 10 }, { "as11", 11 }, { "as12", 12 }, { "as13", 13 }, { "as14", 14 }, { "as15", 15 }, { "as2", 2 }, { "as3", 3 }, { "as4", 4 }, { "as5", 5 }, { "as6", 6 }, { "as7", 7 }, { "as8", 8 }, { "as9", 9 }, };
static enum_fields _sym30 = { _sym29 , 16 };

// For field AS0
static enum_field _sym31[] = { { "", 0 }, { "as0", 1 }, { "as0,", 1 }, };
static enum_fields _sym32 = { _sym31 , 3 };

// For field AS0_imp_bits__0_0_
static enum_field _sym33[] = { { "", 0 }, { "as0", 1 }, { "as0,", 1 }, };
static enum_fields _sym34 = { _sym33 , 3 };

// For field AS1
static enum_field _sym35[] = { { "", 0 }, { "as1", 1 }, { "as1,", 1 }, };
static enum_fields _sym36 = { _sym35 , 3 };

// For field AS10
static enum_field _sym37[] = { { "", 0 }, { "as10", 1 }, { "as10,", 1 }, };
static enum_fields _sym38 = { _sym37 , 3 };

// For field AS10_imp_bits__10_10_
static enum_field _sym39[] = { { "", 0 }, { "as10", 1 }, { "as10,", 1 }, };
static enum_fields _sym40 = { _sym39 , 3 };

// For field AS11
static enum_field _sym41[] = { { "", 0 }, { "as11", 1 }, { "as11,", 1 }, };
static enum_fields _sym42 = { _sym41 , 3 };

// For field AS11_imp_bits__11_11_
static enum_field _sym43[] = { { "", 0 }, { "as11", 1 }, { "as11,", 1 }, };
static enum_fields _sym44 = { _sym43 , 3 };

// For field AS12
static enum_field _sym45[] = { { "", 0 }, { "as12", 1 }, { "as12,", 1 }, };
static enum_fields _sym46 = { _sym45 , 3 };

// For field AS12_imp_bits__12_12_
static enum_field _sym47[] = { { "", 0 }, { "as12", 1 }, { "as12,", 1 }, };
static enum_fields _sym48 = { _sym47 , 3 };

// For field AS13
static enum_field _sym49[] = { { "", 0 }, { "as13", 1 }, { "as13,", 1 }, };
static enum_fields _sym50 = { _sym49 , 3 };

// For field AS13_imp_bits__13_13_
static enum_field _sym51[] = { { "", 0 }, { "as13", 1 }, { "as13,", 1 }, };
static enum_fields _sym52 = { _sym51 , 3 };

// For field AS14
static enum_field _sym53[] = { { "", 0 }, { "as14", 1 }, { "as14,", 1 }, };
static enum_fields _sym54 = { _sym53 , 3 };

// For field AS14_imp_bits__14_14_
static enum_field _sym55[] = { { "", 0 }, { "as14", 1 }, { "as14,", 1 }, };
static enum_fields _sym56 = { _sym55 , 3 };

// For field AS15
static enum_field _sym57[] = { { "", 0 }, { "as15", 1 }, { "as15,", 1 }, };
static enum_fields _sym58 = { _sym57 , 3 };

// For field AS15_imp_bits__15_15_
static enum_field _sym59[] = { { "", 0 }, { "as15", 1 }, { "as15,", 1 }, };
static enum_fields _sym60 = { _sym59 , 3 };

// For field AS1_imp_bits__1_1_
static enum_field _sym61[] = { { "", 0 }, { "as1", 1 }, { "as1,", 1 }, };
static enum_fields _sym62 = { _sym61 , 3 };

// For field AS2
static enum_field _sym63[] = { { "", 0 }, { "as2", 1 }, { "as2,", 1 }, };
static enum_fields _sym64 = { _sym63 , 3 };

// For field AS2_imp_bits__2_2_
static enum_field _sym65[] = { { "", 0 }, { "as2", 1 }, { "as2,", 1 }, };
static enum_fields _sym66 = { _sym65 , 3 };

// For field AS3
static enum_field _sym67[] = { { "", 0 }, { "as3", 1 }, { "as3,", 1 }, };
static enum_fields _sym68 = { _sym67 , 3 };

// For field AS3_imp_bits__3_3_
static enum_field _sym69[] = { { "", 0 }, { "as3", 1 }, { "as3,", 1 }, };
static enum_fields _sym70 = { _sym69 , 3 };

// For field AS4
static enum_field _sym71[] = { { "", 0 }, { "as4", 1 }, { "as4,", 1 }, };
static enum_fields _sym72 = { _sym71 , 3 };

// For field AS4_imp_bits__4_4_
static enum_field _sym73[] = { { "", 0 }, { "as4", 1 }, { "as4,", 1 }, };
static enum_fields _sym74 = { _sym73 , 3 };

// For field AS5
static enum_field _sym75[] = { { "", 0 }, { "as5", 1 }, { "as5,", 1 }, };
static enum_fields _sym76 = { _sym75 , 3 };

// For field AS5_imp_bits__5_5_
static enum_field _sym77[] = { { "", 0 }, { "as5", 1 }, { "as5,", 1 }, };
static enum_fields _sym78 = { _sym77 , 3 };

// For field AS6
static enum_field _sym79[] = { { "", 0 }, { "as6", 1 }, { "as6,", 1 }, };
static enum_fields _sym80 = { _sym79 , 3 };

// For field AS6_imp_bits__6_6_
static enum_field _sym81[] = { { "", 0 }, { "as6", 1 }, { "as6,", 1 }, };
static enum_fields _sym82 = { _sym81 , 3 };

// For field AS7
static enum_field _sym83[] = { { "", 0 }, { "as7", 1 }, { "as7,", 1 }, };
static enum_fields _sym84 = { _sym83 , 3 };

// For field AS7_imp_bits__7_7_
static enum_field _sym85[] = { { "", 0 }, { "as7", 1 }, { "as7,", 1 }, };
static enum_fields _sym86 = { _sym85 , 3 };

// For field AS8
static enum_field _sym87[] = { { "", 0 }, { "as8", 1 }, { "as8,", 1 }, };
static enum_fields _sym88 = { _sym87 , 3 };

// For field AS8_imp_bits__8_8_
static enum_field _sym89[] = { { "", 0 }, { "as8", 1 }, { "as8,", 1 }, };
static enum_fields _sym90 = { _sym89 , 3 };

// For field AS9
static enum_field _sym91[] = { { "", 0 }, { "as9", 1 }, { "as9,", 1 }, };
static enum_fields _sym92 = { _sym91 , 3 };

// For field AS9_imp_bits__9_9_
static enum_field _sym93[] = { { "", 0 }, { "as9", 1 }, { "as9,", 1 }, };
static enum_fields _sym94 = { _sym93 , 3 };

// For field AS_imp_bits__23_20_
static enum_field _sym95[] = { { "as0", 0 }, { "as1", 1 }, { "as10", 10 }, { "as11", 11 }, { "as12", 12 }, { "as13", 13 }, { "as14", 14 }, { "as15", 15 }, { "as2", 2 }, { "as3", 3 }, { "as4", 4 }, { "as5", 5 }, { "as6", 6 }, { "as7", 7 }, { "as8", 8 }, { "as9", 9 }, };
static enum_fields _sym96 = { _sym95 , 16 };

// For field AS_imp_bits__3_0_
static enum_field _sym97[] = { { "as0", 0 }, { "as1", 1 }, { "as10", 10 }, { "as11", 11 }, { "as12", 12 }, { "as13", 13 }, { "as14", 14 }, { "as15", 15 }, { "as2", 2 }, { "as3", 3 }, { "as4", 4 }, { "as5", 5 }, { "as6", 6 }, { "as7", 7 }, { "as8", 8 }, { "as9", 9 }, };
static enum_fields _sym98 = { _sym97 , 16 };

// For field AS_imp_bits__40_37_
static enum_field _sym99[] = { { "as0", 0 }, { "as1", 1 }, { "as10", 10 }, { "as11", 11 }, { "as12", 12 }, { "as13", 13 }, { "as14", 14 }, { "as15", 15 }, { "as2", 2 }, { "as3", 3 }, { "as4", 4 }, { "as5", 5 }, { "as6", 6 }, { "as7", 7 }, { "as8", 8 }, { "as9", 9 }, };
static enum_fields _sym100 = { _sym99 , 16 };

// For field AS_imp_bits__41_38_
static enum_field _sym101[] = { { "as0", 0 }, { "as1", 1 }, { "as10", 10 }, { "as11", 11 }, { "as12", 12 }, { "as13", 13 }, { "as14", 14 }, { "as15", 15 }, { "as2", 2 }, { "as3", 3 }, { "as4", 4 }, { "as5", 5 }, { "as6", 6 }, { "as7", 7 }, { "as8", 8 }, { "as9", 9 }, };
static enum_fields _sym102 = { _sym101 , 16 };

// For field AS_imp_bits__6_3_
static enum_field _sym103[] = { { "as0", 0 }, { "as1", 1 }, { "as10", 10 }, { "as11", 11 }, { "as12", 12 }, { "as13", 13 }, { "as14", 14 }, { "as15", 15 }, { "as2", 2 }, { "as3", 3 }, { "as4", 4 }, { "as5", 5 }, { "as6", 6 }, { "as7", 7 }, { "as8", 8 }, { "as9", 9 }, };
static enum_fields _sym104 = { _sym103 , 16 };

// For field AU_PREC
static enum_field _sym105[] = { { "double", 3 }, { "single", 2 }, };
static enum_fields _sym106 = { _sym105 , 2 };

// For field AU_PREC_imp_bits__1_0_
static enum_field _sym107[] = { { "double", 3 }, { "single", 2 }, };
static enum_fields _sym108 = { _sym107 , 2 };

// For field B32
static enum_field _sym109[] = { { ".h", 0 }, { ".w", 1 }, };
static enum_fields _sym110 = { _sym109 , 2 };

// For field BR_EN
static enum_field _sym111[] = { { "", 0 }, { ".br", 1 }, };
static enum_fields _sym112 = { _sym111 , 2 };

// For field BR_LLR_MODE
static enum_field _sym113[] = { { ".br", 0 }, { ".br.llr4", 4 }, { ".br.llr4half", 5 }, { ".br.llr8", 6 }, { ".br.llr8half", 7 }, };
static enum_fields _sym114 = { _sym113 , 5 };

// For field BR_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2_
static enum_field _sym115[] = { { ".br", 0 }, { ".br.llr4", 4 }, { ".br.llr4half", 5 }, { ".br.llr8", 6 }, { ".br.llr8half", 7 }, };
static enum_fields _sym116 = { _sym115 , 5 };

// For field CGU_CONJ
static enum_field _sym117[] = { { "neg", 1 }, { "pos", 0 }, };
static enum_fields _sym118 = { _sym117 , 2 };

// For field CGU_MODE
static enum_field _sym119[] = { { "dl_sc", 1 }, { "dl_sc1", 0 }, { "lte_gold", 4 }, { "ul_sc_long", 2 }, { "ul_sc_short", 3 }, };
static enum_fields _sym120 = { _sym119 , 5 };

// For field CGU_OVSF
static enum_field _sym121[] = { { "non_ovsf", 0 }, { "ovsf", 1 }, };
static enum_fields _sym122 = { _sym121 , 2 };

// For field CGU_REG
static enum_field _sym123[] = { { "dl_sc_x", 0 }, { "dl_sc_x_bak", 10 }, { "dl_sc_y", 1 }, { "gold_x1", 6 }, { "gold_x2", 7 }, { "ovsf_dl_sc_y", 8 }, { "ovsf_dl_sc_y_bak", 9 }, { "ovsf_num", 5 }, { "ul_sc_short", 4 }, { "ul_sc_x", 2 }, { "ul_sc_y", 3 }, };
static enum_fields _sym124 = { _sym123 , 11 };

// For field CGU_REG_imp_bits__41_38_
static enum_field _sym125[] = { { "dl_sc_x", 0 }, { "dl_sc_x_bak", 10 }, { "dl_sc_y", 1 }, { "gold_x1", 6 }, { "gold_x2", 7 }, { "ovsf_dl_sc_y", 8 }, { "ovsf_dl_sc_y_bak", 9 }, { "ovsf_num", 5 }, { "ul_sc_short", 4 }, { "ul_sc_x", 2 }, { "ul_sc_y", 3 }, };
static enum_fields _sym126 = { _sym125 , 11 };

// For field COND
static enum_field _sym127[] = { { "", 0 }, { ".al", 0 }, { ".cc", 14 }, { ".cs", 1 }, { ".eq", 4 }, { ".ge", 5 }, { ".gt", 6 }, { ".hi", 3 }, { ".hs", 14 }, { ".le", 9 }, { ".lo", 1 }, { ".ls", 12 }, { ".lt", 10 }, { ".mi", 8 }, { ".ne", 11 }, { ".nv", 15 }, { ".pl", 7 }, { ".vc", 13 }, { ".vs", 2 }, };
static enum_fields _sym128 = { _sym127 , 19 };

// For field COND_imp_bits__15_12_
static enum_field _sym129[] = { { "", 0 }, { ".al", 0 }, { ".cc", 14 }, { ".cs", 1 }, { ".eq", 4 }, { ".ge", 5 }, { ".gt", 6 }, { ".hi", 3 }, { ".hs", 14 }, { ".le", 9 }, { ".lo", 1 }, { ".ls", 12 }, { ".lt", 10 }, { ".mi", 8 }, { ".ne", 11 }, { ".nv", 15 }, { ".pl", 7 }, { ".vc", 13 }, { ".vs", 2 }, };
static enum_fields _sym130 = { _sym129 , 19 };

// For field DES_AS
static enum_field _sym131[] = { { "", 0 }, { "s", 1 }, };
static enum_fields _sym132 = { _sym131 , 2 };

// For field EV1b
static enum_field _sym133[] = { { "_INVALID_CMP_MODE_", 1 }, { "cmp_all", 0 }, };
static enum_fields _sym134 = { _sym133 , 2 };

// For field EV1b_imp_bits__43_43_
static enum_field _sym135[] = { { "_INVALID_CMP_MODE_", 1 }, { "cmp_all", 0 }, };
static enum_fields _sym136 = { _sym135 , 2 };

// For field G0
static enum_field _sym137[] = { { "", 0 }, { "g0", 1 }, { "g0,", 1 }, };
static enum_fields _sym138 = { _sym137 , 3 };

// For field G0_imp_bits__0_0_
static enum_field _sym139[] = { { "", 0 }, { "g0", 1 }, { "g0,", 1 }, };
static enum_fields _sym140 = { _sym139 , 3 };

// For field G1
static enum_field _sym141[] = { { "", 0 }, { "g1", 1 }, { "g1,", 1 }, };
static enum_fields _sym142 = { _sym141 , 3 };

// For field G10
static enum_field _sym143[] = { { "", 0 }, { "g10", 1 }, { "g10,", 1 }, };
static enum_fields _sym144 = { _sym143 , 3 };

// For field G10_imp_bits__10_10_
static enum_field _sym145[] = { { "", 0 }, { "g10", 1 }, { "g10,", 1 }, };
static enum_fields _sym146 = { _sym145 , 3 };

// For field G11
static enum_field _sym147[] = { { "", 0 }, { "g11", 1 }, { "g11,", 1 }, };
static enum_fields _sym148 = { _sym147 , 3 };

// For field G11_imp_bits__11_11_
static enum_field _sym149[] = { { "", 0 }, { "g11", 1 }, { "g11,", 1 }, };
static enum_fields _sym150 = { _sym149 , 3 };

// For field G1_imp_bits__1_1_
static enum_field _sym151[] = { { "", 0 }, { "g1", 1 }, { "g1,", 1 }, };
static enum_fields _sym152 = { _sym151 , 3 };

// For field G2
static enum_field _sym153[] = { { "", 0 }, { "g2", 1 }, { "g2,", 1 }, };
static enum_fields _sym154 = { _sym153 , 3 };

// For field G2_imp_bits__2_2_
static enum_field _sym155[] = { { "", 0 }, { "g2", 1 }, { "g2,", 1 }, };
static enum_fields _sym156 = { _sym155 , 3 };

// For field G3
static enum_field _sym157[] = { { "", 0 }, { "g3", 1 }, { "g3,", 1 }, };
static enum_fields _sym158 = { _sym157 , 3 };

// For field G3_imp_bits__3_3_
static enum_field _sym159[] = { { "", 0 }, { "g3", 1 }, { "g3,", 1 }, };
static enum_fields _sym160 = { _sym159 , 3 };

// For field G4
static enum_field _sym161[] = { { "", 0 }, { "g4", 1 }, { "g4,", 1 }, };
static enum_fields _sym162 = { _sym161 , 3 };

// For field G4_imp_bits__4_4_
static enum_field _sym163[] = { { "", 0 }, { "g4", 1 }, { "g4,", 1 }, };
static enum_fields _sym164 = { _sym163 , 3 };

// For field G5
static enum_field _sym165[] = { { "", 0 }, { "g5", 1 }, { "g5,", 1 }, };
static enum_fields _sym166 = { _sym165 , 3 };

// For field G5_imp_bits__5_5_
static enum_field _sym167[] = { { "", 0 }, { "g5", 1 }, { "g5,", 1 }, };
static enum_fields _sym168 = { _sym167 , 3 };

// For field G6
static enum_field _sym169[] = { { "", 0 }, { "g6", 1 }, { "g6,", 1 }, };
static enum_fields _sym170 = { _sym169 , 3 };

// For field G6_imp_bits__6_6_
static enum_field _sym171[] = { { "", 0 }, { "g6", 1 }, { "g6,", 1 }, };
static enum_fields _sym172 = { _sym171 , 3 };

// For field G7
static enum_field _sym173[] = { { "", 0 }, { "g7", 1 }, { "g7,", 1 }, };
static enum_fields _sym174 = { _sym173 , 3 };

// For field G7_imp_bits__7_7_
static enum_field _sym175[] = { { "", 0 }, { "g7", 1 }, { "g7,", 1 }, };
static enum_fields _sym176 = { _sym175 , 3 };

// For field G8
static enum_field _sym177[] = { { "", 0 }, { "g8", 1 }, { "g8,", 1 }, };
static enum_fields _sym178 = { _sym177 , 3 };

// For field G8_imp_bits__8_8_
static enum_field _sym179[] = { { "", 0 }, { "g8", 1 }, { "g8,", 1 }, };
static enum_fields _sym180 = { _sym179 , 3 };

// For field G9
static enum_field _sym181[] = { { "", 0 }, { "g9", 1 }, { "g9,", 1 }, };
static enum_fields _sym182 = { _sym181 , 3 };

// For field G9_imp_bits__9_9_
static enum_field _sym183[] = { { "", 0 }, { "g9", 1 }, { "g9,", 1 }, };
static enum_fields _sym184 = { _sym183 , 3 };

// For field GP
static enum_field _sym185[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym186 = { _sym185 , 12 };

// For field GP1
static enum_field _sym187[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym188 = { _sym187 , 12 };

// For field GP1_0to7
static enum_field _sym189[] = { { "g0", 0 }, { "g1", 1 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, };
static enum_fields _sym190 = { _sym189 , 8 };

// For field GP1_0to7_imp_bits__6_4_
static enum_field _sym191[] = { { "g0", 0 }, { "g1", 1 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, };
static enum_fields _sym192 = { _sym191 , 8 };

// For field GP1_8to11
static enum_field _sym193[] = { { "g10", 2 }, { "g11", 3 }, { "g8", 0 }, { "g9", 1 }, };
static enum_fields _sym194 = { _sym193 , 4 };

// For field GP1_8to11_imp_bits__5_4_
static enum_field _sym195[] = { { "g10", 2 }, { "g11", 3 }, { "g8", 0 }, { "g9", 1 }, };
static enum_fields _sym196 = { _sym195 , 4 };

// For field GP1_imp_bits__11_8_
static enum_field _sym197[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym198 = { _sym197 , 12 };

// For field GP1_imp_bits__33_30_
static enum_field _sym199[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym200 = { _sym199 , 12 };

// For field GP1_imp_bits__7_4_
static enum_field _sym201[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym202 = { _sym201 , 12 };

// For field GP2
static enum_field _sym203[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym204 = { _sym203 , 12 };

// For field GP2_0to7
static enum_field _sym205[] = { { "g0", 0 }, { "g1", 1 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, };
static enum_fields _sym206 = { _sym205 , 8 };

// For field GP2_0to7_imp_bits__10_8_
static enum_field _sym207[] = { { "g0", 0 }, { "g1", 1 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, };
static enum_fields _sym208 = { _sym207 , 8 };

// For field GP2_8to11
static enum_field _sym209[] = { { "g10", 2 }, { "g11", 3 }, { "g8", 0 }, { "g9", 1 }, };
static enum_fields _sym210 = { _sym209 , 4 };

// For field GP2_8to11_imp_bits__9_8_
static enum_field _sym211[] = { { "g10", 2 }, { "g11", 3 }, { "g8", 0 }, { "g9", 1 }, };
static enum_fields _sym212 = { _sym211 , 4 };

// For field GP2_imp_bits__11_8_
static enum_field _sym213[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym214 = { _sym213 , 12 };

// For field GP_0to7
static enum_field _sym215[] = { { "g0", 0 }, { "g1", 1 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, };
static enum_fields _sym216 = { _sym215 , 8 };

// For field GP_0to7_imp_bits__2_0_
static enum_field _sym217[] = { { "g0", 0 }, { "g1", 1 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, };
static enum_fields _sym218 = { _sym217 , 8 };

// For field GP_0to7_imp_bits__36_34_
static enum_field _sym219[] = { { "g0", 0 }, { "g1", 1 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, };
static enum_fields _sym220 = { _sym219 , 8 };

// For field GP_8to11
static enum_field _sym221[] = { { "g10", 2 }, { "g11", 3 }, { "g8", 0 }, { "g9", 1 }, };
static enum_fields _sym222 = { _sym221 , 4 };

// For field GP_8to11_imp_bits__1_0_
static enum_field _sym223[] = { { "g10", 2 }, { "g11", 3 }, { "g8", 0 }, { "g9", 1 }, };
static enum_fields _sym224 = { _sym223 , 4 };

// For field GP_8to11_imp_bits__35_34_
static enum_field _sym225[] = { { "g10", 2 }, { "g11", 3 }, { "g8", 0 }, { "g9", 1 }, };
static enum_fields _sym226 = { _sym225 , 4 };

// For field GP_imp_bits__23_20_
static enum_field _sym227[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym228 = { _sym227 , 12 };

// For field GP_imp_bits__37_34_
static enum_field _sym229[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym230 = { _sym229 , 12 };

// For field GP_imp_bits__3_0_
static enum_field _sym231[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym232 = { _sym231 , 12 };

// For field GP_imp_bits__7_4_
static enum_field _sym233[] = { { "g0", 0 }, { "g1", 1 }, { "g10", 10 }, { "g11", 11 }, { "g2", 2 }, { "g3", 3 }, { "g4", 4 }, { "g5", 5 }, { "g6", 6 }, { "g7", 7 }, { "g8", 8 }, { "g9", 9 }, };
static enum_fields _sym234 = { _sym233 , 12 };

// For field JMP_CND
static enum_field _sym235[] = { { "", 0 }, { ".al", 0 }, { ".au_an", 25 }, { ".au_ap", 24 }, { ".au_nan", 27 }, { ".au_nap", 26 }, { ".cc", 14 }, { ".cs", 1 }, { ".eq", 4 }, { ".ge", 5 }, { ".gt", 6 }, { ".hi", 3 }, { ".hs", 14 }, { ".le", 9 }, { ".lo", 1 }, { ".ls", 12 }, { ".lt", 10 }, { ".mi", 8 }, { ".ne", 11 }, { ".nv", 15 }, { ".pl", 7 }, { ".vc", 13 }, { ".vs", 2 }, };
static enum_fields _sym236 = { _sym235 , 23 };

// For field JMP_CND_AU
static enum_field _sym237[] = { { ".au_an", 1 }, { ".au_ap", 0 }, { ".au_nan", 3 }, { ".au_nap", 2 }, };
static enum_fields _sym238 = { _sym237 , 4 };

// For field JMP_CND_AU_imp_bits__40_39_
static enum_field _sym239[] = { { ".au_an", 1 }, { ".au_ap", 0 }, { ".au_nan", 3 }, { ".au_nap", 2 }, };
static enum_fields _sym240 = { _sym239 , 4 };

// For field JMP_CND_CC
static enum_field _sym241[] = { { "", 0 }, { ".al", 0 }, { ".cc", 14 }, { ".cs", 1 }, { ".eq", 4 }, { ".ge", 5 }, { ".gt", 6 }, { ".hi", 3 }, { ".hs", 14 }, { ".le", 9 }, { ".lo", 1 }, { ".ls", 12 }, { ".lt", 10 }, { ".mi", 8 }, { ".ne", 11 }, { ".nv", 15 }, { ".pl", 7 }, { ".vc", 13 }, { ".vs", 2 }, };
static enum_fields _sym242 = { _sym241 , 19 };

// For field JMP_CND_CC_imp_bits__42_39_
static enum_field _sym243[] = { { "", 0 }, { ".al", 0 }, { ".cc", 14 }, { ".cs", 1 }, { ".eq", 4 }, { ".ge", 5 }, { ".gt", 6 }, { ".hi", 3 }, { ".hs", 14 }, { ".le", 9 }, { ".lo", 1 }, { ".ls", 12 }, { ".lt", 10 }, { ".mi", 8 }, { ".ne", 11 }, { ".nv", 15 }, { ".pl", 7 }, { ".vc", 13 }, { ".vs", 2 }, };
static enum_fields _sym244 = { _sym243 , 19 };

// For field LLR_MODE
static enum_field _sym245[] = { { "", 0 }, { ".llr4", 4 }, { ".llr4half", 5 }, { ".llr8", 6 }, { ".llr8half", 7 }, };
static enum_fields _sym246 = { _sym245 , 5 };

// For field LLR_MODE_imp_bits__8_8_x_4_4_x_2_2_
static enum_field _sym247[] = { { "", 0 }, { ".llr4", 4 }, { ".llr4half", 5 }, { ".llr8", 6 }, { ".llr8half", 7 }, };
static enum_fields _sym248 = { _sym247 , 5 };

// For field MIN1b
static enum_field _sym249[] = { { "max", 0 }, { "min", 1 }, };
static enum_fields _sym250 = { _sym249 , 2 };

// For field MIN1b_imp_bits__40_40_
static enum_field _sym251[] = { { "max", 0 }, { "min", 1 }, };
static enum_fields _sym252 = { _sym251 , 2 };

// For field NCO_MODE
static enum_field _sym253[] = { { "normal", 0 }, { "radix2", 2 }, { "singles", 1 }, };
static enum_fields _sym254 = { _sym253 , 3 };

// For field NCO_MODE_imp_bits__44_43_
static enum_field _sym255[] = { { "normal", 0 }, { "radix2", 2 }, { "singles", 1 }, };
static enum_fields _sym256 = { _sym255 , 3 };

// For field NCO_REG
static enum_field _sym257[] = { { "nco_freq", 0 }, { "nco_k", 3 }, { "nco_phase", 1 }, };
static enum_fields _sym258 = { _sym257 , 3 };

// For field RFdes
static enum_field _sym259[] = { { "R0", 0 }, { "R1", 1 }, { "R2", 2 }, { "R3", 3 }, { "R4", 4 }, { "R5", 5 }, { "R6", 6 }, { "R7", 7 }, };
static enum_fields _sym260 = { _sym259 , 8 };

// For field RFdes_imp_bits__2_0_
static enum_field _sym261[] = { { "R0", 0 }, { "R1", 1 }, { "R2", 2 }, { "R3", 3 }, { "R4", 4 }, { "R5", 5 }, { "R6", 6 }, { "R7", 7 }, };
static enum_fields _sym262 = { _sym261 , 8 };

// For field ROT_MODE
static enum_field _sym263[] = { { "R0R1r1", 24 }, { "R0R1r2", 25 }, { "R0R1r4", 26 }, { "R0R1r8", 27 }, { "R0R1rND1", 29 }, { "R0R1rND2", 31 }, { "R0R1rND4", 30 }, { "R0r1", 8 }, { "R0r2", 9 }, { "R0r4", 10 }, { "R0r8", 11 }, { "R0rND1", 13 }, { "R0rND2", 15 }, { "R0rND4", 14 }, { "R1r1", 16 }, { "R1r2", 17 }, { "R1r4", 18 }, { "R1r8", 19 }, { "R1rND1", 21 }, { "R1rND2", 23 }, { "R1rND4", 22 }, { "R2R3r1", 56 }, { "R2R3r2", 57 }, { "R2R3r4", 58 }, { "R2R3r8", 59 }, { "R2R3rND1", 61 }, { "R2R3rND2", 63 }, { "R2R3rND4", 62 }, { "R2r1", 40 }, { "R2r2", 41 }, { "R2r4", 42 }, { "R2r8", 43 }, { "R2rND1", 45 }, { "R2rND2", 47 }, { "R2rND4", 46 }, { "R3r1", 48 }, { "R3r2", 49 }, { "R3r4", 50 }, { "R3r8", 51 }, { "R3rND1", 53 }, { "R3rND2", 55 }, { "R3rND4", 54 }, { "_ROT_MODE_0_", 0 }, { "_ROT_MODE_1_", 1 }, { "_ROT_MODE_2_", 2 }, { "_ROT_MODE_32_", 32 }, { "_ROT_MODE_33_", 33 }, { "_ROT_MODE_34_", 34 }, { "_ROT_MODE_35_", 35 }, { "_ROT_MODE_36_", 36 }, { "_ROT_MODE_37_", 37 }, { "_ROT_MODE_38_", 38 }, { "_ROT_MODE_39_", 39 }, { "_ROT_MODE_3_", 3 }, { "_ROT_MODE_4_", 4 }, { "_ROT_MODE_5_", 5 }, { "_ROT_MODE_6_", 6 }, { "_ROT_MODE_7_", 7 }, };
static enum_fields _sym264 = { _sym263 , 58 };

// For field ROT_MODE_imp_bits__5_0_
static enum_field _sym265[] = { { "R0R1r1", 24 }, { "R0R1r2", 25 }, { "R0R1r4", 26 }, { "R0R1r8", 27 }, { "R0R1rND1", 29 }, { "R0R1rND2", 31 }, { "R0R1rND4", 30 }, { "R0r1", 8 }, { "R0r2", 9 }, { "R0r4", 10 }, { "R0r8", 11 }, { "R0rND1", 13 }, { "R0rND2", 15 }, { "R0rND4", 14 }, { "R1r1", 16 }, { "R1r2", 17 }, { "R1r4", 18 }, { "R1r8", 19 }, { "R1rND1", 21 }, { "R1rND2", 23 }, { "R1rND4", 22 }, { "R2R3r1", 56 }, { "R2R3r2", 57 }, { "R2R3r4", 58 }, { "R2R3r8", 59 }, { "R2R3rND1", 61 }, { "R2R3rND2", 63 }, { "R2R3rND4", 62 }, { "R2r1", 40 }, { "R2r2", 41 }, { "R2r4", 42 }, { "R2r8", 43 }, { "R2rND1", 45 }, { "R2rND2", 47 }, { "R2rND4", 46 }, { "R3r1", 48 }, { "R3r2", 49 }, { "R3r4", 50 }, { "R3r8", 51 }, { "R3rND1", 53 }, { "R3rND2", 55 }, { "R3rND4", 54 }, { "_ROT_MODE_0_", 0 }, { "_ROT_MODE_1_", 1 }, { "_ROT_MODE_2_", 2 }, { "_ROT_MODE_32_", 32 }, { "_ROT_MODE_33_", 33 }, { "_ROT_MODE_34_", 34 }, { "_ROT_MODE_35_", 35 }, { "_ROT_MODE_36_", 36 }, { "_ROT_MODE_37_", 37 }, { "_ROT_MODE_38_", 38 }, { "_ROT_MODE_39_", 39 }, { "_ROT_MODE_3_", 3 }, { "_ROT_MODE_4_", 4 }, { "_ROT_MODE_5_", 5 }, { "_ROT_MODE_6_", 6 }, { "_ROT_MODE_7_", 7 }, };
static enum_fields _sym266 = { _sym265 , 58 };

// For field S0_CONJ
static enum_field _sym267[] = { { "", 0 }, { "S0conj", 1 }, };
static enum_fields _sym268 = { _sym267 , 2 };

// For field S0_CONJ_imp_bits__0_0_
static enum_field _sym269[] = { { "", 0 }, { "S0conj", 1 }, };
static enum_fields _sym270 = { _sym269 , 2 };

// For field S0_MODE
static enum_field _sym271[] = { { "S0abs", 12 }, { "S0coef1", 3 }, { "S0coef2", 4 }, { "S0fft1", 11 }, { "S0fft2", 10 }, { "S0fft3", 9 }, { "S0fft4", 6 }, { "S0fft5", 7 }, { "S0fftn", 8 }, { "S0nop", 0 }, { "S0normal", 1 }, { "S0ones", 6 }, { "S0pad0", 14 }, { "S0pad1", 15 }, { "S0singles", 2 }, { "S0straight", 5 }, { "S0zeros", 7 }, };
static enum_fields _sym272 = { _sym271 , 17 };

// For field S0_MODE_imp_bits__5_2_
static enum_field _sym273[] = { { "S0abs", 12 }, { "S0coef1", 3 }, { "S0coef2", 4 }, { "S0fft1", 11 }, { "S0fft2", 10 }, { "S0fft3", 9 }, { "S0fft4", 6 }, { "S0fft5", 7 }, { "S0fftn", 8 }, { "S0nop", 0 }, { "S0normal", 1 }, { "S0ones", 6 }, { "S0pad0", 14 }, { "S0pad1", 15 }, { "S0singles", 2 }, { "S0straight", 5 }, { "S0zeros", 7 }, };
static enum_fields _sym274 = { _sym273 , 17 };

// For field S0_PREC
static enum_field _sym275[] = { { "double", 3 }, { "half", 1 }, { "half_fixed", 0 }, { "single", 2 }, };
static enum_fields _sym276 = { _sym275 , 4 };

// For field S0_PREC_imp_bits__3_2_
static enum_field _sym277[] = { { "double", 3 }, { "half", 1 }, { "half_fixed", 0 }, { "single", 2 }, };
static enum_fields _sym278 = { _sym277 , 4 };

// For field S0_SIGN
static enum_field _sym279[] = { { "", 0 }, { "S0chs", 1 }, };
static enum_fields _sym280 = { _sym279 , 2 };

// For field S0_SIGN_imp_bits__1_1_
static enum_field _sym281[] = { { "", 0 }, { "S0chs", 1 }, };
static enum_fields _sym282 = { _sym281 , 2 };

// For field S1_MODE
static enum_field _sym283[] = { { "S1cgu_normal", 6 }, { "S1cgu_r2c_im0", 13 }, { "S1cgu_r2c_re0", 15 }, { "S1cgu_udfc", 3 }, { "S1conj", 10 }, { "S1nco", 11 }, { "S1nop", 0 }, { "S1normal", 1 }, { "S1ones", 7 }, { "S1r2c", 8 }, { "S1r2c_conj", 9 }, { "S1r2c_im0", 12 }, { "S1r2c_re0", 14 }, { "S1reverse", 15 }, { "S1straight", 4 }, { "S1udfc", 2 }, { "S1udfr", 5 }, };
static enum_fields _sym284 = { _sym283 , 17 };

// For field S1_MODE_imp_bits__9_6_
static enum_field _sym285[] = { { "S1cgu_normal", 6 }, { "S1cgu_r2c_im0", 13 }, { "S1cgu_r2c_re0", 15 }, { "S1cgu_udfc", 3 }, { "S1conj", 10 }, { "S1nco", 11 }, { "S1nop", 0 }, { "S1normal", 1 }, { "S1ones", 7 }, { "S1r2c", 8 }, { "S1r2c_conj", 9 }, { "S1r2c_im0", 12 }, { "S1r2c_re0", 14 }, { "S1reverse", 15 }, { "S1straight", 4 }, { "S1udfc", 2 }, { "S1udfr", 5 }, };
static enum_fields _sym286 = { _sym285 , 17 };

// For field S1_PREC
static enum_field _sym287[] = { { "double", 3 }, { "half", 1 }, { "half_fixed", 0 }, { "single", 2 }, };
static enum_fields _sym288 = { _sym287 , 4 };

// For field S1_PREC_imp_bits__5_4_
static enum_field _sym289[] = { { "double", 3 }, { "half", 1 }, { "half_fixed", 0 }, { "single", 2 }, };
static enum_fields _sym290 = { _sym289 , 4 };

// For field S2_MODE
static enum_field _sym291[] = { { "S2coef1", 4 }, { "S2fft1", 7 }, { "S2fft2", 6 }, { "S2fft3", 5 }, { "S2fft4", 2 }, { "S2fft5", 3 }, { "S2fftn", 4 }, { "S2nop", 0 }, { "S2normal", 1 }, { "S2ones", 2 }, { "S2zeros", 3 }, };
static enum_fields _sym292 = { _sym291 , 11 };

// For field S2_MODE_imp_bits__12_10_
static enum_field _sym293[] = { { "S2coef1", 4 }, { "S2fft1", 7 }, { "S2fft2", 6 }, { "S2fft3", 5 }, { "S2fft4", 2 }, { "S2fft5", 3 }, { "S2fftn", 4 }, { "S2nop", 0 }, { "S2normal", 1 }, { "S2ones", 2 }, { "S2zeros", 3 }, };
static enum_fields _sym294 = { _sym293 , 11 };

// For field S2_PREC
static enum_field _sym295[] = { { "double", 3 }, { "half", 1 }, { "half_fixed", 0 }, { "single", 2 }, };
static enum_fields _sym296 = { _sym295 , 4 };

// For field S2_PREC_imp_bits__7_6_
static enum_field _sym297[] = { { "double", 3 }, { "half", 1 }, { "half_fixed", 0 }, { "single", 2 }, };
static enum_fields _sym298 = { _sym297 , 4 };

// For field UNS1b
static enum_field _sym299[] = { { "signed", 0 }, { "unsigned", 1 }, };
static enum_fields _sym300 = { _sym299 , 2 };

// For field UNS1b_imp_bits__41_41_
static enum_field _sym301[] = { { "signed", 0 }, { "unsigned", 1 }, };
static enum_fields _sym302 = { _sym301 , 2 };

// For field UNSIGN_SIGN
static enum_field _sym303[] = { { "", 0 }, { ".s", 1 }, };
static enum_fields _sym304 = { _sym303 , 2 };

// For field UNSIGN_SIGN_COND
static enum_field _sym305[] = { { ".al", 0 }, { ".cc", 14 }, { ".cs", 1 }, { ".eq", 4 }, { ".ge", 5 }, { ".gt", 6 }, { ".hi", 3 }, { ".hs", 14 }, { ".le", 9 }, { ".lo", 1 }, { ".ls", 12 }, { ".lt", 10 }, { ".mi", 8 }, { ".ne", 11 }, { ".nv", 15 }, { ".pl", 7 }, { ".s.al", 16 }, { ".s.cc", 30 }, { ".s.cs", 17 }, { ".s.eq", 20 }, { ".s.ge", 21 }, { ".s.gt", 22 }, { ".s.hi", 19 }, { ".s.hs", 30 }, { ".s.le", 25 }, { ".s.lo", 17 }, { ".s.ls", 28 }, { ".s.lt", 26 }, { ".s.mi", 24 }, { ".s.ne", 27 }, { ".s.nv", 31 }, { ".s.pl", 23 }, { ".s.vc", 29 }, { ".s.vs", 18 }, { ".vc", 13 }, { ".vs", 2 }, };
static enum_fields _sym306 = { _sym305 , 36 };

// For field UNSIGN_SIGN_imp_bits__16_16_
static enum_field _sym307[] = { { "", 0 }, { ".s", 1 }, };
static enum_fields _sym308 = { _sym307 , 2 };

// For field UNSIGN_SIGN_imp_bits__20_20_
static enum_field _sym309[] = { { "", 0 }, { ".s", 1 }, };
static enum_fields _sym310 = { _sym309 , 2 };

// For field WB_PREC
static enum_field _sym311[] = { { "double", 3 }, { "half", 1 }, { "half_fixed", 0 }, { "single", 2 }, };
static enum_fields _sym312 = { _sym311 , 4 };

// For field WB_PREC_imp_bits__9_8_
static enum_field _sym313[] = { { "double", 3 }, { "half", 1 }, { "half_fixed", 0 }, { "single", 2 }, };
static enum_fields _sym314 = { _sym313 , 4 };

// Instruction operands.
static struct adl_field ppc_operands [] = {
  {"AA23_imp_bits__44_43__width_64",1,196,2,set_AA23_imp_bits__44_43__width_64,clear_AA23_imp_bits__44_43__width_64,-1,-1,-1,0,&_sym6,0},	// 0
  {"AA_imp_bits__10_9__width_15",0,195,2,set_AA_imp_bits__10_9__width_15,clear_AA_imp_bits__10_9__width_15,-1,-1,-1,0,&_sym8,0},	// 1
  {"AA_imp_bits__13_12__width_25",0,195,2,set_AA_imp_bits__13_12__width_25,clear_AA_imp_bits__13_12__width_25,-1,-1,-1,0,&_sym10,0},	// 2
  {"AA_imp_bits__44_43__width_64",0,195,2,set_AA_imp_bits__44_43__width_64,clear_AA_imp_bits__44_43__width_64,-1,-1,-1,0,&_sym12,0},	// 3
  {"AA_imp_bits__5_4__width_15",0,195,2,set_AA_imp_bits__5_4__width_15,clear_AA_imp_bits__5_4__width_15,-1,-1,-1,0,&_sym14,0},	// 4
  {"AA_imp_bits__7_6__width_15",0,195,2,set_AA_imp_bits__7_6__width_15,clear_AA_imp_bits__7_6__width_15,-1,-1,-1,0,&_sym16,0},	// 5
  {"AAsubAM_imp_bits__16_16__width_25",8,197,1,set_AAsubAM_imp_bits__16_16__width_25,clear_AAsubAM_imp_bits__16_16__width_25,-1,-1,-1,0,&_sym20,0},	// 6
  {"AAsubAM_imp_bits__7_7__width_15",8,197,1,set_AAsubAM_imp_bits__7_7__width_15,clear_AAsubAM_imp_bits__7_7__width_15,-1,-1,-1,0,&_sym22,0},	// 7
  {"AM_imp_bits__1_0__width_15",11,198,2,set_AM_imp_bits__1_0__width_15,clear_AM_imp_bits__1_0__width_15,-1,-1,-1,0,&_sym26,0},	// 8
  {"AM_imp_bits__5_4__width_25",11,198,2,set_AM_imp_bits__5_4__width_25,clear_AM_imp_bits__5_4__width_25,-1,-1,-1,0,&_sym28,0},	// 9
  {"AS0_imp_bits__0_0__width_25",15,200,1,set_AS0_imp_bits__0_0__width_25,clear_AS0_imp_bits__0_0__width_25,-1,-1,-1,0,&_sym34,0},	// 10
  {"AS10_imp_bits__10_10__width_25",18,202,1,set_AS10_imp_bits__10_10__width_25,clear_AS10_imp_bits__10_10__width_25,-1,-1,-1,0,&_sym40,0},	// 11
  {"AS11_imp_bits__11_11__width_25",20,203,1,set_AS11_imp_bits__11_11__width_25,clear_AS11_imp_bits__11_11__width_25,-1,-1,-1,0,&_sym44,0},	// 12
  {"AS12_imp_bits__12_12__width_25",22,204,1,set_AS12_imp_bits__12_12__width_25,clear_AS12_imp_bits__12_12__width_25,-1,-1,-1,0,&_sym48,0},	// 13
  {"AS13_imp_bits__13_13__width_25",24,205,1,set_AS13_imp_bits__13_13__width_25,clear_AS13_imp_bits__13_13__width_25,-1,-1,-1,0,&_sym52,0},	// 14
  {"AS14_imp_bits__14_14__width_25",26,206,1,set_AS14_imp_bits__14_14__width_25,clear_AS14_imp_bits__14_14__width_25,-1,-1,-1,0,&_sym56,0},	// 15
  {"AS15_imp_bits__15_15__width_25",28,207,1,set_AS15_imp_bits__15_15__width_25,clear_AS15_imp_bits__15_15__width_25,-1,-1,-1,0,&_sym60,0},	// 16
  {"AS1_imp_bits__1_1__width_25",17,201,1,set_AS1_imp_bits__1_1__width_25,clear_AS1_imp_bits__1_1__width_25,-1,-1,-1,0,&_sym62,0},	// 17
  {"AS2_imp_bits__2_2__width_25",31,208,1,set_AS2_imp_bits__2_2__width_25,clear_AS2_imp_bits__2_2__width_25,-1,-1,-1,0,&_sym66,0},	// 18
  {"AS3_imp_bits__3_3__width_25",33,209,1,set_AS3_imp_bits__3_3__width_25,clear_AS3_imp_bits__3_3__width_25,-1,-1,-1,0,&_sym70,0},	// 19
  {"AS4_imp_bits__4_4__width_25",35,210,1,set_AS4_imp_bits__4_4__width_25,clear_AS4_imp_bits__4_4__width_25,-1,-1,-1,0,&_sym74,0},	// 20
  {"AS5_imp_bits__5_5__width_25",37,211,1,set_AS5_imp_bits__5_5__width_25,clear_AS5_imp_bits__5_5__width_25,-1,-1,-1,0,&_sym78,0},	// 21
  {"AS6_imp_bits__6_6__width_25",39,212,1,set_AS6_imp_bits__6_6__width_25,clear_AS6_imp_bits__6_6__width_25,-1,-1,-1,0,&_sym82,0},	// 22
  {"AS7_imp_bits__7_7__width_25",41,213,1,set_AS7_imp_bits__7_7__width_25,clear_AS7_imp_bits__7_7__width_25,-1,-1,-1,0,&_sym86,0},	// 23
  {"AS8_imp_bits__8_8__width_25",43,214,1,set_AS8_imp_bits__8_8__width_25,clear_AS8_imp_bits__8_8__width_25,-1,-1,-1,0,&_sym90,0},	// 24
  {"AS9_imp_bits__9_9__width_25",45,215,1,set_AS9_imp_bits__9_9__width_25,clear_AS9_imp_bits__9_9__width_25,-1,-1,-1,0,&_sym94,0},	// 25
  {"AS_imp_bits__23_20__width_64",14,199,4,set_AS_imp_bits__23_20__width_64,clear_AS_imp_bits__23_20__width_64,-1,-1,-1,0,&_sym96,0},	// 26
  {"AS_imp_bits__3_0__width_15",14,199,4,set_AS_imp_bits__3_0__width_15,clear_AS_imp_bits__3_0__width_15,-1,-1,-1,0,&_sym98,0},	// 27
  {"AS_imp_bits__3_0__width_25",14,199,4,set_AS_imp_bits__3_0__width_25,clear_AS_imp_bits__3_0__width_25,-1,-1,-1,0,&_sym98,0},	// 28
  {"AS_imp_bits__40_37__width_64",14,199,4,set_AS_imp_bits__40_37__width_64,clear_AS_imp_bits__40_37__width_64,-1,-1,-1,0,&_sym100,0},	// 29
  {"AS_imp_bits__41_38__width_64",14,199,4,set_AS_imp_bits__41_38__width_64,clear_AS_imp_bits__41_38__width_64,-1,-1,-1,0,&_sym102,0},	// 30
  {"AS_imp_bits__6_3__width_15",14,199,4,set_AS_imp_bits__6_3__width_15,clear_AS_imp_bits__6_3__width_15,-1,-1,-1,0,&_sym104,0},	// 31
  {"AU_PREC_imp_bits__1_0__width_15",52,216,2,set_AU_PREC_imp_bits__1_0__width_15,clear_AU_PREC_imp_bits__1_0__width_15,-1,-1,-1,0,&_sym108,0},	// 32
  {"BIT48_imp_bits__48_48__width_64",55,218,1,set_BIT48_imp_bits__48_48__width_64,clear_BIT48_imp_bits__48_48__width_64,-1,-1,-1,0,0,0},	// 33
  {"BR_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15",58,220,3,set_BR_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15,clear_BR_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15,-1,-1,-1,0,&_sym116,0},	// 34
  {"CGU_MODE_OVSF_CONJ_imp_bits__41_41_x_40_40_x_44_42__width_64",62,223,5,set_CGU_MODE_OVSF_CONJ_imp_bits__41_41_x_40_40_x_44_42__width_64,clear_CGU_MODE_OVSF_CONJ_imp_bits__41_41_x_40_40_x_44_42__width_64,-1,-1,-1,0,0,0},	// 35
  {"CGU_REG_imp_bits__41_38__width_64",65,225,4,set_CGU_REG_imp_bits__41_38__width_64,clear_CGU_REG_imp_bits__41_38__width_64,-1,-1,-1,0,&_sym126,0},	// 36
  {"COND_imp_bits__15_12__width_25",67,226,4,set_COND_imp_bits__15_12__width_25,clear_COND_imp_bits__15_12__width_25,-1,-1,-1,0,&_sym130,0},	// 37
  {"CREG_ADDR_FIELD_imp_bits__11_4__width_25",69,227,8,set_CREG_ADDR_FIELD_imp_bits__11_4__width_25,clear_CREG_ADDR_FIELD_imp_bits__11_4__width_25,-1,-1,-1,0,0,0},	// 38
  {"EV1b_imp_bits__43_43__width_64",73,230,1,set_EV1b_imp_bits__43_43__width_64,clear_EV1b_imp_bits__43_43__width_64,-1,-1,-1,0,&_sym136,0},	// 39
  {"FFT_SIZE_imp_bits__5_3__width_15",75,231,3,set_FFT_SIZE_imp_bits__5_3__width_15,clear_FFT_SIZE_imp_bits__5_3__width_15,-1,-1,-1,0,0,0},	// 40
  {"G0_imp_bits__0_0__width_25",77,232,1,set_G0_imp_bits__0_0__width_25,clear_G0_imp_bits__0_0__width_25,-1,-1,-1,0,&_sym140,0},	// 41
  {"G10_imp_bits__10_10__width_25",80,234,1,set_G10_imp_bits__10_10__width_25,clear_G10_imp_bits__10_10__width_25,-1,-1,-1,0,&_sym146,0},	// 42
  {"G11_imp_bits__11_11__width_25",82,235,1,set_G11_imp_bits__11_11__width_25,clear_G11_imp_bits__11_11__width_25,-1,-1,-1,0,&_sym150,0},	// 43
  {"G1_imp_bits__1_1__width_25",79,233,1,set_G1_imp_bits__1_1__width_25,clear_G1_imp_bits__1_1__width_25,-1,-1,-1,0,&_sym152,0},	// 44
  {"G2_imp_bits__2_2__width_25",85,236,1,set_G2_imp_bits__2_2__width_25,clear_G2_imp_bits__2_2__width_25,-1,-1,-1,0,&_sym156,0},	// 45
  {"G3_imp_bits__3_3__width_25",87,237,1,set_G3_imp_bits__3_3__width_25,clear_G3_imp_bits__3_3__width_25,-1,-1,-1,0,&_sym160,0},	// 46
  {"G4_imp_bits__4_4__width_25",89,238,1,set_G4_imp_bits__4_4__width_25,clear_G4_imp_bits__4_4__width_25,-1,-1,-1,0,&_sym164,0},	// 47
  {"G5_imp_bits__5_5__width_25",91,239,1,set_G5_imp_bits__5_5__width_25,clear_G5_imp_bits__5_5__width_25,-1,-1,-1,0,&_sym168,0},	// 48
  {"G6_imp_bits__6_6__width_25",93,240,1,set_G6_imp_bits__6_6__width_25,clear_G6_imp_bits__6_6__width_25,-1,-1,-1,0,&_sym172,0},	// 49
  {"G7_imp_bits__7_7__width_25",95,241,1,set_G7_imp_bits__7_7__width_25,clear_G7_imp_bits__7_7__width_25,-1,-1,-1,0,&_sym176,0},	// 50
  {"G8_imp_bits__8_8__width_25",97,242,1,set_G8_imp_bits__8_8__width_25,clear_G8_imp_bits__8_8__width_25,-1,-1,-1,0,&_sym180,0},	// 51
  {"G9_imp_bits__9_9__width_25",99,243,1,set_G9_imp_bits__9_9__width_25,clear_G9_imp_bits__9_9__width_25,-1,-1,-1,0,&_sym184,0},	// 52
  {"GP1_0to7_imp_bits__6_4__width_25",103,246,3,set_GP1_0to7_imp_bits__6_4__width_25,clear_GP1_0to7_imp_bits__6_4__width_25,-1,-1,-1,0,&_sym192,0},	// 53
  {"GP1_8to11_imp_bits__5_4__width_25",105,247,2,set_GP1_8to11_imp_bits__5_4__width_25,clear_GP1_8to11_imp_bits__5_4__width_25,-1,-1,-1,0,&_sym196,0},	// 54
  {"GP1_imp_bits__11_8__width_25",102,245,4,set_GP1_imp_bits__11_8__width_25,clear_GP1_imp_bits__11_8__width_25,-1,-1,-1,0,&_sym198,0},	// 55
  {"GP1_imp_bits__33_30__width_64",102,245,4,set_GP1_imp_bits__33_30__width_64,clear_GP1_imp_bits__33_30__width_64,-1,-1,-1,0,&_sym200,0},	// 56
  {"GP1_imp_bits__7_4__width_25",102,245,4,set_GP1_imp_bits__7_4__width_25,clear_GP1_imp_bits__7_4__width_25,-1,-1,-1,0,&_sym202,0},	// 57
  {"GP2_0to7_imp_bits__10_8__width_25",111,249,3,set_GP2_0to7_imp_bits__10_8__width_25,clear_GP2_0to7_imp_bits__10_8__width_25,-1,-1,-1,0,&_sym208,0},	// 58
  {"GP2_8to11_imp_bits__9_8__width_25",113,250,2,set_GP2_8to11_imp_bits__9_8__width_25,clear_GP2_8to11_imp_bits__9_8__width_25,-1,-1,-1,0,&_sym212,0},	// 59
  {"GP2_imp_bits__11_8__width_25",110,248,4,set_GP2_imp_bits__11_8__width_25,clear_GP2_imp_bits__11_8__width_25,-1,-1,-1,0,&_sym214,0},	// 60
  {"GP_0to7_imp_bits__2_0__width_25",116,251,3,set_GP_0to7_imp_bits__2_0__width_25,clear_GP_0to7_imp_bits__2_0__width_25,-1,-1,-1,0,&_sym218,0},	// 61
  {"GP_0to7_imp_bits__36_34__width_64",116,251,3,set_GP_0to7_imp_bits__36_34__width_64,clear_GP_0to7_imp_bits__36_34__width_64,-1,-1,-1,0,&_sym220,0},	// 62
  {"GP_8to11_imp_bits__1_0__width_25",119,252,2,set_GP_8to11_imp_bits__1_0__width_25,clear_GP_8to11_imp_bits__1_0__width_25,-1,-1,-1,0,&_sym224,0},	// 63
  {"GP_8to11_imp_bits__35_34__width_64",119,252,2,set_GP_8to11_imp_bits__35_34__width_64,clear_GP_8to11_imp_bits__35_34__width_64,-1,-1,-1,0,&_sym226,0},	// 64
  {"GP_imp_bits__23_20__width_64",101,244,4,set_GP_imp_bits__23_20__width_64,clear_GP_imp_bits__23_20__width_64,-1,-1,-1,0,&_sym228,0},	// 65
  {"GP_imp_bits__37_34__width_64",101,244,4,set_GP_imp_bits__37_34__width_64,clear_GP_imp_bits__37_34__width_64,-1,-1,-1,0,&_sym230,0},	// 66
  {"GP_imp_bits__3_0__width_15",101,244,4,set_GP_imp_bits__3_0__width_15,clear_GP_imp_bits__3_0__width_15,-1,-1,-1,0,&_sym232,0},	// 67
  {"GP_imp_bits__3_0__width_25",101,244,4,set_GP_imp_bits__3_0__width_25,clear_GP_imp_bits__3_0__width_25,-1,-1,-1,0,&_sym232,0},	// 68
  {"GP_imp_bits__7_4__width_25",101,244,4,set_GP_imp_bits__7_4__width_25,clear_GP_imp_bits__7_4__width_25,-1,-1,-1,0,&_sym234,0},	// 69
  {"H_QUADRANT_imp_bits__1_0__width_15",127,253,2,set_H_QUADRANT_imp_bits__1_0__width_15,clear_H_QUADRANT_imp_bits__1_0__width_15,-1,-1,-1,0,0,0},	// 70
  {"IM10s_imp_bits__13_4__width_25",131,256,10,set_IM10s_imp_bits__13_4__width_25,clear_IM10s_imp_bits__13_4__width_25,-1,-1,-1,0,0,0},	// 71
  {"IM10s_imp_bits__9_0__width_15",131,256,10,set_IM10s_imp_bits__9_0__width_15,clear_IM10s_imp_bits__9_0__width_15,-1,-1,-1,0,0,0},	// 72
  {"IM12_imp_bits__11_0__width_25",138,261,12,set_IM12_imp_bits__11_0__width_25,clear_IM12_imp_bits__11_0__width_25,-1,-1,-1,0,0,0},	// 73
  {"IM16R20_imp_bits__17_2__width_64",149,271,16,set_IM16R20_imp_bits__17_2__width_64,clear_IM16R20_imp_bits__17_2__width_64,-1,20,64,0,0,0},	// 74
  {"IM16_imp_bits__19_4__width_25",148,270,16,set_IM16_imp_bits__19_4__width_25,clear_IM16_imp_bits__19_4__width_25,-1,-1,-1,0,0,0},	// 75
  {"IM16s2_imp_bits__35_20__width_64",154,274,16,set_IM16s2_imp_bits__35_20__width_64,clear_IM16s2_imp_bits__35_20__width_64,-1,-1,-1,0,0,0},	// 76
  {"IM16sR20_imp_bits__17_2__width_64",156,275,16,set_IM16sR20_imp_bits__17_2__width_64,clear_IM16sR20_imp_bits__17_2__width_64,-1,20,64,0,0,0},	// 77
  {"IM16s_imp_bits__17_2__width_64",153,273,16,set_IM16s_imp_bits__17_2__width_64,clear_IM16s_imp_bits__17_2__width_64,-1,-1,-1,0,0,0},	// 78
  {"IM17R13_imp_bits__36_20__width_64",159,276,17,set_IM17R13_imp_bits__36_20__width_64,clear_IM17R13_imp_bits__36_20__width_64,-1,13,64,0,0,0},	// 79
  {"IM17R14_imp_bits__16_0__width_25",161,277,17,set_IM17R14_imp_bits__16_0__width_25,clear_IM17R14_imp_bits__16_0__width_25,-1,14,64,0,0,0},	// 80
  {"IM17R15_imp_bits__16_0__width_25",163,278,17,set_IM17R15_imp_bits__16_0__width_25,clear_IM17R15_imp_bits__16_0__width_25,-1,15,64,0,0,0},	// 81
  {"IM17R4_imp_bits__20_4__width_25",165,279,17,set_IM17R4_imp_bits__20_4__width_25,clear_IM17R4_imp_bits__20_4__width_25,-1,4,64,0,0,0},	// 82
  {"IM17R5_imp_bits__20_4__width_25",167,280,17,set_IM17R5_imp_bits__20_4__width_25,clear_IM17R5_imp_bits__20_4__width_25,-1,5,64,0,0,0},	// 83
  {"IM17R9_imp_bits__35_19__width_64",169,281,17,set_IM17R9_imp_bits__35_19__width_64,clear_IM17R9_imp_bits__35_19__width_64,-1,9,64,0,0,0},	// 84
  {"IM17sR13_imp_bits__36_20__width_64",171,282,17,set_IM17sR13_imp_bits__36_20__width_64,clear_IM17sR13_imp_bits__36_20__width_64,-1,13,64,0,0,0},	// 85
  {"IM22_imp_bits__44_23__width_64",174,284,22,set_IM22_imp_bits__44_23__width_64,clear_IM22_imp_bits__44_23__width_64,-1,-1,-1,0,0,0},	// 86
  {"IM32_imp_bits__33_2__width_64",177,286,32,set_IM32_imp_bits__33_2__width_64,clear_IM32_imp_bits__33_2__width_64,-1,11,64,0,0,0},	// 87
  {"IM32sR11_imp_bits__33_2__width_64",181,289,32,set_IM32sR11_imp_bits__33_2__width_64,clear_IM32sR11_imp_bits__33_2__width_64,-1,11,64,0,0,0},	// 88
  {"IM32sR18_imp_bits__33_2__width_64",183,290,32,set_IM32sR18_imp_bits__33_2__width_64,clear_IM32sR18_imp_bits__33_2__width_64,-1,18,64,0,0,0},	// 89
  {"IM32s_imp_bits__33_2__width_64",180,288,32,set_IM32s_imp_bits__33_2__width_64,clear_IM32s_imp_bits__33_2__width_64,-1,11,64,0,0,0},	// 90
  {"IM3_imp_bits__4_2__width_64",176,285,3,set_IM3_imp_bits__4_2__width_64,clear_IM3_imp_bits__4_2__width_64,-1,-1,-1,0,0,0},	// 91
  {"IM4_imp_bits__23_20__width_64",189,293,4,set_IM4_imp_bits__23_20__width_64,clear_IM4_imp_bits__23_20__width_64,-1,-1,-1,0,0,0},	// 92
  {"IM4_imp_bits__3_0__width_25",189,293,4,set_IM4_imp_bits__3_0__width_25,clear_IM4_imp_bits__3_0__width_25,-1,-1,-1,0,0,0},	// 93
  {"IM4_imp_bits__7_4__width_25",189,293,4,set_IM4_imp_bits__7_4__width_25,clear_IM4_imp_bits__7_4__width_25,-1,-1,-1,0,0,0},	// 94
  {"IM5_imp_bits__12_8__width_25",195,296,5,set_IM5_imp_bits__12_8__width_25,clear_IM5_imp_bits__12_8__width_25,-1,-1,-1,0,0,0},	// 95
  {"IM8s_imp_bits__11_4__width_25",207,307,8,set_IM8s_imp_bits__11_4__width_25,clear_IM8s_imp_bits__11_4__width_25,-1,-1,-1,0,0,0},	// 96
  {"IM8s_imp_bits__7_0__width_15",207,307,8,set_IM8s_imp_bits__7_0__width_15,clear_IM8s_imp_bits__7_0__width_15,-1,-1,-1,0,0,0},	// 97
  {"IM8s_imp_bits__9_2__width_64",207,307,8,set_IM8s_imp_bits__9_2__width_64,clear_IM8s_imp_bits__9_2__width_64,-1,-1,-1,0,0,0},	// 98
  {"IM9_2_imp_bits__34_26__width_64",212,309,9,set_IM9_2_imp_bits__34_26__width_64,clear_IM9_2_imp_bits__34_26__width_64,-1,-1,-1,0,0,0},	// 99
  {"IM9_3_imp_bits__24_16__width_64",214,310,9,set_IM9_3_imp_bits__24_16__width_64,clear_IM9_3_imp_bits__24_16__width_64,-1,-1,-1,0,0,0},	// 100
  {"IM9_4_imp_bits__14_6__width_64",216,311,9,set_IM9_4_imp_bits__14_6__width_64,clear_IM9_4_imp_bits__14_6__width_64,-1,-1,-1,0,0,0},	// 101
  {"IM9_imp_bits__11_3__width_15",211,308,9,set_IM9_imp_bits__11_3__width_15,clear_IM9_imp_bits__11_3__width_15,-1,-1,-1,0,0,0},	// 102
  {"IM9_imp_bits__44_36__width_64",211,308,9,set_IM9_imp_bits__44_36__width_64,clear_IM9_imp_bits__44_36__width_64,-1,-1,-1,0,0,0},	// 103
  {"IM9_imp_bits__8_0__width_15",211,308,9,set_IM9_imp_bits__8_0__width_15,clear_IM9_imp_bits__8_0__width_15,-1,-1,-1,0,0,0},	// 104
  {"IPAGE_imp_bits__5_4__width_15",223,314,2,set_IPAGE_imp_bits__5_4__width_15,clear_IPAGE_imp_bits__5_4__width_15,-1,-1,-1,0,0,0},	// 105
  {"IPAGE_imp_bits__8_7__width_15",223,314,2,set_IPAGE_imp_bits__8_7__width_15,clear_IPAGE_imp_bits__8_7__width_15,-1,-1,-1,0,0,0},	// 106
  {"IP_REG_imp_bits__46_38__width_64",226,315,9,set_IP_REG_imp_bits__46_38__width_64,clear_IP_REG_imp_bits__46_38__width_64,-1,-1,-1,0,0,0},	// 107
  {"ITER_CNT_imp_bits__29_20__width_64",228,316,10,set_ITER_CNT_imp_bits__29_20__width_64,clear_ITER_CNT_imp_bits__29_20__width_64,-1,-1,-1,0,0,0},	// 108
  {"ITER_CNT_imp_bits__9_0__width_15",228,316,10,set_ITER_CNT_imp_bits__9_0__width_15,clear_ITER_CNT_imp_bits__9_0__width_15,-1,-1,-1,0,0,0},	// 109
  {"Is16_imp_bits__19_4__width_25",232,318,16,set_Is16_imp_bits__19_4__width_25,clear_Is16_imp_bits__19_4__width_25,-1,-1,-1,0,0,0},	// 110
  {"Iu16_imp_bits__19_4__width_25",234,319,16,set_Iu16_imp_bits__19_4__width_25,clear_Iu16_imp_bits__19_4__width_25,-1,-1,-1,0,0,0},	// 111
  {"JMP_CND_AU_imp_bits__40_39__width_64",237,321,2,set_JMP_CND_AU_imp_bits__40_39__width_64,clear_JMP_CND_AU_imp_bits__40_39__width_64,-1,-1,-1,0,&_sym240,0},	// 112
  {"JMP_CND_CC_imp_bits__42_39__width_64",239,322,4,set_JMP_CND_CC_imp_bits__42_39__width_64,clear_JMP_CND_CC_imp_bits__42_39__width_64,-1,-1,-1,0,&_sym244,0},	// 113
  {"LI17R8_imp_bits__36_20__width_64",243,325,17,set_LI17R8_imp_bits__36_20__width_64,clear_LI17R8_imp_bits__36_20__width_64,-1,8,64,0,0,0},	// 114
  {"LINE1b_imp_bits__16_16__width_25",245,326,1,set_LINE1b_imp_bits__16_16__width_25,clear_LINE1b_imp_bits__16_16__width_25,-1,-1,-1,0,0,0},	// 115
  {"LINE1b_imp_bits__42_42__width_64",245,326,1,set_LINE1b_imp_bits__42_42__width_64,clear_LINE1b_imp_bits__42_42__width_64,-1,-1,-1,0,0,0},	// 116
  {"LINE1b_imp_bits__8_8__width_15",245,326,1,set_LINE1b_imp_bits__8_8__width_15,clear_LINE1b_imp_bits__8_8__width_15,-1,-1,-1,0,0,0},	// 117
  {"LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15",249,327,3,set_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15,clear_LLR_MODE_imp_bits__8_8_x_4_4_x_2_2__width_15,-1,-1,-1,0,&_sym248,0},	// 118
  {"LOOP_SIZE_R10_imp_bits__39_30__width_64",251,328,10,set_LOOP_SIZE_R10_imp_bits__39_30__width_64,clear_LOOP_SIZE_R10_imp_bits__39_30__width_64,-1,10,64,0,0,0},	// 119
  {"MIN1b_imp_bits__40_40__width_64",254,330,1,set_MIN1b_imp_bits__40_40__width_64,clear_MIN1b_imp_bits__40_40__width_64,-1,-1,-1,0,&_sym252,0},	// 120
  {"NCO_FREQ_imp_bits__42_30_x_19_3__width_64",256,331,30,set_NCO_FREQ_imp_bits__42_30_x_19_3__width_64,clear_NCO_FREQ_imp_bits__42_30_x_19_3__width_64,-1,-1,-1,0,0,0},	// 121
  {"NCO_K_imp_bits__29_20__width_64",259,333,10,set_NCO_K_imp_bits__29_20__width_64,clear_NCO_K_imp_bits__29_20__width_64,-1,-1,-1,0,0,0},	// 122
  {"NCO_K_imp_bits__9_0__width_15",259,333,10,set_NCO_K_imp_bits__9_0__width_15,clear_NCO_K_imp_bits__9_0__width_15,-1,-1,-1,0,0,0},	// 123
  {"NCO_MODE_imp_bits__44_43__width_64",262,334,2,set_NCO_MODE_imp_bits__44_43__width_64,clear_NCO_MODE_imp_bits__44_43__width_64,-1,-1,-1,0,&_sym256,0},	// 124
  {"NCO_NEG_POS_imp_bits__2_2__width_64",264,335,1,set_NCO_NEG_POS_imp_bits__2_2__width_64,clear_NCO_NEG_POS_imp_bits__2_2__width_64,-1,-1,-1,0,0,0},	// 125
  {"RFdes_imp_bits__2_0__width_7",267,337,3,set_RFdes_imp_bits__2_0__width_7,clear_RFdes_imp_bits__2_0__width_7,-1,-1,-1,0,&_sym262,0},	// 126
  {"ROT_MODE_imp_bits__5_0__width_15",269,338,6,set_ROT_MODE_imp_bits__5_0__width_15,clear_ROT_MODE_imp_bits__5_0__width_15,-1,-1,-1,0,&_sym266,0},	// 127
  {"RPAGE_imp_bits__1_0__width_15",271,339,2,set_RPAGE_imp_bits__1_0__width_15,clear_RPAGE_imp_bits__1_0__width_15,-1,-1,-1,0,0,0},	// 128
  {"RPAGE_imp_bits__4_3__width_15",271,339,2,set_RPAGE_imp_bits__4_3__width_15,clear_RPAGE_imp_bits__4_3__width_15,-1,-1,-1,0,0,0},	// 129
  {"S0_CONJ_imp_bits__0_0__width_15",274,340,1,set_S0_CONJ_imp_bits__0_0__width_15,clear_S0_CONJ_imp_bits__0_0__width_15,-1,-1,-1,0,&_sym270,0},	// 130
  {"S0_MODE_imp_bits__5_2__width_15",276,341,4,set_S0_MODE_imp_bits__5_2__width_15,clear_S0_MODE_imp_bits__5_2__width_15,-1,-1,-1,0,&_sym274,0},	// 131
  {"S0_PREC_imp_bits__3_2__width_15",278,342,2,set_S0_PREC_imp_bits__3_2__width_15,clear_S0_PREC_imp_bits__3_2__width_15,-1,-1,-1,0,&_sym278,0},	// 132
  {"S0_SIGN_imp_bits__1_1__width_15",280,343,1,set_S0_SIGN_imp_bits__1_1__width_15,clear_S0_SIGN_imp_bits__1_1__width_15,-1,-1,-1,0,&_sym282,0},	// 133
  {"S1_MODE_imp_bits__9_6__width_15",282,344,4,set_S1_MODE_imp_bits__9_6__width_15,clear_S1_MODE_imp_bits__9_6__width_15,-1,-1,-1,0,&_sym286,0},	// 134
  {"S1_PREC_imp_bits__5_4__width_15",284,345,2,set_S1_PREC_imp_bits__5_4__width_15,clear_S1_PREC_imp_bits__5_4__width_15,-1,-1,-1,0,&_sym290,0},	// 135
  {"S2_MODE_imp_bits__12_10__width_15",286,346,3,set_S2_MODE_imp_bits__12_10__width_15,clear_S2_MODE_imp_bits__12_10__width_15,-1,-1,-1,0,&_sym294,0},	// 136
  {"S2_PREC_imp_bits__7_6__width_15",288,347,2,set_S2_PREC_imp_bits__7_6__width_15,clear_S2_PREC_imp_bits__7_6__width_15,-1,-1,-1,0,&_sym298,0},	// 137
  {"UNS1b_imp_bits__41_41__width_64",291,348,1,set_UNS1b_imp_bits__41_41__width_64,clear_UNS1b_imp_bits__41_41__width_64,-1,-1,-1,0,&_sym302,0},	// 138
  {"UNSIGN_SIGN_imp_bits__16_16__width_25",293,349,1,set_UNSIGN_SIGN_imp_bits__16_16__width_25,clear_UNSIGN_SIGN_imp_bits__16_16__width_25,-1,-1,-1,0,&_sym308,0},	// 139
  {"UNSIGN_SIGN_imp_bits__20_20__width_25",293,349,1,set_UNSIGN_SIGN_imp_bits__20_20__width_25,clear_UNSIGN_SIGN_imp_bits__20_20__width_25,-1,-1,-1,0,&_sym310,0},	// 140
  {"WB_PREC_imp_bits__9_8__width_15",411,351,2,set_WB_PREC_imp_bits__9_8__width_15,clear_WB_PREC_imp_bits__9_8__width_15,-1,-1,-1,0,&_sym314,0},	// 141
  {"opA_imp_bits__48_34__width_64",414,353,15,set_opA_imp_bits__48_34__width_64,clear_opA_imp_bits__48_34__width_64,-1,-1,-1,0,0,0},	// 142
  {"opB_imp_bits__49_49_x_33_20__width_64",416,354,15,set_opB_imp_bits__49_49_x_33_20__width_64,clear_opB_imp_bits__49_49_x_33_20__width_64,-1,-1,-1,0,0,0},	// 143
  {"opS_HI_imp_bits__51_27__width_64",418,355,25,set_opS_HI_imp_bits__51_27__width_64,clear_opS_HI_imp_bits__51_27__width_64,-1,-1,-1,0,0,0},	// 144
  {"opS_LO_imp_bits__26_2__width_64",420,356,25,set_opS_LO_imp_bits__26_2__width_64,clear_opS_LO_imp_bits__26_2__width_64,-1,-1,-1,0,0,0},	// 145
  {"opVau_imp_bits__5_2__width_64",422,357,4,set_opVau_imp_bits__5_2__width_64,clear_opVau_imp_bits__5_2__width_64,-1,-1,-1,0,0,0},	// 146
  {"opVd_imp_bits__8_6__width_64",424,358,3,set_opVd_imp_bits__8_6__width_64,clear_opVd_imp_bits__8_6__width_64,-1,-1,-1,0,0,0},	// 147
  {"opVr_imp_bits__15_9__width_64",426,359,7,set_opVr_imp_bits__15_9__width_64,clear_opVr_imp_bits__15_9__width_64,-1,-1,-1,0,0,0},	// 148
  {"opVrot_imp_bits__16_16__width_64",428,360,1,set_opVrot_imp_bits__16_16__width_64,clear_opVrot_imp_bits__16_16__width_64,-1,-1,-1,0,0,0},	// 149
  {"opVs0_imp_bits__17_17__width_64",430,361,1,set_opVs0_imp_bits__17_17__width_64,clear_opVs0_imp_bits__17_17__width_64,-1,-1,-1,0,0,0},	// 150
  {"opVs1_imp_bits__18_18__width_64",432,362,1,set_opVs1_imp_bits__18_18__width_64,clear_opVs1_imp_bits__18_18__width_64,-1,-1,-1,0,0,0},	// 151
  {"opVs2_imp_bits__19_19__width_64",434,363,1,set_opVs2_imp_bits__19_19__width_64,clear_opVs2_imp_bits__19_19__width_64,-1,-1,-1,0,0,0},	// 152
  {"opX_imp_bits__55_54__width_64",436,364,2,set_opX_imp_bits__55_54__width_64,clear_opX_imp_bits__55_54__width_64,-1,-1,-1,0,0,0},	// 153
  {"opZ_imp_bits__1_0__width_64",438,365,2,set_opZ_imp_bits__1_0__width_64,clear_opZ_imp_bits__1_0__width_64,-1,-1,-1,0,0,0},	// 154
  {"reserved_imp_bits__10_9_x_6_5__width_15",440,155,4,set_reserved_imp_bits__10_9_x_6_5__width_15,clear_reserved_imp_bits__10_9_x_6_5__width_15,-1,-1,-1,0,0,0},	// 155
  {"reserved_imp_bits__11_6__width_25",441,156,6,set_reserved_imp_bits__11_6__width_25,clear_reserved_imp_bits__11_6__width_25,-1,-1,-1,0,0,0},	// 156
  {"reserved_imp_bits__11_8__width_25",442,157,4,set_reserved_imp_bits__11_8__width_25,clear_reserved_imp_bits__11_8__width_25,-1,-1,-1,0,0,0},	// 157
  {"reserved_imp_bits__12_10__width_15",443,158,3,set_reserved_imp_bits__12_10__width_15,clear_reserved_imp_bits__12_10__width_15,-1,-1,-1,0,0,0},	// 158
  {"reserved_imp_bits__13_13__width_25",444,159,1,set_reserved_imp_bits__13_13__width_25,clear_reserved_imp_bits__13_13__width_25,-1,-1,-1,0,0,0},	// 159
  {"reserved_imp_bits__13_8__width_25",445,160,6,set_reserved_imp_bits__13_8__width_25,clear_reserved_imp_bits__13_8__width_25,-1,-1,-1,0,0,0},	// 160
  {"reserved_imp_bits__14_12__width_25",446,161,3,set_reserved_imp_bits__14_12__width_25,clear_reserved_imp_bits__14_12__width_25,-1,-1,-1,0,0,0},	// 161
  {"reserved_imp_bits__14_12_x_11_8__width_25",447,162,7,set_reserved_imp_bits__14_12_x_11_8__width_25,clear_reserved_imp_bits__14_12_x_11_8__width_25,-1,-1,-1,0,0,0},	// 162
  {"reserved_imp_bits__14_12_x_3_0__width_25",448,163,7,set_reserved_imp_bits__14_12_x_3_0__width_25,clear_reserved_imp_bits__14_12_x_3_0__width_25,-1,-1,-1,0,0,0},	// 163
  {"reserved_imp_bits__15_12__width_25",449,164,4,set_reserved_imp_bits__15_12__width_25,clear_reserved_imp_bits__15_12__width_25,-1,-1,-1,0,0,0},	// 164
  {"reserved_imp_bits__15_12_x_11_8__width_25",450,165,8,set_reserved_imp_bits__15_12_x_11_8__width_25,clear_reserved_imp_bits__15_12_x_11_8__width_25,-1,-1,-1,0,0,0},	// 165
  {"reserved_imp_bits__16_0__width_25",451,166,17,set_reserved_imp_bits__16_0__width_25,clear_reserved_imp_bits__16_0__width_25,-1,-1,-1,0,0,0},	// 166
  {"reserved_imp_bits__16_15_x_11_4__width_25",452,167,10,set_reserved_imp_bits__16_15_x_11_4__width_25,clear_reserved_imp_bits__16_15_x_11_4__width_25,-1,-1,-1,0,0,0},	// 167
  {"reserved_imp_bits__16_15_x_11_5_x_3_0__width_25",453,168,13,set_reserved_imp_bits__16_15_x_11_5_x_3_0__width_25,clear_reserved_imp_bits__16_15_x_11_5_x_3_0__width_25,-1,-1,-1,0,0,0},	// 168
  {"reserved_imp_bits__16_16__width_25",454,169,1,set_reserved_imp_bits__16_16__width_25,clear_reserved_imp_bits__16_16__width_25,-1,-1,-1,0,0,0},	// 169
  {"reserved_imp_bits__18_16__width_25",455,170,3,set_reserved_imp_bits__18_16__width_25,clear_reserved_imp_bits__18_16__width_25,-1,-1,-1,0,0,0},	// 170
  {"reserved_imp_bits__19_4__width_25",456,171,16,set_reserved_imp_bits__19_4__width_25,clear_reserved_imp_bits__19_4__width_25,-1,-1,-1,0,0,0},	// 171
  {"reserved_imp_bits__33_20__width_64",457,172,14,set_reserved_imp_bits__33_20__width_64,clear_reserved_imp_bits__33_20__width_64,-1,-1,-1,0,0,0},	// 172
  {"reserved_imp_bits__38_24__width_64",458,173,15,set_reserved_imp_bits__38_24__width_64,clear_reserved_imp_bits__38_24__width_64,-1,-1,-1,0,0,0},	// 173
  {"reserved_imp_bits__38_37__width_64",459,174,2,set_reserved_imp_bits__38_37__width_64,clear_reserved_imp_bits__38_37__width_64,-1,-1,-1,0,0,0},	// 174
  {"reserved_imp_bits__39_24__width_64",460,175,16,set_reserved_imp_bits__39_24__width_64,clear_reserved_imp_bits__39_24__width_64,-1,-1,-1,0,0,0},	// 175
  {"reserved_imp_bits__39_2__width_64",461,176,38,set_reserved_imp_bits__39_2__width_64,clear_reserved_imp_bits__39_2__width_64,-1,-1,-1,0,0,0},	// 176
  {"reserved_imp_bits__3_0__width_15",462,177,4,set_reserved_imp_bits__3_0__width_15,clear_reserved_imp_bits__3_0__width_15,-1,-1,-1,0,0,0},	// 177
  {"reserved_imp_bits__44_40__width_64",463,178,5,set_reserved_imp_bits__44_40__width_64,clear_reserved_imp_bits__44_40__width_64,-1,-1,-1,0,0,0},	// 178
  {"reserved_imp_bits__44_40_x_29_24__width_64",464,179,11,set_reserved_imp_bits__44_40_x_29_24__width_64,clear_reserved_imp_bits__44_40_x_29_24__width_64,-1,-1,-1,0,0,0},	// 179
  {"reserved_imp_bits__45_45__width_64",465,180,1,set_reserved_imp_bits__45_45__width_64,clear_reserved_imp_bits__45_45__width_64,-1,-1,-1,0,0,0},	// 180
  {"reserved_imp_bits__45_45_x_33_20__width_64",466,181,15,set_reserved_imp_bits__45_45_x_33_20__width_64,clear_reserved_imp_bits__45_45_x_33_20__width_64,-1,-1,-1,0,0,0},	// 181
  {"reserved_imp_bits__45_45_x_38_38_x_33_20__width_64",467,182,16,set_reserved_imp_bits__45_45_x_38_38_x_33_20__width_64,clear_reserved_imp_bits__45_45_x_38_38_x_33_20__width_64,-1,-1,-1,0,0,0},	// 182
  {"reserved_imp_bits__45_45_x_39_38__width_64",468,183,3,set_reserved_imp_bits__45_45_x_39_38__width_64,clear_reserved_imp_bits__45_45_x_39_38__width_64,-1,-1,-1,0,0,0},	// 183
  {"reserved_imp_bits__45_45_x_40_37__width_64",469,184,5,set_reserved_imp_bits__45_45_x_40_37__width_64,clear_reserved_imp_bits__45_45_x_40_37__width_64,-1,-1,-1,0,0,0},	// 184
  {"reserved_imp_bits__45_45_x_44_43__width_64",470,185,3,set_reserved_imp_bits__45_45_x_44_43__width_64,clear_reserved_imp_bits__45_45_x_44_43__width_64,-1,-1,-1,0,0,0},	// 185
  {"reserved_imp_bits__4_0__width_15",471,186,5,set_reserved_imp_bits__4_0__width_15,clear_reserved_imp_bits__4_0__width_15,-1,-1,-1,0,0,0},	// 186
  {"reserved_imp_bits__4_3__width_15",472,187,2,set_reserved_imp_bits__4_3__width_15,clear_reserved_imp_bits__4_3__width_15,-1,-1,-1,0,0,0},	// 187
  {"reserved_imp_bits__4_4__width_15",473,188,1,set_reserved_imp_bits__4_4__width_15,clear_reserved_imp_bits__4_4__width_15,-1,-1,-1,0,0,0},	// 188
  {"reserved_imp_bits__5_2__width_15",474,189,4,set_reserved_imp_bits__5_2__width_15,clear_reserved_imp_bits__5_2__width_15,-1,-1,-1,0,0,0},	// 189
  {"reserved_imp_bits__5_4__width_15",475,190,2,set_reserved_imp_bits__5_4__width_15,clear_reserved_imp_bits__5_4__width_15,-1,-1,-1,0,0,0},	// 190
  {"reserved_imp_bits__7_7__width_15",476,191,1,set_reserved_imp_bits__7_7__width_15,clear_reserved_imp_bits__7_7__width_15,-1,-1,-1,0,0,0},	// 191
  {"reserved_imp_bits__7_7_x_6_3__width_15",477,192,5,set_reserved_imp_bits__7_7_x_6_3__width_15,clear_reserved_imp_bits__7_7_x_6_3__width_15,-1,-1,-1,0,0,0},	// 192
  {"reserved_imp_bits__8_8_x_2_0__width_15",478,193,4,set_reserved_imp_bits__8_8_x_2_0__width_15,clear_reserved_imp_bits__8_8_x_2_0__width_15,-1,-1,-1,0,0,0},	// 193
  {"reserved_imp_bits__8_8_x_5_4__width_15",479,194,3,set_reserved_imp_bits__8_8_x_5_4__width_15,clear_reserved_imp_bits__8_8_x_5_4__width_15,-1,-1,-1,0,0,0},	// 194
};

static const int num_ppc_operands = 195;

static struct adl_name_pair ppc_operands_by_index [] = {
  { "AA", 195 },
  { "AA23", 196 },
  { "AAsubAM", 197 },
  { "AM", 198 },
  { "AS", 199 },
  { "AS0", 200 },
  { "AS1", 201 },
  { "AS10", 202 },
  { "AS11", 203 },
  { "AS12", 204 },
  { "AS13", 205 },
  { "AS14", 206 },
  { "AS15", 207 },
  { "AS2", 208 },
  { "AS3", 209 },
  { "AS4", 210 },
  { "AS5", 211 },
  { "AS6", 212 },
  { "AS7", 213 },
  { "AS8", 214 },
  { "AS9", 215 },
  { "AU_PREC", 216 },
  { "BIT48", 218 },
  { "BR_LLR_MODE", 220 },
  { "CGU_MODE_OVSF_CONJ", 223 },
  { "CGU_REG", 225 },
  { "COND", 226 },
  { "CREG_ADDR_FIELD", 227 },
  { "EV1b", 230 },
  { "FFT_SIZE", 231 },
  { "G0", 232 },
  { "G1", 233 },
  { "G10", 234 },
  { "G11", 235 },
  { "G2", 236 },
  { "G3", 237 },
  { "G4", 238 },
  { "G5", 239 },
  { "G6", 240 },
  { "G7", 241 },
  { "G8", 242 },
  { "G9", 243 },
  { "GP", 244 },
  { "GP1", 245 },
  { "GP1_0to7", 246 },
  { "GP1_8to11", 247 },
  { "GP2", 248 },
  { "GP2_0to7", 249 },
  { "GP2_8to11", 250 },
  { "GP_0to7", 251 },
  { "GP_8to11", 252 },
  { "H_QUADRANT", 253 },
  { "IM10s", 256 },
  { "IM12", 261 },
  { "IM16", 270 },
  { "IM16R20", 271 },
  { "IM16s", 273 },
  { "IM16s2", 274 },
  { "IM16sR20", 275 },
  { "IM17R13", 276 },
  { "IM17R14", 277 },
  { "IM17R15", 278 },
  { "IM17R4", 279 },
  { "IM17R5", 280 },
  { "IM17R9", 281 },
  { "IM17sR13", 282 },
  { "IM22", 284 },
  { "IM3", 285 },
  { "IM32", 286 },
  { "IM32s", 288 },
  { "IM32sR11", 289 },
  { "IM32sR18", 290 },
  { "IM4", 293 },
  { "IM5", 296 },
  { "IM8s", 307 },
  { "IM9", 308 },
  { "IM9_2", 309 },
  { "IM9_3", 310 },
  { "IM9_4", 311 },
  { "IPAGE", 314 },
  { "IP_REG", 315 },
  { "ITER_CNT", 316 },
  { "Is16", 318 },
  { "Iu16", 319 },
  { "JMP_CND_AU", 321 },
  { "JMP_CND_CC", 322 },
  { "LI17R8", 325 },
  { "LINE1b", 326 },
  { "LLR_MODE", 327 },
  { "LOOP_SIZE_R10", 328 },
  { "MIN1b", 330 },
  { "NCO_FREQ", 331 },
  { "NCO_K", 333 },
  { "NCO_MODE", 334 },
  { "NCO_NEG_POS", 335 },
  { "RFdes", 337 },
  { "ROT_MODE", 338 },
  { "RPAGE", 339 },
  { "S0_CONJ", 340 },
  { "S0_MODE", 341 },
  { "S0_PREC", 342 },
  { "S0_SIGN", 343 },
  { "S1_MODE", 344 },
  { "S1_PREC", 345 },
  { "S2_MODE", 346 },
  { "S2_PREC", 347 },
  { "UNS1b", 348 },
  { "UNSIGN_SIGN", 349 },
  { "WB_PREC", 351 },
  { "opA", 353 },
  { "opB", 354 },
  { "opS_HI", 355 },
  { "opS_LO", 356 },
  { "opVau", 357 },
  { "opVd", 358 },
  { "opVr", 359 },
  { "opVrot", 360 },
  { "opVs0", 361 },
  { "opVs1", 362 },
  { "opVs2", 363 },
  { "opX", 364 },
  { "opZ", 365 },
};

static const int num_ppc_operands_by_index = 122;

enum InstrBlocks {
};


// Instruction add_aX_Is17
static adl_instr_attrs _sym316 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction add_aX_Is17
static struct adl_operand _sym315_operands[] = { {3, 0, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{85, 1, ADL_ABSOLUTE | ADL_EXT_SIGNED, 0, 27, 18446744073709486081ull-1, 131071ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym317[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction add_aX_Is17_add_aX_aX_Is17
static adl_instr_attrs _sym319 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Shorthand:  add_aX_Is17_add_aX_aX_Is17 -> add_aX_Is17;
static struct adl_operand _sym320_operands[] = { {3, 1, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{85, 2, ADL_ABSOLUTE | ADL_EXT_SIGNED, 0, 27, 18446744073709486081ull-1, 131071ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_aX_Is17_add_aX_aX_Is17
static struct adl_operand _sym318_operands[] = { {195, 1, ADL_REGISTER, 0, 63, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 63, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{282, 2, ADL_ABSOLUTE | ADL_EXT_SIGNED, 0, 63, 18446744073709486081ull-1, 131071ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym321[] = {
  // add_aX_Is17    (0)
  { "add_aX_Is17", 8, 64, 64,  0x7, { 0x0,0x8c000,},0, "", 0, 2, 2, 0, 0, _sym320_operands,0,0,0, 0,&_sym319,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym322_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym323[] = { &_sym2, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction add_asY_aX_Is17_2_opC
static adl_instr_attrs _sym325 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction add_asY_aX_Is17_2_opC
static struct adl_operand _sym324_operands[] = { {29, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{3, 1, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{85, 2, ADL_ABSOLUTE | ADL_EXT_SIGNED, 0, 27, 18446744073709486081ull-1, 131071ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym326[] = { &_sym30, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction add_gX_I32
static adl_instr_attrs _sym328 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction add_gX_I32
static struct adl_operand _sym327_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{90, 1, ADL_EXT_SIGNED, 0, 30, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym329[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_gX_I32_add_gX_gX_I32
static adl_instr_attrs _sym331 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  add_gX_I32_add_gX_gX_I32 -> add_gX_I32;
static struct adl_operand _sym332_operands[] = { {66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{90, 2, ADL_EXT_SIGNED, 0, 30, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_gX_I32_add_gX_gX_I32
static struct adl_operand _sym330_operands[] = { {244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{288, 2, ADL_EXT_SIGNED, 0, 63, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym333[] = {
  // add_gX_I32    (0)
  { "add_gX_I32", 8, 64, 64,  0x7, { 0x0,0xc4200,},0, "", 0, 2, 2, 0, 0, _sym332_operands,0,0,0, 0,&_sym331,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym334_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym335[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction andl_gX_Iu32
static adl_instr_attrs _sym337 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction andl_gX_Iu32
static struct adl_operand _sym336_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 1, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym338[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction andl_gX_Iu32_andl_gX_gX_Iu32
static adl_instr_attrs _sym340 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  andl_gX_Iu32_andl_gX_gX_Iu32 -> andl_gX_Iu32;
static struct adl_operand _sym341_operands[] = { {66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 2, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction andl_gX_Iu32_andl_gX_gX_Iu32
static struct adl_operand _sym339_operands[] = { {244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{286, 2, 0, 0, 63, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym342[] = {
  // andl_gX_Iu32    (0)
  { "andl_gX_Iu32", 8, 64, 64,  0x7, { 0x0,0xc4400,},0, "", 0, 2, 2, 0, 0, _sym341_operands,0,0,0, 0,&_sym340,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym343_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym344[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction cmp_aX_Iu17
static adl_instr_attrs _sym346 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_cmp_aX_Iu17)) , 0 };

// Instruction cmp_aX_Iu17
static struct adl_operand _sym345_operands[] = { {3, 0, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{79, 1, ADL_ABSOLUTE, 0, 27, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym347[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction cmp_gX_I32
static adl_instr_attrs _sym349 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction cmp_gX_I32
static struct adl_operand _sym348_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{90, 1, ADL_EXT_SIGNED, 0, 30, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym350[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction done
static adl_instr_attrs _sym352 = { ((uint64_t)(1ULL << instr_done)) , 0 };

// Instruction done
static struct adl_operand _sym351_operands[] = {  0 };
static struct enum_fields *_sym353[] = {  (struct enum_fields *) -1,};

// Instruction fix2float_gX_g0
static adl_instr_attrs _sym355 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction fix2float_gX_g0
static struct adl_operand _sym354_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym356[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction float2fix_gX_g0
static adl_instr_attrs _sym358 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction float2fix_gX_g0
static struct adl_operand _sym357_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym359[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction floatx2n_gX_Is8
static adl_instr_attrs _sym361 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction floatx2n_gX_Is8
static struct adl_operand _sym360_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{98, 1, ADL_EXT_SIGNED, 0, 54, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym362[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction floatx2n_gX_Is8_floatx2n_gX_gX_Is8
static adl_instr_attrs _sym364 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  floatx2n_gX_Is8_floatx2n_gX_gX_Is8 -> floatx2n_gX_Is8;
static struct adl_operand _sym365_operands[] = { {66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{98, 2, ADL_EXT_SIGNED, 0, 54, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction floatx2n_gX_Is8_floatx2n_gX_gX_Is8
static struct adl_operand _sym363_operands[] = { {244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 2, ADL_EXT_SIGNED, 0, 63, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym366[] = {
  // floatx2n_gX_Is8    (0)
  { "floatx2n_gX_Is8", 8, 64, 64,  0x7, { 0x0,0xc4900,},0, "", 0, 2, 2, 0, 0, _sym365_operands,0,0,0, 0,&_sym364,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym367_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym368[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction floatx2n_gX_gY
static adl_instr_attrs _sym370 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction floatx2n_gX_gY
static struct adl_operand _sym369_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{56, 1, ADL_REGISTER, 0, 30, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym371[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction floatx2n_gX_gY_floatx2n_gX_gX_gY
static adl_instr_attrs _sym373 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  floatx2n_gX_gY_floatx2n_gX_gX_gY -> floatx2n_gX_gY;
static struct adl_operand _sym374_operands[] = { {66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{56, 2, ADL_REGISTER, 0, 30, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction floatx2n_gX_gY_floatx2n_gX_gX_gY
static struct adl_operand _sym372_operands[] = { {244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 2, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym375[] = {
  // floatx2n_gX_gY    (0)
  { "floatx2n_gX_gY", 8, 64, 64,  0x7, { 0x0,0xc0900,},0, "", 0, 2, 2, 0, 0, _sym374_operands,0,0,0, 0,&_sym373,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym376_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym377[] = { &_sym186, &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction jmp_cc_I_au
static adl_instr_attrs _sym379 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_jmp_jsr)) , 0 };

// Instruction jmp_cc_I_au
static struct adl_operand _sym378_operands[] = { {112, 0, 0, 0, 23, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{114, 1, ADL_ABSOLUTE, 0, 27, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym380[] = { &_sym238, 0,  (struct enum_fields *) -1,};

// Instruction jmp_cc_I_cc
static adl_instr_attrs _sym382 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_jmp_jsr)) , 0 };

// Instruction jmp_cc_I_cc
static struct adl_operand _sym381_operands[] = { {113, 0, 0, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{114, 1, ADL_ABSOLUTE, 0, 27, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym383[] = { &_sym242, 0,  (struct enum_fields *) -1,};

// Instruction jmp_cc_gX_opC_au
static adl_instr_attrs _sym385 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_jmp_jsr)) , 0 };

// Instruction jmp_cc_gX_opC_au
static struct adl_operand _sym384_operands[] = { {112, 0, 0, 0, 23, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{65, 1, ADL_REGISTER, 0, 40, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym386[] = { &_sym238, &_sym186,  (struct enum_fields *) -1,};

// Instruction jmp_cc_gX_opC_cc
static adl_instr_attrs _sym388 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_jmp_jsr)) , 0 };

// Instruction jmp_cc_gX_opC_cc
static struct adl_operand _sym387_operands[] = { {113, 0, 0, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{65, 1, ADL_REGISTER, 0, 40, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym389[] = { &_sym242, &_sym186,  (struct enum_fields *) -1,};

// Instruction jsr_cc_I_au
static adl_instr_attrs _sym391 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_jmp_jsr)) , 0 };

// Instruction jsr_cc_I_au
static struct adl_operand _sym390_operands[] = { {112, 0, 0, 0, 23, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{114, 1, ADL_ABSOLUTE, 0, 27, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym392[] = { &_sym238, 0,  (struct enum_fields *) -1,};

// Instruction jsr_cc_I_cc
static adl_instr_attrs _sym394 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_jmp_jsr)) , 0 };

// Instruction jsr_cc_I_cc
static struct adl_operand _sym393_operands[] = { {113, 0, 0, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{114, 1, ADL_ABSOLUTE, 0, 27, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym395[] = { &_sym242, 0,  (struct enum_fields *) -1,};

// Instruction jsr_cc_gX_opC_au
static adl_instr_attrs _sym397 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_jmp_jsr)) , 0 };

// Instruction jsr_cc_gX_opC_au
static struct adl_operand _sym396_operands[] = { {112, 0, 0, 0, 23, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{65, 1, ADL_REGISTER, 0, 40, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym398[] = { &_sym238, &_sym186,  (struct enum_fields *) -1,};

// Instruction jsr_cc_gX_opC_cc
static adl_instr_attrs _sym400 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_jmp_jsr)) , 0 };

// Instruction jsr_cc_gX_opC_cc
static struct adl_operand _sym399_operands[] = { {113, 0, 0, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{65, 1, ADL_REGISTER, 0, 40, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym401[] = { &_sym242, &_sym186,  (struct enum_fields *) -1,};

// Instruction lfsr_gX_I32_opD
static adl_instr_attrs _sym403 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction lfsr_gX_I32_opD
static struct adl_operand _sym402_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 1, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym404[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction lfsr_gX_gY
static adl_instr_attrs _sym406 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction lfsr_gX_gY
static struct adl_operand _sym405_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{56, 1, ADL_REGISTER, 0, 30, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym407[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction lfsr_gX_gY_lfsr_gX_gX_gY
static adl_instr_attrs _sym409 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  lfsr_gX_gY_lfsr_gX_gX_gY -> lfsr_gX_gY;
static struct adl_operand _sym410_operands[] = { {66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{56, 2, ADL_REGISTER, 0, 30, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction lfsr_gX_gY_lfsr_gX_gX_gY
static struct adl_operand _sym408_operands[] = { {244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 2, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym411[] = {
  // lfsr_gX_gY    (0)
  { "lfsr_gX_gY", 8, 64, 64,  0x7, { 0x0,0xc0b00,},0, "", 0, 2, 2, 0, 0, _sym410_operands,0,0,0, 0,&_sym409,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym412_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym413[] = { &_sym186, &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction lsb2rf_R7_rV_gX
static adl_instr_attrs _sym415 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction lsb2rf_R7_rV_gX
static struct adl_operand _sym414_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym416[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction lsb2rf_sr_R7_rV_gX
static adl_instr_attrs _sym418 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction lsb2rf_sr_R7_rV_gX
static struct adl_operand _sym417_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym419[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_R7_rV_gX_h
static adl_instr_attrs _sym421 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction mv_R7_rV_gX_h
static struct adl_operand _sym420_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym422[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_R7_rV_gX_w
static adl_instr_attrs _sym424 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction mv_R7_rV_gX_w
static struct adl_operand _sym423_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym425[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_R7_rV_mv_R7_rV_Is32
static adl_instr_attrs _sym427 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  mv_R7_rV_mv_R7_rV_Is32 -> mv_w_R7_rV;

static bfd_uint64_t _sym429_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return ( ((int)(((operands[0].X_add_number) & ((unsigned long long)1 << 31)) ? ((operands[0].X_add_number)- ((unsigned long long)1 << 32)):(operands[0].X_add_number))) & 0xFFFF0000 ) >> 16; }

static bfd_uint64_t _sym430_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return ((int)(((operands[0].X_add_number) & ((unsigned long long)1 << 31)) ? ((operands[0].X_add_number)- ((unsigned long long)1 << 32)):(operands[0].X_add_number))) & 0xFFFF; }
static struct adl_operand _sym428_operands[] = { {76, 0, 0, 0, 0, 0, 0, 0, _sym429_modifier, 0, 0,0, -1,-1,},{78, 0, 0, 0, 0, 0, 0, 0, _sym430_modifier, 0, 0,0, -1,-1,},};

// Instruction mv_R7_rV_mv_R7_rV_Is32
static struct adl_operand _sym426_operands[] = { {288, 0, ADL_EXT_SIGNED, 0, 63, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym431[] = {
  // mv_w_R7_rV    (0)
  { "mv_w_R7_rV", 8, 64, 64,  0x7, { 0x0,0xb6200,},0, "", 0, 2, 2, 0, 0, _sym428_operands,0,0,0, 0,&_sym427,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym432[] = { 0,  (struct enum_fields *) -1,};

// Instruction mv_R7_rV_mv_w_R7_rV_Is16_Is16
static adl_instr_attrs _sym434 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  mv_R7_rV_mv_w_R7_rV_Is16_Is16 -> mv_w_R7_rV;
static struct adl_operand _sym435_operands[] = { {76, 1, ADL_EXT_SIGNED, 0, 28, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},{78, 0, ADL_EXT_SIGNED, 0, 46, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_R7_rV_mv_w_R7_rV_Is16_Is16
static struct adl_operand _sym433_operands[] = { {273, 0, ADL_EXT_SIGNED, 0, 63, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},{274, 1, ADL_EXT_SIGNED, 0, 63, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym436[] = {
  // mv_w_R7_rV    (0)
  { "mv_w_R7_rV", 8, 64, 64,  0x7, { 0x0,0xb6200,},0, "", 0, 2, 2, 0, 0, _sym435_operands,0,0,0, 0,&_sym434,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym437[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction mv_R7_rV_mv_w_R7_rV_Is32
static adl_instr_attrs _sym439 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  mv_R7_rV_mv_w_R7_rV_Is32 -> mv_w_R7_rV;

static bfd_uint64_t _sym441_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return ( ((int)(((operands[0].X_add_number) & ((unsigned long long)1 << 31)) ? ((operands[0].X_add_number)- ((unsigned long long)1 << 32)):(operands[0].X_add_number))) & 0xFFFF0000 ) >> 16; }

static bfd_uint64_t _sym442_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return ((int)(((operands[0].X_add_number) & ((unsigned long long)1 << 31)) ? ((operands[0].X_add_number)- ((unsigned long long)1 << 32)):(operands[0].X_add_number))) & 0xFFFF; }
static struct adl_operand _sym440_operands[] = { {76, 0, 0, 0, 0, 0, 0, 0, _sym441_modifier, 0, 0,0, -1,-1,},{78, 0, 0, 0, 0, 0, 0, 0, _sym442_modifier, 0, 0,0, -1,-1,},};

// Instruction mv_R7_rV_mv_w_R7_rV_Is32
static struct adl_operand _sym438_operands[] = { {288, 0, ADL_EXT_SIGNED, 0, 63, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym443[] = {
  // mv_w_R7_rV    (0)
  { "mv_w_R7_rV", 8, 64, 64,  0x7, { 0x0,0xb6200,},0, "", 0, 2, 2, 0, 0, _sym440_operands,0,0,0, 0,&_sym439,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym444[] = { 0,  (struct enum_fields *) -1,};

// Instruction mv_aX_I17
static adl_instr_attrs _sym446 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction mv_aX_I17
static struct adl_operand _sym445_operands[] = { {3, 0, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{79, 1, ADL_ABSOLUTE, 0, 27, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym447[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction mv_asX_I17
static adl_instr_attrs _sym449 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction mv_asX_I17
static struct adl_operand _sym448_operands[] = { {29, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{79, 1, ADL_ABSOLUTE, 0, 27, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym450[] = { &_sym30, 0,  (struct enum_fields *) -1,};

// Instruction mv_asX_gY
static adl_instr_attrs _sym452 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction mv_asX_gY
static struct adl_operand _sym451_operands[] = { {30, 0, ADL_REGISTER, 0, 22, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym453[] = { &_sym30, &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_asX_gY_mv_asX_sp
static adl_instr_attrs _sym455 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Shorthand:  mv_asX_gY_mv_asX_sp -> mv_asX_gY;
static struct adl_operand _sym456_operands[] = { {30, 0, ADL_REGISTER, 0, 22, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_asX_gY_mv_asX_sp
static struct adl_operand _sym454_operands[] = { {199, 0, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym457[] = {
  // mv_asX_gY    (0)
  { "mv_asX_gY", 8, 64, 64,  0x7, { 0x0,0xc8438,},0, "", 0, 1, 1, 0, 0, _sym456_operands,0,0,0, 0,&_sym455,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym458[] = { &_sym30,  (struct enum_fields *) -1,};

// Instruction mv_cgu_gX
static adl_instr_attrs _sym460 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction mv_cgu_gX
static struct adl_operand _sym459_operands[] = { {36, 0, ADL_REGISTER, 0, 22, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym461[] = { &_sym124, &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_gX_I32_0
static adl_instr_attrs _sym463 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction mv_gX_I32_0
static struct adl_operand _sym462_operands[] = { {62, 0, ADL_REGISTER, 0, 27, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{88, 1, ADL_ABSOLUTE | ADL_EXT_SIGNED, 0, 30, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym464[] = { &_sym216, 0,  (struct enum_fields *) -1,};

// Instruction mv_gX_I32_1
static adl_instr_attrs _sym466 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction mv_gX_I32_1
static struct adl_operand _sym465_operands[] = { {64, 0, ADL_REGISTER, 0, 28, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{88, 1, ADL_ABSOLUTE | ADL_EXT_SIGNED, 0, 30, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym467[] = { &_sym222, 0,  (struct enum_fields *) -1,};

// Instruction mv_gX_R_rS0_h
static adl_instr_attrs _sym469 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction mv_gX_R_rS0_h
static struct adl_operand _sym468_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym470[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_gX_R_rS0_w
static adl_instr_attrs _sym472 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction mv_gX_R_rS0_w
static struct adl_operand _sym471_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym473[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_gX_cgu
static adl_instr_attrs _sym475 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction mv_gX_cgu
static struct adl_operand _sym474_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{36, 1, ADL_REGISTER, 0, 22, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym476[] = { &_sym186, &_sym124,  (struct enum_fields *) -1,};

// Instruction mv_gX_nco_phase
static adl_instr_attrs _sym478 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction mv_gX_nco_phase
static struct adl_operand _sym477_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym479[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_gY_asX
static adl_instr_attrs _sym481 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Instruction mv_gY_asX
static struct adl_operand _sym480_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{30, 1, ADL_REGISTER, 0, 22, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym482[] = { &_sym186, &_sym30,  (struct enum_fields *) -1,};

// Instruction mv_gY_asX_mv_sp_asX
static adl_instr_attrs _sym484 = { ((uint64_t)(1ULL << instr_opC)) , 0 };

// Shorthand:  mv_gY_asX_mv_sp_asX -> mv_gY_asX;
static struct adl_operand _sym485_operands[] = { {30, 0, ADL_REGISTER, 0, 22, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_gY_asX_mv_sp_asX
static struct adl_operand _sym483_operands[] = { {199, 0, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym486[] = {
  // mv_gY_asX    (0)
  { "mv_gY_asX", 8, 64, 64,  0x7, { 0x0,0xca438,},0, "", 0, 1, 1, 0, 0, _sym485_operands,0,0,0, 0,&_sym484,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym487[] = { &_sym30,  (struct enum_fields *) -1,};

// Instruction mv_h_R7_rV
static adl_instr_attrs _sym489 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction mv_h_R7_rV
static struct adl_operand _sym488_operands[] = { {78, 0, ADL_EXT_SIGNED, 0, 46, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym490[] = { 0,  (struct enum_fields *) -1,};

// Instruction mv_nco_freq_gX
static adl_instr_attrs _sym492 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction mv_nco_freq_gX
static struct adl_operand _sym491_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym493[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_nco_k_gX
static adl_instr_attrs _sym495 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction mv_nco_k_gX
static struct adl_operand _sym494_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym496[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_nco_phase_gX
static adl_instr_attrs _sym498 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction mv_nco_phase_gX
static struct adl_operand _sym497_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym499[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_w_R7_rV
static adl_instr_attrs _sym501 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction mv_w_R7_rV
static struct adl_operand _sym500_operands[] = { {78, 0, ADL_EXT_SIGNED, 0, 46, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},{76, 1, ADL_EXT_SIGNED, 0, 28, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym502[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction mvip_Iu9_gX_Iu32
static adl_instr_attrs _sym504 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction mvip_Iu9_gX_Iu32
static struct adl_operand _sym503_operands[] = { {107, 0, 0, 0, 17, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 2, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym505[] = { 0, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mvip_Iu9_gX_Iu32_mvip_Iu9_Iu32
static adl_instr_attrs _sym507 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  mvip_Iu9_gX_Iu32_mvip_Iu9_Iu32 -> mvip_Iu9_gX_Iu32;
static struct adl_operand _sym508_operands[] = { {107, 0, 0, 0, 17, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 1, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mvip_Iu9_gX_Iu32_mvip_Iu9_Iu32
static struct adl_operand _sym506_operands[] = { {315, 0, 0, 0, 63, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{286, 1, 0, 0, 63, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym509[] = {
  // mvip_Iu9_gX_Iu32    (0)
  { "mvip_Iu9_gX_Iu32", 8, 64, 64,  0x7, { 0x0,0xd0030,},0, "", 0, 2, 2, 0, 0, _sym508_operands,0,0,0, 0,&_sym507,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym510[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction mvip_gX_Iu9_Iu32
static adl_instr_attrs _sym512 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction mvip_gX_Iu9_Iu32
static struct adl_operand _sym511_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{107, 1, 0, 0, 17, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 2, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym513[] = { &_sym186, 0, 0,  (struct enum_fields *) -1,};

// Instruction opXABVZ
static adl_instr_attrs _sym515 = { 0 , 0 };

// Instruction opXABVZ
static struct adl_operand _sym514_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{142, 1, 0, 0, 15, 0ull, 0x7fffull, 0ull, 0, 0, 0, 0,-1,-1,},{143, 2, 0, 0, 14, 0ull, 0x7fffull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 3, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 5, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym516[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction opXSSZ
static adl_instr_attrs _sym518 = { 0 , 0 };

// Instruction opXSSZ
static struct adl_operand _sym517_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{144, 1, 0, 0, 12, 0ull, 0x1ffffffull, 0ull, 0, 0, 0, 0,-1,-1,},{145, 2, 0, 0, 37, 0ull, 0x1ffffffull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 3, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym519[] = { 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction opXSVZ
static adl_instr_attrs _sym521 = { 0 , 0 };

// Instruction opXSVZ
static struct adl_operand _sym520_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{144, 1, 0, 0, 12, 0ull, 0x1ffffffull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 2, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 3, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 4, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 5, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 6, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 7, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 8, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 9, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym522[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction orl_gX_Iu32
static adl_instr_attrs _sym524 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction orl_gX_Iu32
static struct adl_operand _sym523_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 1, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym525[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction orl_gX_Iu32_orl_gX_gX_Iu32
static adl_instr_attrs _sym527 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  orl_gX_Iu32_orl_gX_gX_Iu32 -> orl_gX_Iu32;
static struct adl_operand _sym528_operands[] = { {66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 2, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction orl_gX_Iu32_orl_gX_gX_Iu32
static struct adl_operand _sym526_operands[] = { {244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{286, 2, 0, 0, 63, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym529[] = {
  // orl_gX_Iu32    (0)
  { "orl_gX_Iu32", 8, 64, 64,  0x7, { 0x0,0xc4500,},0, "", 0, 2, 2, 0, 0, _sym528_operands,0,0,0, 0,&_sym527,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym530_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym531[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction push_I32
static adl_instr_attrs _sym533 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction push_I32
static struct adl_operand _sym532_operands[] = { {90, 0, ADL_EXT_SIGNED, 0, 30, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym534[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_cgu
static adl_instr_attrs _sym536 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_cgu
static struct adl_operand _sym535_operands[] = { {35, 0, 0, 0, 19, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym537[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_loop_I_I
static adl_instr_attrs _sym539 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_loop)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_loop_I_I
static struct adl_operand _sym538_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{119, 1, ADL_ABSOLUTE, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0, 0, 0,-1,-1,},{108, 2, 0, 0, 34, 0ull, 0x3ffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym540[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_loop_I_I_set_loop_I_Lb_Le
static adl_instr_attrs _sym542 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_loop_label)) | ((uint64_t)(1ULL << instr_loop)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_loop_I_I_set_loop_I_Lb_Le -> set_loop_I_I;

static bfd_uint64_t _sym544_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (ITER_CNT_1_checker((operands[0].X_add_number),FALSE)) - 1; }
static struct adl_operand _sym543_operands[] = { {119, 2, 0, 0, 24, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{119, 1, 0, 0, 24, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{108, 0, 0, 0, 0, 0, 0, 0, _sym544_modifier, 0, 0,0, -1,-1,},};

// Instruction set_loop_I_I_set_loop_I_Lb_Le
static struct adl_operand _sym541_operands[] = { {317, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0,ITER_CNT_1_checker, 0,-1,-1,},{323, 1, 0, 0, 63, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{324, 2, 0, 0, 63, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym545[] = {
  // set_loop_I_I    (0)
  { "set_loop_I_I", 8, 64, 64,  0x7, { 0x0,0x10000,},0, "", 0, 3, 3, 0, 0, _sym543_operands,0,0,0, 0,&_sym542,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym546[] = { 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_loop_I_I_syn
static adl_instr_attrs _sym548 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_loop)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_loop_I_I_syn -> set_loop_I_I;

static bfd_uint64_t _sym550_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (LOOP_SIZE_R10_1_checker((operands[1].X_add_number),FALSE)) - 1; }

static bfd_uint64_t _sym551_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (ITER_CNT_1_checker((operands[0].X_add_number),FALSE)) - 1; }
static struct adl_operand _sym549_operands[] = { {119, 0, 0, 0, 0, 0, 0, 0, _sym550_modifier, 0, 0,0, -1,-1,},{108, 0, 0, 0, 0, 0, 0, 0, _sym551_modifier, 0, 0,0, -1,-1,},};

// Instruction set_loop_I_I_syn
static struct adl_operand _sym547_operands[] = { {317, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0,ITER_CNT_1_checker, 0,-1,-1,},{329, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0,LOOP_SIZE_R10_1_checker, 0,-1,-1,},};
static struct adl_opcode _sym552[] = {
  // set_loop_I_I    (0)
  { "set_loop_I_I", 8, 64, 64,  0x7, { 0x0,0x10000,},0, "", 0, 2, 2, 0, 0, _sym549_operands,0,0,0, 0,&_sym548,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym553[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_loop_asX_I
static adl_instr_attrs _sym555 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_loop)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_loop_asX_I
static struct adl_operand _sym554_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{119, 1, ADL_ABSOLUTE, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0, 0, 0,-1,-1,},{26, 2, ADL_REGISTER, 0, 40, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym556[] = { 0, 0, 0, &_sym96, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_loop_asX_I_set_loop_asX_Lb_Le
static adl_instr_attrs _sym558 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_loop_label)) | ((uint64_t)(1ULL << instr_loop)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_loop_asX_I_set_loop_asX_Lb_Le -> set_loop_asX_I;
static struct adl_operand _sym559_operands[] = { {119, 2, 0, 0, 24, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{119, 1, 0, 0, 24, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{26, 0, ADL_REGISTER, 0, 40, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_loop_asX_I_set_loop_asX_Lb_Le
static struct adl_operand _sym557_operands[] = { {199, 0, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{323, 1, 0, 0, 63, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{324, 2, 0, 0, 63, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym560[] = {
  // set_loop_asX_I    (0)
  { "set_loop_asX_I", 8, 64, 64,  0x7, { 0x0,0x12000,},0, "", 0, 3, 3, 0, 0, _sym559_operands,0,0,0, 0,&_sym558,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym561[] = { &_sym30, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_loop_asX_I_syn
static adl_instr_attrs _sym563 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_loop)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_loop_asX_I_syn -> set_loop_asX_I;

static bfd_uint64_t _sym565_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (LOOP_SIZE_R10_1_checker((operands[1].X_add_number),FALSE)) - 1; }
static struct adl_operand _sym564_operands[] = { {119, 0, 0, 0, 0, 0, 0, 0, _sym565_modifier, 0, 0,0, -1,-1,},{26, 0, ADL_REGISTER, 0, 40, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_loop_asX_I_syn
static struct adl_operand _sym562_operands[] = { {199, 0, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{329, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0,LOOP_SIZE_R10_1_checker, 0,-1,-1,},};
static struct adl_opcode _sym566[] = {
  // set_loop_asX_I    (0)
  { "set_loop_asX_I", 8, 64, 64,  0x7, { 0x0,0x12000,},0, "", 0, 2, 2, 0, 0, _sym564_operands,0,0,0, 0,&_sym563,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym567[] = { &_sym30, 0,  (struct enum_fields *) -1,};

// Instruction set_nco
static adl_instr_attrs _sym569 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_nco
static struct adl_operand _sym568_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{124, 1, 0, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{121, 2, 0, 0, 21, 0ull, 0x3fffffffull, 0ull, 0, 0, 0, 0,-1,-1,},{122, 3, 0, 0, 34, 0ull, 0x3ffull, 0ull, 0, 0, 0, 0,-1,-1,},{125, 4, 0, 0, 61, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 5, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym570[] = { 0, &_sym256, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_nco_alias
static adl_instr_attrs _sym572 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_nco_alias -> set_nco;

static bfd_uint64_t _sym574_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return ((int)(((operands[2].X_add_number) & (1 << 30)) ? ((operands[2].X_add_number)- (1 << 31)):(operands[2].X_add_number))) & ( 1 << 30 ) ? ( 1 << 31 ) - ((int)(((operands[2].X_add_number) & (1 << 30)) ? ((operands[2].X_add_number)- (1 << 31)):(operands[2].X_add_number))) : ((int)(((operands[2].X_add_number) & (1 << 30)) ? ((operands[2].X_add_number)- (1 << 31)):(operands[2].X_add_number))); }

static bfd_uint64_t _sym575_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return 1 - ( ( ((int)(((operands[2].X_add_number) & (1 << 30)) ? ((operands[2].X_add_number)- (1 << 31)):(operands[2].X_add_number))) >> 30 ) & 1 ); }
static struct adl_operand _sym573_operands[] = { {124, 0, 0, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{121, 0, 0, 0, 0, 0, 0, 0, _sym574_modifier, 0, 0,0, -1,-1,},{122, 1, 0, 0, 34, 0ull, 0x3ffull, 0ull, 0, 0, 0, 0,-1,-1,},{125, 0, 0, 0, 0, 0, 0, 0, _sym575_modifier, 0, 0,0, -1,-1,},};

// Instruction set_nco_alias
static struct adl_operand _sym571_operands[] = { {334, 0, 0, 0, 63, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{333, 1, 0, 0, 63, 0ull, 0x3ffull, 0ull, 0, 0, 0, 0,-1,-1,},{332, 2, ADL_EXT_SIGNED, 0, 63, 18446744072635809793ull-1, 2147483647ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym576[] = {
  // set_nco    (0)
  { "set_nco", 8, 64, 64,  0x7, { 0x0,0xae000,},0, "", 0, 4, 4, 0, 0, _sym573_operands,0,0,0, 0,&_sym572,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym577[] = { &_sym254, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rS0_Iu22
static adl_instr_attrs _sym579 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range1_rS0_Iu22
static struct adl_operand _sym578_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym580[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rS0_Iu22_syn
static adl_instr_attrs _sym582 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range1_rS0_Iu22_syn -> set_range1_rS0_Iu22;

static bfd_uint64_t _sym584_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym585_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym583_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym584_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym585_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range1_rS0_Iu22_syn
static struct adl_operand _sym581_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym586[] = {
  // set_range1_rS0_Iu22    (0)
  { "set_range1_rS0_Iu22", 8, 64, 64,  0x7, { 0x400000,0x20000,},0, "", 0, 2, 2, 0, 0, _sym583_operands,0,0,0, 0,&_sym582,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym587[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rS1_Iu22
static adl_instr_attrs _sym589 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range1_rS1_Iu22
static struct adl_operand _sym588_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym590[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rS1_Iu22_syn
static adl_instr_attrs _sym592 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range1_rS1_Iu22_syn -> set_range1_rS1_Iu22;

static bfd_uint64_t _sym594_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym595_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym593_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym594_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym595_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range1_rS1_Iu22_syn
static struct adl_operand _sym591_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym596[] = {
  // set_range1_rS1_Iu22    (0)
  { "set_range1_rS1_Iu22", 8, 64, 64,  0x7, { 0x300000,0x20000,},0, "", 0, 2, 2, 0, 0, _sym593_operands,0,0,0, 0,&_sym592,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym597[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rS2_Iu22
static adl_instr_attrs _sym599 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range1_rS2_Iu22
static struct adl_operand _sym598_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym600[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rS2_Iu22_syn
static adl_instr_attrs _sym602 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range1_rS2_Iu22_syn -> set_range1_rS2_Iu22;

static bfd_uint64_t _sym604_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym605_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym603_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym604_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym605_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range1_rS2_Iu22_syn
static struct adl_operand _sym601_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym606[] = {
  // set_range1_rS2_Iu22    (0)
  { "set_range1_rS2_Iu22", 8, 64, 64,  0x7, { 0x200000,0x20000,},0, "", 0, 2, 2, 0, 0, _sym603_operands,0,0,0, 0,&_sym602,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym607[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rSt_Iu22
static adl_instr_attrs _sym609 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range1_rSt_Iu22
static struct adl_operand _sym608_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym610[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rSt_Iu22_syn
static adl_instr_attrs _sym612 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range1_rSt_Iu22_syn -> set_range1_rSt_Iu22;

static bfd_uint64_t _sym614_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym615_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym613_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym614_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym615_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range1_rSt_Iu22_syn
static struct adl_operand _sym611_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym616[] = {
  // set_range1_rSt_Iu22    (0)
  { "set_range1_rSt_Iu22", 8, 64, 64,  0x7, { 0x0,0x20000,},0, "", 0, 2, 2, 0, 0, _sym613_operands,0,0,0, 0,&_sym612,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym617[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rV_Iu22
static adl_instr_attrs _sym619 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range1_rV_Iu22
static struct adl_operand _sym618_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym620[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range1_rV_Iu22_syn
static adl_instr_attrs _sym622 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range1_rV_Iu22_syn -> set_range1_rV_Iu22;

static bfd_uint64_t _sym624_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym625_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym623_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym624_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym625_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range1_rV_Iu22_syn
static struct adl_operand _sym621_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym626[] = {
  // set_range1_rV_Iu22    (0)
  { "set_range1_rV_Iu22", 8, 64, 64,  0x7, { 0x100000,0x20000,},0, "", 0, 2, 2, 0, 0, _sym623_operands,0,0,0, 0,&_sym622,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym627[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rS0_Iu22
static adl_instr_attrs _sym629 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range2_rS0_Iu22
static struct adl_operand _sym628_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym630[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rS0_Iu22_syn
static adl_instr_attrs _sym632 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range2_rS0_Iu22_syn -> set_range2_rS0_Iu22;

static bfd_uint64_t _sym634_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym635_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym633_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym634_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym635_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range2_rS0_Iu22_syn
static struct adl_operand _sym631_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym636[] = {
  // set_range2_rS0_Iu22    (0)
  { "set_range2_rS0_Iu22", 8, 64, 64,  0x7, { 0x400000,0x24000,},0, "", 0, 2, 2, 0, 0, _sym633_operands,0,0,0, 0,&_sym632,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym637[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rS1_Iu22
static adl_instr_attrs _sym639 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range2_rS1_Iu22
static struct adl_operand _sym638_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym640[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rS1_Iu22_syn
static adl_instr_attrs _sym642 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range2_rS1_Iu22_syn -> set_range2_rS1_Iu22;

static bfd_uint64_t _sym644_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym645_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym643_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym644_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym645_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range2_rS1_Iu22_syn
static struct adl_operand _sym641_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym646[] = {
  // set_range2_rS1_Iu22    (0)
  { "set_range2_rS1_Iu22", 8, 64, 64,  0x7, { 0x300000,0x24000,},0, "", 0, 2, 2, 0, 0, _sym643_operands,0,0,0, 0,&_sym642,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym647[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rS2_Iu22
static adl_instr_attrs _sym649 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range2_rS2_Iu22
static struct adl_operand _sym648_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym650[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rS2_Iu22_syn
static adl_instr_attrs _sym652 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range2_rS2_Iu22_syn -> set_range2_rS2_Iu22;

static bfd_uint64_t _sym654_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym655_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym653_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym654_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym655_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range2_rS2_Iu22_syn
static struct adl_operand _sym651_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym656[] = {
  // set_range2_rS2_Iu22    (0)
  { "set_range2_rS2_Iu22", 8, 64, 64,  0x7, { 0x200000,0x24000,},0, "", 0, 2, 2, 0, 0, _sym653_operands,0,0,0, 0,&_sym652,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym657[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rSt_Iu22
static adl_instr_attrs _sym659 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range2_rSt_Iu22
static struct adl_operand _sym658_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym660[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rSt_Iu22_syn
static adl_instr_attrs _sym662 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range2_rSt_Iu22_syn -> set_range2_rSt_Iu22;

static bfd_uint64_t _sym664_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym665_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym663_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym664_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym665_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range2_rSt_Iu22_syn
static struct adl_operand _sym661_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym666[] = {
  // set_range2_rSt_Iu22    (0)
  { "set_range2_rSt_Iu22", 8, 64, 64,  0x7, { 0x0,0x24000,},0, "", 0, 2, 2, 0, 0, _sym663_operands,0,0,0, 0,&_sym662,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym667[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rV_Iu22
static adl_instr_attrs _sym669 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_range2_rV_Iu22
static struct adl_operand _sym668_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{33, 1, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{86, 2, 0, 0, 19, 0ull, 0x3fffffull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 3, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 4, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 5, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 6, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 7, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 8, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 9, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 10, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym670[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range2_rV_Iu22_syn
static adl_instr_attrs _sym672 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_range2_rV_Iu22_syn -> set_range2_rV_Iu22;

static bfd_uint64_t _sym674_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return nau2bit48 (  ); }

static bfd_uint64_t _sym675_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im112im22 ( (operands[0].X_add_number) , (operands[1].X_add_number) ); }
static struct adl_operand _sym673_operands[] = { {33, 0, 0, 0, 0, 0, 0, 0, _sym674_modifier, 0, 0,0, -1,-1,},{86, 0, 0, 0, 0, 0, 0, 0, _sym675_modifier, 0, 0,0, -1,-1,},};

// Instruction set_range2_rV_Iu22_syn
static struct adl_operand _sym671_operands[] = { {257, 0, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},{258, 1, 0, 0, 63, 0ull, 0x7ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym676[] = {
  // set_range2_rV_Iu22    (0)
  { "set_range2_rV_Iu22", 8, 64, 64,  0x7, { 0x100000,0x24000,},0, "", 0, 2, 2, 0, 0, _sym673_operands,0,0,0, 0,&_sym672,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym677[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction set_range_aY_asX_Iu17
static adl_instr_attrs _sym679 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_range)) , 0 };

// Instruction set_range_aY_asX_Iu17
static struct adl_operand _sym678_operands[] = { {0, 0, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{29, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{79, 2, ADL_ABSOLUTE, 0, 27, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym680[] = { &_sym4, &_sym30, 0,  (struct enum_fields *) -1,};

// Instruction set_range_aZ_asX_gY
static adl_instr_attrs _sym682 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_range)) , 0 };

// Instruction set_range_aZ_asX_gY
static struct adl_operand _sym681_operands[] = { {0, 0, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{29, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{65, 2, ADL_REGISTER, 0, 40, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym683[] = { &_sym4, &_sym30, &_sym186,  (struct enum_fields *) -1,};

// Instruction set_vra_incrs_I
static adl_instr_attrs _sym685 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_vra_incrs_I
static struct adl_operand _sym684_operands[] = { {103, 0, 0, 0, 19, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{99, 1, 0, 0, 29, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{100, 2, 0, 0, 39, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{101, 3, 0, 0, 49, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{91, 4, 0, 0, 59, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym686[] = { 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_vra_ptrs_I
static adl_instr_attrs _sym688 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_vra_ptrs_I
static struct adl_operand _sym687_operands[] = { {103, 0, 0, 0, 19, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{99, 1, 0, 0, 29, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{100, 2, 0, 0, 39, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{101, 3, 0, 0, 49, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},{91, 4, 0, 0, 59, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym689[] = { 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_xtrm
static adl_instr_attrs _sym691 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_xtrm
static struct adl_operand _sym690_operands[] = { {153, 0, 0, 0, 8, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{39, 1, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{116, 2, 0, 0, 21, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{138, 3, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{120, 4, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{92, 5, 0, 0, 40, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{152, 6, 0, 0, 44, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{151, 7, 0, 0, 45, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{150, 8, 0, 0, 46, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{149, 9, 0, 0, 47, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{148, 10, 0, 0, 48, 0ull, 0x7full, 0ull, 0, 0, 0, 0,-1,-1,},{147, 11, 0, 0, 55, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{146, 12, 0, 0, 58, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{154, 13, 0, 0, 62, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym692[] = { 0, &_sym136, 0, &_sym302, &_sym252, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (struct enum_fields *) -1,};

// Instruction set_xtrm_syntax
static adl_instr_attrs _sym694 = { ((uint64_t)(1ULL << instr_opC)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  set_xtrm_syntax -> set_xtrm;

static bfd_uint64_t _sym696_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return xtrm1b ( (XTRM_N_checker((operands[3].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym697_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return xtrm4b ( (XTRM_N_checker((operands[3].X_add_number),FALSE)) ); }
static struct adl_operand _sym695_operands[] = { {39, 2, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{116, 0, 0, 0, 0, 0, 0, 0, _sym696_modifier, 0, 0,0, -1,-1,},{138, 0, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{120, 1, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{92, 0, 0, 0, 0, 0, 0, 0, _sym697_modifier, 0, 0,0, -1,-1,},};

// Instruction set_xtrm_syntax
static struct adl_operand _sym693_operands[] = { {348, 0, 0, 0, 63, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{330, 1, 0, 0, 63, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{230, 2, 0, 0, 63, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{352, 3, 0, 0, 63, 0ull, 0xfffull, 0ull, 0, 0,XTRM_N_checker, 0,-1,-1,},};
static struct adl_opcode _sym698[] = {
  // set_xtrm    (0)
  { "set_xtrm", 8, 64, 64,  0x7, { 0x0,0x4000,},0, "", 0, 5, 5, 0, 0, _sym695_operands,0,0,0, 0,&_sym694,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym699[] = { &_sym300, &_sym250, &_sym134, 0,  (struct enum_fields *) -1,};

// Instruction st_Iu17_I32
adl_instr_attr_val _sym701[] = { { ((uint64_t)(1ULL << instr_opD)),  0, 0 }, { ((uint64_t)(1ULL << instr_store)),  0, 0 }, { ((uint64_t)(1ULL << instr_pseudo)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "st_s_Iu17_Is16" }, { 0, 0, 0 } };
static adl_instr_attrs _sym702 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_pseudo)) | ((uint64_t)(1ULL << instr_inst)) , _sym701 };

// Shorthand:  st_Iu17_I32 -> st_Iu17_Iu16;
static struct adl_operand _sym703_operands[] = { {84, 0, ADL_ABSOLUTE, 0, 28, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{74, 1, ADL_EXT_SIGNED, 0, 46, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_Iu17_I32
static struct adl_operand _sym700_operands[] = { {281, 0, ADL_ABSOLUTE, 0, 63, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{288, 1, ADL_EXT_SIGNED, 0, 63, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym704[] = {
  // st_Iu17_Iu16    (0)
  { "st_Iu17_Iu16", 8, 64, 64,  0x7, { 0x0,0xba000,},0, "", 0, 2, 2, 0, 0, _sym703_operands,0,0,0, 0,&_sym702,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym705[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction st_Iu17_Iu16
static adl_instr_attrs _sym707 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_Iu17_Iu16
static struct adl_operand _sym706_operands[] = { {84, 0, ADL_ABSOLUTE, 0, 28, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{74, 1, ADL_ABSOLUTE, 0, 46, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym708[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction st_a3_1_Is16_Is16
static adl_instr_attrs _sym710 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_a3_1_Is16_Is16
static struct adl_operand _sym709_operands[] = { {78, 0, ADL_EXT_SIGNED, 0, 46, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},{76, 1, ADL_EXT_SIGNED, 0, 28, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym711[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction st_h_Iu17_I16
static adl_instr_attrs _sym713 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_h_Iu17_I16
static struct adl_operand _sym712_operands[] = { {84, 0, ADL_ABSOLUTE, 0, 28, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{77, 1, ADL_ABSOLUTE | ADL_EXT_SIGNED, 0, 46, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym714[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction st_s_Iu17_Is16
static adl_instr_attrs _sym716 = { ((uint64_t)(1ULL << instr_opD)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_s_Iu17_Is16
static struct adl_operand _sym715_operands[] = { {84, 0, ADL_ABSOLUTE, 0, 28, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{77, 1, ADL_ABSOLUTE | ADL_EXT_SIGNED, 0, 46, 18446744073709518849ull-1, 65535ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym717[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction sub_gX_I32
static adl_instr_attrs _sym719 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction sub_gX_I32
static struct adl_operand _sym718_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{90, 1, ADL_EXT_SIGNED, 0, 30, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym720[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_gX_I32_sub_gX_gX_I32
static adl_instr_attrs _sym722 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  sub_gX_I32_sub_gX_gX_I32 -> sub_gX_I32;
static struct adl_operand _sym723_operands[] = { {66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{90, 2, ADL_EXT_SIGNED, 0, 30, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_gX_I32_sub_gX_gX_I32
static struct adl_operand _sym721_operands[] = { {244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{288, 2, ADL_EXT_SIGNED, 0, 63, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym724[] = {
  // sub_gX_I32    (0)
  { "sub_gX_I32", 8, 64, 64,  0x7, { 0x0,0xc4300,},0, "", 0, 2, 2, 0, 0, _sym723_operands,0,0,0, 0,&_sym722,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym725_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym726[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction xorl_gX_Iu32
static adl_instr_attrs _sym728 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction xorl_gX_Iu32
static struct adl_operand _sym727_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 1, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym729[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction xorl_gX_Iu32_xorl_gX_gX_Iu32
static adl_instr_attrs _sym731 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Shorthand:  xorl_gX_Iu32_xorl_gX_gX_Iu32 -> xorl_gX_Iu32;
static struct adl_operand _sym732_operands[] = { {66, 1, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{87, 2, 0, 0, 30, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction xorl_gX_Iu32_xorl_gX_gX_Iu32
static struct adl_operand _sym730_operands[] = { {244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 63, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{286, 2, 0, 0, 63, 0ull, 0xffffffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym733[] = {
  // xorl_gX_Iu32    (0)
  { "xorl_gX_Iu32", 8, 64, 64,  0x7, { 0x0,0xc4d00,},0, "", 0, 2, 2, 0, 0, _sym732_operands,0,0,0, 0,&_sym731,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym734_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym735[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction addA_aX_Is8
static adl_instr_attrs _sym737 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_dis_64au)) , 0 };

// Instruction addA_aX_Is8
static struct adl_operand _sym736_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 1, 0, 0, 6, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 2, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym738[] = { &_sym8, 0, 0,  (struct enum_fields *) -1,};

// Instruction addA_aX_Is8_alias
static adl_instr_attrs _sym740 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_wide_imm)) | ((uint64_t)(1ULL << instr_dis_64au)) , 0 };

// Shorthand:  addA_aX_Is8_alias -> addA_aX_Is8;

static bfd_uint64_t _sym742_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym743_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym741_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 0, 0, 0, 0, 0, 0, 0, _sym742_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym743_modifier, 0, 0,0, -1,-1,},};

// Instruction addA_aX_Is8_alias
static struct adl_operand _sym739_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym744[] = {
  // addA_aX_Is8    (0)
  { "addA_aX_Is8", 1, 15, 64,  0x0, { 0x0,0xb0000000,},0, "", 0, 3, 3, 0, 0, _sym741_operands,0,0,0, 0,&_sym740,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym745[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction addA_aX_Is8_alias_add
static adl_instr_attrs _sym747 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_wide_imm)) | ((uint64_t)(1ULL << instr_dis_64au)) , 0 };

// Shorthand:  addA_aX_Is8_alias_add -> addA_aX_Is8;

static bfd_uint64_t _sym749_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym750_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym748_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 0, 0, 0, 0, 0, 0, 0, _sym749_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym750_modifier, 0, 0,0, -1,-1,},};

// Instruction addA_aX_Is8_alias_add
static struct adl_operand _sym746_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym751[] = {
  // addA_aX_Is8    (0)
  { "addA_aX_Is8", 1, 15, 64,  0x0, { 0x0,0xb0000000,},0, "", 0, 3, 3, 0, 0, _sym748_operands,0,0,0, 0,&_sym747,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym752[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction addA_aX_aX_Is8
static adl_instr_attrs _sym754 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_wide_imm)) | ((uint64_t)(1ULL << instr_dis_64au)) , 0 };

// Shorthand:  addA_aX_aX_Is8 -> addA_aX_Is8;

static bfd_uint64_t _sym756_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }

static bfd_uint64_t _sym757_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }
static struct adl_operand _sym755_operands[] = { {1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 0, 0, 0, 0, 0, 0, 0, _sym756_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym757_modifier, 0, 0,0, -1,-1,},};

// Instruction addA_aX_aX_Is8
static struct adl_operand _sym753_operands[] = { {195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 2, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym758[] = {
  // addA_aX_Is8    (0)
  { "addA_aX_Is8", 1, 15, 64,  0x0, { 0x0,0xb0000000,},0, "", 0, 3, 3, 0, 0, _sym755_operands,0,0,0, 0,&_sym754,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym759_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym760[] = { &_sym2, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction addA_aX_aX_Is8_add
static adl_instr_attrs _sym762 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_wide_imm)) | ((uint64_t)(1ULL << instr_dis_64au)) , 0 };

// Shorthand:  addA_aX_aX_Is8_add -> addA_aX_Is8;

static bfd_uint64_t _sym764_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }

static bfd_uint64_t _sym765_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }
static struct adl_operand _sym763_operands[] = { {1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 0, 0, 0, 0, 0, 0, 0, _sym764_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym765_modifier, 0, 0,0, -1,-1,},};

// Instruction addA_aX_aX_Is8_add
static struct adl_operand _sym761_operands[] = { {195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 2, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym766[] = {
  // addA_aX_Is8    (0)
  { "addA_aX_Is8", 1, 15, 64,  0x0, { 0x0,0xb0000000,},0, "", 0, 3, 3, 0, 0, _sym763_operands,0,0,0, 0,&_sym762,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym767_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym768[] = { &_sym2, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction addA_line_aX_Is8_alias
static adl_instr_attrs _sym770 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_dis_64au)) , 0 };

// Shorthand:  addA_line_aX_Is8_alias -> addA_aX_Is8;
static struct adl_operand _sym771_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 1, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction addA_line_aX_Is8_alias
static struct adl_operand _sym769_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym772[] = {
  // addA_aX_Is8    (0)
  { "addA_aX_Is8", 1, 15, 64,  0x0, { 0x0,0xb2000000,},0, "", 0, 2, 2, 0, 0, _sym771_operands,0,0,0, 0,&_sym770,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym773[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction addA_line_aX_Is8_alias_add
static adl_instr_attrs _sym775 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_dis_64au)) , 0 };

// Shorthand:  addA_line_aX_Is8_alias_add -> addA_aX_Is8;
static struct adl_operand _sym776_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 1, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction addA_line_aX_Is8_alias_add
static struct adl_operand _sym774_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym777[] = {
  // addA_aX_Is8    (0)
  { "addA_aX_Is8", 1, 15, 64,  0x0, { 0x0,0xb2000000,},0, "", 0, 2, 2, 0, 0, _sym776_operands,0,0,0, 0,&_sym775,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym778[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction addA_line_aX_aX_Is8
static adl_instr_attrs _sym780 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_dis_64au)) , 0 };

// Shorthand:  addA_line_aX_aX_Is8 -> addA_aX_Is8;
static struct adl_operand _sym781_operands[] = { {1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 2, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction addA_line_aX_aX_Is8
static struct adl_operand _sym779_operands[] = { {195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 2, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym782[] = {
  // addA_aX_Is8    (0)
  { "addA_aX_Is8", 1, 15, 64,  0x0, { 0x0,0xb2000000,},0, "", 0, 2, 2, 0, 0, _sym781_operands,0,0,0, 0,&_sym780,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym783_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym784[] = { &_sym2, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction addA_line_aX_aX_Is8_add
static adl_instr_attrs _sym786 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_dis_64au)) , 0 };

// Shorthand:  addA_line_aX_aX_Is8_add -> addA_aX_Is8;
static struct adl_operand _sym787_operands[] = { {1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 2, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction addA_line_aX_aX_Is8_add
static struct adl_operand _sym785_operands[] = { {195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 2, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym788[] = {
  // addA_aX_Is8    (0)
  { "addA_aX_Is8", 1, 15, 64,  0x0, { 0x0,0xb2000000,},0, "", 0, 2, 2, 0, 0, _sym787_operands,0,0,0, 0,&_sym786,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym789_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym790[] = { &_sym2, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction add_aX_aY
static adl_instr_attrs _sym792 = { ((uint64_t)(1ULL << instr_opA)) , 0 };

// Instruction add_aX_aY
static struct adl_operand _sym791_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 1, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym793[] = { &_sym2, &_sym24,  (struct enum_fields *) -1,};

// Instruction add_aX_aY_add_aX_aX_aY
static adl_instr_attrs _sym795 = { ((uint64_t)(1ULL << instr_opA)) , 0 };

// Shorthand:  add_aX_aY_add_aX_aX_aY -> add_aX_aY;
static struct adl_operand _sym796_operands[] = { {1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_aX_aY_add_aX_aX_aY
static struct adl_operand _sym794_operands[] = { {195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{198, 2, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym797[] = {
  // add_aX_aY    (0)
  { "add_aX_aY", 1, 15, 64,  0x0, { 0x0,0x80000000,},0, "", 0, 2, 2, 0, 0, _sym796_operands,0,0,0, 0,&_sym795,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym798_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym799[] = { &_sym2, &_sym2, &_sym24,  (struct enum_fields *) -1,};

// Instruction add_asZ_aX_aY
static adl_instr_attrs _sym801 = { ((uint64_t)(1ULL << instr_opA)) , 0 };

// Instruction add_asZ_aX_aY
static struct adl_operand _sym800_operands[] = { {31, 0, ADL_REGISTER, 0, 8, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym802[] = { &_sym30, &_sym2, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_aX_Is8_u
static adl_instr_attrs _sym804 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_aX_Is8_u
static struct adl_operand _sym803_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 1, 0, 0, 6, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 2, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym805[] = { &_sym8, 0, 0,  (struct enum_fields *) -1,};

// Instruction ld_aX_Is8_u_I15_minus
static adl_instr_attrs _sym807 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_aX_Is8_u_I15_minus -> ld_aX_Is8_u;

static bfd_uint64_t _sym809_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym810_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }
static struct adl_operand _sym808_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 0, 0, 0, 0, 0, 0, 0, _sym809_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym810_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_aX_Is8_u_I15_minus
static struct adl_operand _sym806_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 1, 0, 0, 14, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym811[] = {
  // ld_aX_Is8_u    (0)
  { "ld_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x10000000,},0, "", 0, 3, 3, 0, 0, _sym808_operands,0,0,0, 0,&_sym807,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym812[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_aX_Is8_u_I15_plus
static adl_instr_attrs _sym814 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_aX_Is8_u_I15_plus -> ld_aX_Is8_u;

static bfd_uint64_t _sym816_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym817_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym815_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 0, 0, 0, 0, 0, 0, 0, _sym816_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym817_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_aX_Is8_u_I15_plus
static struct adl_operand _sym813_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym818[] = {
  // ld_aX_Is8_u    (0)
  { "ld_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x10000000,},0, "", 0, 3, 3, 0, 0, _sym815_operands,0,0,0, 0,&_sym814,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym819[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_line_aX_Is8_u_minus
static adl_instr_attrs _sym821 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_aX_Is8_u_minus -> ld_aX_Is8_u;

static bfd_uint64_t _sym823_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym822_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym823_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_line_aX_Is8_u_minus
static struct adl_operand _sym820_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 14, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym824[] = {
  // ld_aX_Is8_u    (0)
  { "ld_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x12000000,},0, "", 0, 2, 2, 0, 0, _sym822_operands,0,0,0, 0,&_sym821,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym825[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_line_aX_Is8_u_plus
static adl_instr_attrs _sym827 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_aX_Is8_u_plus -> ld_aX_Is8_u;
static struct adl_operand _sym828_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 1, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_line_aX_Is8_u_plus
static struct adl_operand _sym826_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym829[] = {
  // ld_aX_Is8_u    (0)
  { "ld_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x12000000,},0, "", 0, 2, 2, 0, 0, _sym828_operands,0,0,0, 0,&_sym827,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym830[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_aX_aY
static adl_instr_attrs _sym832 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_aX_aY
static struct adl_operand _sym831_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 1, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym833[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_u_aX_aY_br_instr
static adl_instr_attrs _sym835 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_aX_aY_br_instr
static struct adl_operand _sym834_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 1, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym836[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_u_aX_aY_ld_aX_aY
static adl_instr_attrs _sym838 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_aX_aY_ld_aX_aY -> ld_u_aX_aY;
static struct adl_operand _sym839_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 1, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_aX_aY_ld_aX_aY
static struct adl_operand _sym837_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{197, 1, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{198, 2, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym840[] = {
  // ld_u_aX_aY    (0)
  { "ld_u_aX_aY", 1, 15, 64,  0x0, { 0x0,0x40000000,},0, "", 0, 3, 3, 0, 0, _sym839_operands,0,0,0, 0,&_sym838,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym841[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_u_aX_aY_ld_aX_aY_br_syn
static adl_instr_attrs _sym843 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_aX_aY_ld_aX_aY_br_syn -> ld_u_aX_aY_br_instr;
static struct adl_operand _sym844_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 1, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_aX_aY_ld_aX_aY_br_syn
static struct adl_operand _sym842_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{197, 1, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{198, 2, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym845[] = {
  // ld_u_aX_aY_br_instr    (0)
  { "ld_u_aX_aY_br_instr", 1, 15, 64,  0x0, { 0x0,0x40800000,},0, "", 0, 3, 3, 0, 0, _sym844_operands,0,0,0, 0,&_sym843,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym846[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction opA_nop
static adl_instr_attrs _sym848 = { ((uint64_t)(1ULL << instr_opA)) , 0 };

// Instruction opA_nop
static struct adl_operand _sym847_operands[] = {  0 };
static struct enum_fields *_sym849[] = {  (struct enum_fields *) -1,};

// Instruction setA_page_rS0_Iu2_Iu2
static adl_instr_attrs _sym851 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction setA_page_rS0_Iu2_Iu2
static struct adl_operand _sym850_operands[] = { {105, 0, 0, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{128, 1, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym852[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setA_page_rS0_Iu2_Iu2_set
adl_instr_attr_val _sym854[] = { { ((uint64_t)(1ULL << instr_opA)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setB_page_rS0_Iu2_Iu2_set" }, { 0, 0, 0 } };
static adl_instr_attrs _sym855 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) , _sym854 };

// Shorthand:  setA_page_rS0_Iu2_Iu2_set -> setA_page_rS0_Iu2_Iu2;
static struct adl_operand _sym856_operands[] = { {105, 0, 0, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{128, 1, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setA_page_rS0_Iu2_Iu2_set
static struct adl_operand _sym853_operands[] = { {314, 0, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{339, 1, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym857[] = {
  // setA_page_rS0_Iu2_Iu2    (0)
  { "setA_page_rS0_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xd8000000,},0, "", 0, 2, 2, 0, 0, _sym856_operands,0,0,0, 0,&_sym855,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym858[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setA_page_rS1_Iu2_Iu2
static adl_instr_attrs _sym860 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction setA_page_rS1_Iu2_Iu2
static struct adl_operand _sym859_operands[] = { {105, 0, 0, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{128, 1, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym861[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setA_page_rS1_Iu2_Iu2_set
adl_instr_attr_val _sym863[] = { { ((uint64_t)(1ULL << instr_opA)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setB_page_rS1_Iu2_Iu2_set" }, { 0, 0, 0 } };
static adl_instr_attrs _sym864 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) , _sym863 };

// Shorthand:  setA_page_rS1_Iu2_Iu2_set -> setA_page_rS1_Iu2_Iu2;
static struct adl_operand _sym865_operands[] = { {105, 0, 0, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{128, 1, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setA_page_rS1_Iu2_Iu2_set
static struct adl_operand _sym862_operands[] = { {314, 0, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{339, 1, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym866[] = {
  // setA_page_rS1_Iu2_Iu2    (0)
  { "setA_page_rS1_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xd6000000,},0, "", 0, 2, 2, 0, 0, _sym865_operands,0,0,0, 0,&_sym864,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym867[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setA_page_rS2_Iu2_Iu2
static adl_instr_attrs _sym869 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction setA_page_rS2_Iu2_Iu2
static struct adl_operand _sym868_operands[] = { {105, 0, 0, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{128, 1, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym870[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setA_page_rS2_Iu2_Iu2_set
adl_instr_attr_val _sym872[] = { { ((uint64_t)(1ULL << instr_opA)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setB_page_rS2_Iu2_Iu2_set" }, { 0, 0, 0 } };
static adl_instr_attrs _sym873 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) , _sym872 };

// Shorthand:  setA_page_rS2_Iu2_Iu2_set -> setA_page_rS2_Iu2_Iu2;
static struct adl_operand _sym874_operands[] = { {105, 0, 0, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{128, 1, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setA_page_rS2_Iu2_Iu2_set
static struct adl_operand _sym871_operands[] = { {314, 0, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{339, 1, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym875[] = {
  // setA_page_rS2_Iu2_Iu2    (0)
  { "setA_page_rS2_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xd4000000,},0, "", 0, 2, 2, 0, 0, _sym874_operands,0,0,0, 0,&_sym873,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym876[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setA_page_rV_Iu2_Iu2
static adl_instr_attrs _sym878 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction setA_page_rV_Iu2_Iu2
static struct adl_operand _sym877_operands[] = { {105, 0, 0, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{128, 1, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym879[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setA_page_rV_Iu2_Iu2_set
adl_instr_attr_val _sym881[] = { { ((uint64_t)(1ULL << instr_opA)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setB_page_rV_Iu2_Iu2_set" }, { 0, 0, 0 } };
static adl_instr_attrs _sym882 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) , _sym881 };

// Shorthand:  setA_page_rV_Iu2_Iu2_set -> setA_page_rV_Iu2_Iu2;
static struct adl_operand _sym883_operands[] = { {105, 0, 0, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{128, 1, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setA_page_rV_Iu2_Iu2_set
static struct adl_operand _sym880_operands[] = { {314, 0, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{339, 1, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym884[] = {
  // setA_page_rV_Iu2_Iu2    (0)
  { "setA_page_rV_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xd2000000,},0, "", 0, 2, 2, 0, 0, _sym883_operands,0,0,0, 0,&_sym882,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym885[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setA_rS0_Iu9
static adl_instr_attrs _sym887 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setA_rS0_Iu9
static struct adl_operand _sym886_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym888[] = { 0,  (struct enum_fields *) -1,};

// Instruction setA_rS0_Iu9_set
adl_instr_attr_val _sym890[] = { { ((uint64_t)(1ULL << instr_opA)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setB_rS0_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym891 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym890 };

// Shorthand:  setA_rS0_Iu9_set -> setA_rS0_Iu9;
static struct adl_operand _sym892_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setA_rS0_Iu9_set
static struct adl_operand _sym889_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym893[] = {
  // setA_rS0_Iu9    (0)
  { "setA_rS0_Iu9", 1, 15, 64,  0x0, { 0x0,0xf0000000,},0, "", 0, 1, 1, 0, 0, _sym892_operands,0,0,0, 0,&_sym891,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym894[] = { 0,  (struct enum_fields *) -1,};

// Instruction setA_rS1_Iu9
static adl_instr_attrs _sym896 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setA_rS1_Iu9
static struct adl_operand _sym895_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym897[] = { 0,  (struct enum_fields *) -1,};

// Instruction setA_rS1_Iu9_set
adl_instr_attr_val _sym899[] = { { ((uint64_t)(1ULL << instr_opA)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setB_rS1_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym900 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym899 };

// Shorthand:  setA_rS1_Iu9_set -> setA_rS1_Iu9;
static struct adl_operand _sym901_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setA_rS1_Iu9_set
static struct adl_operand _sym898_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym902[] = {
  // setA_rS1_Iu9    (0)
  { "setA_rS1_Iu9", 1, 15, 64,  0x0, { 0x0,0xec000000,},0, "", 0, 1, 1, 0, 0, _sym901_operands,0,0,0, 0,&_sym900,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym903[] = { 0,  (struct enum_fields *) -1,};

// Instruction setA_rS2_Iu9
static adl_instr_attrs _sym905 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setA_rS2_Iu9
static struct adl_operand _sym904_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym906[] = { 0,  (struct enum_fields *) -1,};

// Instruction setA_rS2_Iu9_set
adl_instr_attr_val _sym908[] = { { ((uint64_t)(1ULL << instr_opA)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setB_rS2_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym909 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym908 };

// Shorthand:  setA_rS2_Iu9_set -> setA_rS2_Iu9;
static struct adl_operand _sym910_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setA_rS2_Iu9_set
static struct adl_operand _sym907_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym911[] = {
  // setA_rS2_Iu9    (0)
  { "setA_rS2_Iu9", 1, 15, 64,  0x0, { 0x0,0xe8000000,},0, "", 0, 1, 1, 0, 0, _sym910_operands,0,0,0, 0,&_sym909,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym912[] = { 0,  (struct enum_fields *) -1,};

// Instruction setA_rSt_Iu9
static adl_instr_attrs _sym914 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setA_rSt_Iu9
static struct adl_operand _sym913_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym915[] = { 0,  (struct enum_fields *) -1,};

// Instruction setA_rSt_Iu9_set
adl_instr_attr_val _sym917[] = { { ((uint64_t)(1ULL << instr_opA)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setB_rSt_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym918 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym917 };

// Shorthand:  setA_rSt_Iu9_set -> setA_rSt_Iu9;
static struct adl_operand _sym919_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setA_rSt_Iu9_set
static struct adl_operand _sym916_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym920[] = {
  // setA_rSt_Iu9    (0)
  { "setA_rSt_Iu9", 1, 15, 64,  0x0, { 0x0,0xe0000000,},0, "", 0, 1, 1, 0, 0, _sym919_operands,0,0,0, 0,&_sym918,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym921[] = { 0,  (struct enum_fields *) -1,};

// Instruction setA_rV_Iu9
static adl_instr_attrs _sym923 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setA_rV_Iu9
static struct adl_operand _sym922_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym924[] = { 0,  (struct enum_fields *) -1,};

// Instruction setA_rV_Iu9_set
adl_instr_attr_val _sym926[] = { { ((uint64_t)(1ULL << instr_opA)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setB_rV_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym927 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym926 };

// Shorthand:  setA_rV_Iu9_set -> setA_rV_Iu9;
static struct adl_operand _sym928_operands[] = { {104, 0, 0, 0, 6, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setA_rV_Iu9_set
static struct adl_operand _sym925_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym929[] = {
  // setA_rV_Iu9    (0)
  { "setA_rV_Iu9", 1, 15, 64,  0x0, { 0x0,0xe4000000,},0, "", 0, 1, 1, 0, 0, _sym928_operands,0,0,0, 0,&_sym927,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym930[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_br_fft_size
static adl_instr_attrs _sym932 = { ((uint64_t)(1ULL << instr_opA)) , 0 };

// Instruction set_br_fft_size
static struct adl_operand _sym931_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{40, 1, 0, 0, 9, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym933[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_a0_Is8_u
static adl_instr_attrs _sym935 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_a0_Is8_u
static struct adl_operand _sym934_operands[] = { {117, 0, 0, 0, 6, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 1, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym936[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction st_a0_Is8_u_minus
static adl_instr_attrs _sym938 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_a0_Is8_u_minus -> st_a0_Is8_u;

static bfd_uint64_t _sym940_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[0].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym941_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[0].X_add_number),FALSE)) ); }
static struct adl_operand _sym939_operands[] = { {117, 0, 0, 0, 0, 0, 0, 0, _sym940_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym941_modifier, 0, 0,0, -1,-1,},};

// Instruction st_a0_Is8_u_minus
static struct adl_operand _sym937_operands[] = { {268, 0, 0, 0, 14, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym942[] = {
  // st_a0_Is8_u    (0)
  { "st_a0_Is8_u", 1, 15, 64,  0x0, { 0x0,0x20000000,},0, "", 0, 2, 2, 0, 0, _sym939_operands,0,0,0, 0,&_sym938,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym943[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_a0_Is8_u_plus
static adl_instr_attrs _sym945 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_a0_Is8_u_plus -> st_a0_Is8_u;

static bfd_uint64_t _sym947_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[0].X_add_number) & (1 << 14)) ? ((operands[0].X_add_number)- (1 << 15)):(operands[0].X_add_number))) ); }

static bfd_uint64_t _sym948_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[0].X_add_number) & (1 << 14)) ? ((operands[0].X_add_number)- (1 << 15)):(operands[0].X_add_number))) ); }
static struct adl_operand _sym946_operands[] = { {117, 0, 0, 0, 0, 0, 0, 0, _sym947_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym948_modifier, 0, 0,0, -1,-1,},};

// Instruction st_a0_Is8_u_plus
static struct adl_operand _sym944_operands[] = { {269, 0, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym949[] = {
  // st_a0_Is8_u    (0)
  { "st_a0_Is8_u", 1, 15, 64,  0x0, { 0x0,0x20000000,},0, "", 0, 2, 2, 0, 0, _sym946_operands,0,0,0, 0,&_sym945,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym950[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_a1_Is8_u
static adl_instr_attrs _sym952 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_a1_Is8_u
static struct adl_operand _sym951_operands[] = { {117, 0, 0, 0, 6, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 1, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym953[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction st_a1_Is8_u_minus
static adl_instr_attrs _sym955 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_a1_Is8_u_minus -> st_a1_Is8_u;

static bfd_uint64_t _sym957_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[0].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym958_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[0].X_add_number),FALSE)) ); }
static struct adl_operand _sym956_operands[] = { {117, 0, 0, 0, 0, 0, 0, 0, _sym957_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym958_modifier, 0, 0,0, -1,-1,},};

// Instruction st_a1_Is8_u_minus
static struct adl_operand _sym954_operands[] = { {268, 0, 0, 0, 14, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym959[] = {
  // st_a1_Is8_u    (0)
  { "st_a1_Is8_u", 1, 15, 64,  0x0, { 0x0,0x24000000,},0, "", 0, 2, 2, 0, 0, _sym956_operands,0,0,0, 0,&_sym955,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym960[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_a1_Is8_u_plus
static adl_instr_attrs _sym962 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_a1_Is8_u_plus -> st_a1_Is8_u;

static bfd_uint64_t _sym964_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[0].X_add_number) & (1 << 14)) ? ((operands[0].X_add_number)- (1 << 15)):(operands[0].X_add_number))) ); }

static bfd_uint64_t _sym965_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[0].X_add_number) & (1 << 14)) ? ((operands[0].X_add_number)- (1 << 15)):(operands[0].X_add_number))) ); }
static struct adl_operand _sym963_operands[] = { {117, 0, 0, 0, 0, 0, 0, 0, _sym964_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym965_modifier, 0, 0,0, -1,-1,},};

// Instruction st_a1_Is8_u_plus
static struct adl_operand _sym961_operands[] = { {269, 0, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym966[] = {
  // st_a1_Is8_u    (0)
  { "st_a1_Is8_u", 1, 15, 64,  0x0, { 0x0,0x24000000,},0, "", 0, 2, 2, 0, 0, _sym963_operands,0,0,0, 0,&_sym962,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym967[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_a2_Is8_u
static adl_instr_attrs _sym969 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_a2_Is8_u
static struct adl_operand _sym968_operands[] = { {117, 0, 0, 0, 6, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 1, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym970[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction st_a2_Is8_u_minus
static adl_instr_attrs _sym972 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_a2_Is8_u_minus -> st_a2_Is8_u;

static bfd_uint64_t _sym974_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[0].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym975_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[0].X_add_number),FALSE)) ); }
static struct adl_operand _sym973_operands[] = { {117, 0, 0, 0, 0, 0, 0, 0, _sym974_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym975_modifier, 0, 0,0, -1,-1,},};

// Instruction st_a2_Is8_u_minus
static struct adl_operand _sym971_operands[] = { {268, 0, 0, 0, 14, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym976[] = {
  // st_a2_Is8_u    (0)
  { "st_a2_Is8_u", 1, 15, 64,  0x0, { 0x0,0x28000000,},0, "", 0, 2, 2, 0, 0, _sym973_operands,0,0,0, 0,&_sym972,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym977[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_a2_Is8_u_plus
static adl_instr_attrs _sym979 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_a2_Is8_u_plus -> st_a2_Is8_u;

static bfd_uint64_t _sym981_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[0].X_add_number) & (1 << 14)) ? ((operands[0].X_add_number)- (1 << 15)):(operands[0].X_add_number))) ); }

static bfd_uint64_t _sym982_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[0].X_add_number) & (1 << 14)) ? ((operands[0].X_add_number)- (1 << 15)):(operands[0].X_add_number))) ); }
static struct adl_operand _sym980_operands[] = { {117, 0, 0, 0, 0, 0, 0, 0, _sym981_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym982_modifier, 0, 0,0, -1,-1,},};

// Instruction st_a2_Is8_u_plus
static struct adl_operand _sym978_operands[] = { {269, 0, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym983[] = {
  // st_a2_Is8_u    (0)
  { "st_a2_Is8_u", 1, 15, 64,  0x0, { 0x0,0x28000000,},0, "", 0, 2, 2, 0, 0, _sym980_operands,0,0,0, 0,&_sym979,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym984[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_a3_Is8_u
static adl_instr_attrs _sym986 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_a3_Is8_u
static struct adl_operand _sym985_operands[] = { {117, 0, 0, 0, 6, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 1, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym987[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction st_a3_Is8_u_minus
static adl_instr_attrs _sym989 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_a3_Is8_u_minus -> st_a3_Is8_u;

static bfd_uint64_t _sym991_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[0].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym992_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[0].X_add_number),FALSE)) ); }
static struct adl_operand _sym990_operands[] = { {117, 0, 0, 0, 0, 0, 0, 0, _sym991_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym992_modifier, 0, 0,0, -1,-1,},};

// Instruction st_a3_Is8_u_minus
static struct adl_operand _sym988_operands[] = { {268, 0, 0, 0, 14, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym993[] = {
  // st_a3_Is8_u    (0)
  { "st_a3_Is8_u", 1, 15, 64,  0x0, { 0x0,0x2c000000,},0, "", 0, 2, 2, 0, 0, _sym990_operands,0,0,0, 0,&_sym989,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym994[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_a3_Is8_u_plus
static adl_instr_attrs _sym996 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_a3_Is8_u_plus -> st_a3_Is8_u;

static bfd_uint64_t _sym998_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[0].X_add_number) & (1 << 14)) ? ((operands[0].X_add_number)- (1 << 15)):(operands[0].X_add_number))) ); }

static bfd_uint64_t _sym999_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[0].X_add_number) & (1 << 14)) ? ((operands[0].X_add_number)- (1 << 15)):(operands[0].X_add_number))) ); }
static struct adl_operand _sym997_operands[] = { {117, 0, 0, 0, 0, 0, 0, 0, _sym998_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym999_modifier, 0, 0,0, -1,-1,},};

// Instruction st_a3_Is8_u_plus
static struct adl_operand _sym995_operands[] = { {269, 0, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1000[] = {
  // st_a3_Is8_u    (0)
  { "st_a3_Is8_u", 1, 15, 64,  0x0, { 0x0,0x2c000000,},0, "", 0, 2, 2, 0, 0, _sym997_operands,0,0,0, 0,&_sym996,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1001[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_br_llr_mode_aX_u_aY
static adl_instr_attrs _sym1003 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_br_llr_mode_aX_u_aY
static struct adl_operand _sym1002_operands[] = { {118, 0, 0, 0, 6, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 2, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 3, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1004[] = { &_sym246, &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_br_llr_mode_aX_u_aY_br_instr
static adl_instr_attrs _sym1006 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_illegal)) , 0 };

// Instruction st_br_llr_mode_aX_u_aY_br_instr
static struct adl_operand _sym1005_operands[] = { {34, 0, 0, 0, 6, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 2, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 3, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1007[] = { &_sym114, &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_line_a0_Is8_u_minus
static adl_instr_attrs _sym1009 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_a0_Is8_u_minus -> st_a0_Is8_u;

static bfd_uint64_t _sym1011_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym1010_operands[] = { {97, 0, 0, 0, 0, 0, 0, 0, _sym1011_modifier, 0, 0,0, -1,-1,},};

// Instruction st_line_a0_Is8_u_minus
static struct adl_operand _sym1008_operands[] = { {306, 0, 0, 0, 14, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym1012[] = {
  // st_a0_Is8_u    (0)
  { "st_a0_Is8_u", 1, 15, 64,  0x0, { 0x0,0x22000000,},0, "", 0, 1, 1, 0, 0, _sym1010_operands,0,0,0, 0,&_sym1009,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1013[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_line_a0_Is8_u_plus
static adl_instr_attrs _sym1015 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_a0_Is8_u_plus -> st_a0_Is8_u;
static struct adl_operand _sym1016_operands[] = { {97, 0, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_a0_Is8_u_plus
static struct adl_operand _sym1014_operands[] = { {307, 0, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1017[] = {
  // st_a0_Is8_u    (0)
  { "st_a0_Is8_u", 1, 15, 64,  0x0, { 0x0,0x22000000,},0, "", 0, 1, 1, 0, 0, _sym1016_operands,0,0,0, 0,&_sym1015,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1018[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_line_a1_Is8_u_minus
static adl_instr_attrs _sym1020 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_a1_Is8_u_minus -> st_a1_Is8_u;

static bfd_uint64_t _sym1022_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym1021_operands[] = { {97, 0, 0, 0, 0, 0, 0, 0, _sym1022_modifier, 0, 0,0, -1,-1,},};

// Instruction st_line_a1_Is8_u_minus
static struct adl_operand _sym1019_operands[] = { {306, 0, 0, 0, 14, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym1023[] = {
  // st_a1_Is8_u    (0)
  { "st_a1_Is8_u", 1, 15, 64,  0x0, { 0x0,0x26000000,},0, "", 0, 1, 1, 0, 0, _sym1021_operands,0,0,0, 0,&_sym1020,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1024[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_line_a1_Is8_u_plus
static adl_instr_attrs _sym1026 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_a1_Is8_u_plus -> st_a1_Is8_u;
static struct adl_operand _sym1027_operands[] = { {97, 0, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_a1_Is8_u_plus
static struct adl_operand _sym1025_operands[] = { {307, 0, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1028[] = {
  // st_a1_Is8_u    (0)
  { "st_a1_Is8_u", 1, 15, 64,  0x0, { 0x0,0x26000000,},0, "", 0, 1, 1, 0, 0, _sym1027_operands,0,0,0, 0,&_sym1026,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1029[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_line_a2_Is8_u_minus
static adl_instr_attrs _sym1031 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_a2_Is8_u_minus -> st_a2_Is8_u;

static bfd_uint64_t _sym1033_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym1032_operands[] = { {97, 0, 0, 0, 0, 0, 0, 0, _sym1033_modifier, 0, 0,0, -1,-1,},};

// Instruction st_line_a2_Is8_u_minus
static struct adl_operand _sym1030_operands[] = { {306, 0, 0, 0, 14, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym1034[] = {
  // st_a2_Is8_u    (0)
  { "st_a2_Is8_u", 1, 15, 64,  0x0, { 0x0,0x2a000000,},0, "", 0, 1, 1, 0, 0, _sym1032_operands,0,0,0, 0,&_sym1031,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1035[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_line_a2_Is8_u_plus
static adl_instr_attrs _sym1037 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_a2_Is8_u_plus -> st_a2_Is8_u;
static struct adl_operand _sym1038_operands[] = { {97, 0, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_a2_Is8_u_plus
static struct adl_operand _sym1036_operands[] = { {307, 0, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1039[] = {
  // st_a2_Is8_u    (0)
  { "st_a2_Is8_u", 1, 15, 64,  0x0, { 0x0,0x2a000000,},0, "", 0, 1, 1, 0, 0, _sym1038_operands,0,0,0, 0,&_sym1037,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1040[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_line_a3_Is8_u_minus
static adl_instr_attrs _sym1042 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_a3_Is8_u_minus -> st_a3_Is8_u;

static bfd_uint64_t _sym1044_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym1043_operands[] = { {97, 0, 0, 0, 0, 0, 0, 0, _sym1044_modifier, 0, 0,0, -1,-1,},};

// Instruction st_line_a3_Is8_u_minus
static struct adl_operand _sym1041_operands[] = { {306, 0, 0, 0, 14, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym1045[] = {
  // st_a3_Is8_u    (0)
  { "st_a3_Is8_u", 1, 15, 64,  0x0, { 0x0,0x2e000000,},0, "", 0, 1, 1, 0, 0, _sym1043_operands,0,0,0, 0,&_sym1042,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1046[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_line_a3_Is8_u_plus
static adl_instr_attrs _sym1048 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_a3_Is8_u_plus -> st_a3_Is8_u;
static struct adl_operand _sym1049_operands[] = { {97, 0, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_a3_Is8_u_plus
static struct adl_operand _sym1047_operands[] = { {307, 0, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1050[] = {
  // st_a3_Is8_u    (0)
  { "st_a3_Is8_u", 1, 15, 64,  0x0, { 0x0,0x2e000000,},0, "", 0, 1, 1, 0, 0, _sym1049_operands,0,0,0, 0,&_sym1048,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1051[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_w_aX_Is8_u
static adl_instr_attrs _sym1053 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_w_aX_Is8_u
static struct adl_operand _sym1052_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 1, 0, 0, 6, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 2, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1054[] = { &_sym8, 0, 0,  (struct enum_fields *) -1,};

// Instruction st_w_aX_Is8_u_minus
static adl_instr_attrs _sym1056 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_w_aX_Is8_u_minus -> st_w_aX_Is8_u;

static bfd_uint64_t _sym1058_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym1059_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }
static struct adl_operand _sym1057_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 0, 0, 0, 0, 0, 0, 0, _sym1058_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym1059_modifier, 0, 0,0, -1,-1,},};

// Instruction st_w_aX_Is8_u_minus
static struct adl_operand _sym1055_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 1, 0, 0, 14, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym1060[] = {
  // st_w_aX_Is8_u    (0)
  { "st_w_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x30000000,},0, "", 0, 3, 3, 0, 0, _sym1057_operands,0,0,0, 0,&_sym1056,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1061[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_w_aX_Is8_u_plus
static adl_instr_attrs _sym1063 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_w_aX_Is8_u_plus -> st_w_aX_Is8_u;

static bfd_uint64_t _sym1065_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym1066_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym1064_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{117, 0, 0, 0, 0, 0, 0, 0, _sym1065_modifier, 0, 0,0, -1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym1066_modifier, 0, 0,0, -1,-1,},};

// Instruction st_w_aX_Is8_u_plus
static struct adl_operand _sym1062_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 14, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1067[] = {
  // st_w_aX_Is8_u    (0)
  { "st_w_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x30000000,},0, "", 0, 3, 3, 0, 0, _sym1064_operands,0,0,0, 0,&_sym1063,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1068[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_w_aX_u_aY
static adl_instr_attrs _sym1070 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_w_aX_u_aY
static struct adl_operand _sym1069_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 1, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1071[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_w_aX_u_aY_br_instr
static adl_instr_attrs _sym1073 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_w_aX_u_aY_br_instr
static struct adl_operand _sym1072_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 1, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1074[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_w_br_aX_u_aY
static adl_instr_attrs _sym1076 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_w_br_aX_u_aY -> st_w_aX_u_aY_br_instr;
static struct adl_operand _sym1077_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 1, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_w_br_aX_u_aY
static struct adl_operand _sym1075_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{197, 1, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{198, 2, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1078[] = {
  // st_w_aX_u_aY_br_instr    (0)
  { "st_w_aX_u_aY_br_instr", 1, 15, 64,  0x0, { 0x0,0x60800000,},0, "", 0, 3, 3, 0, 0, _sym1077_operands,0,0,0, 0,&_sym1076,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1079[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_w_line_aX_Is8_u_minus
static adl_instr_attrs _sym1081 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_w_line_aX_Is8_u_minus -> st_w_aX_Is8_u;

static bfd_uint64_t _sym1083_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym1082_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 0, 0, 0, 0, 0, 0, 0, _sym1083_modifier, 0, 0,0, -1,-1,},};

// Instruction st_w_line_aX_Is8_u_minus
static struct adl_operand _sym1080_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 14, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym1084[] = {
  // st_w_aX_Is8_u    (0)
  { "st_w_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x32000000,},0, "", 0, 2, 2, 0, 0, _sym1082_operands,0,0,0, 0,&_sym1081,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1085[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_w_line_aX_Is8_u_plus
static adl_instr_attrs _sym1087 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_w_line_aX_Is8_u_plus -> st_w_aX_Is8_u;
static struct adl_operand _sym1088_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{97, 1, ADL_EXT_SIGNED, 0, 7, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_w_line_aX_Is8_u_plus
static struct adl_operand _sym1086_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 14, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1089[] = {
  // st_w_aX_Is8_u    (0)
  { "st_w_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x32000000,},0, "", 0, 2, 2, 0, 0, _sym1088_operands,0,0,0, 0,&_sym1087,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1090[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_w_u_aX_u_aY
static adl_instr_attrs _sym1092 = { ((uint64_t)(1ULL << instr_opA)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_w_u_aX_u_aY -> st_w_aX_u_aY;
static struct adl_operand _sym1093_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{7, 1, 0, 0, 7, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_w_u_aX_u_aY
static struct adl_operand _sym1091_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{197, 1, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{198, 2, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1094[] = {
  // st_w_aX_u_aY    (0)
  { "st_w_aX_u_aY", 1, 15, 64,  0x0, { 0x0,0x60000000,},0, "", 0, 3, 3, 0, 0, _sym1093_operands,0,0,0, 0,&_sym1092,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1095[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction sub_aX_aY
static adl_instr_attrs _sym1097 = { ((uint64_t)(1ULL << instr_opA)) , 0 };

// Instruction sub_aX_aY
static struct adl_operand _sym1096_operands[] = { {1, 0, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 1, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1098[] = { &_sym2, &_sym24,  (struct enum_fields *) -1,};

// Instruction sub_aX_aY_sub_aX_aX_aY
static adl_instr_attrs _sym1100 = { ((uint64_t)(1ULL << instr_opA)) , 0 };

// Shorthand:  sub_aX_aY_sub_aX_aX_aY -> sub_aX_aY;
static struct adl_operand _sym1101_operands[] = { {1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_aX_aY_sub_aX_aX_aY
static struct adl_operand _sym1099_operands[] = { {195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{198, 2, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1102[] = {
  // sub_aX_aY    (0)
  { "sub_aX_aY", 1, 15, 64,  0x0, { 0x0,0x90000000,},0, "", 0, 2, 2, 0, 0, _sym1101_operands,0,0,0, 0,&_sym1100,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1103_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1104[] = { &_sym2, &_sym2, &_sym24,  (struct enum_fields *) -1,};

// Instruction sub_asZ_aX_aY
static adl_instr_attrs _sym1106 = { ((uint64_t)(1ULL << instr_opA)) , 0 };

// Instruction sub_asZ_aX_aY
static struct adl_operand _sym1105_operands[] = { {31, 0, ADL_REGISTER, 0, 8, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{1, 1, ADL_REGISTER, 0, 4, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{8, 2, ADL_REGISTER, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1107[] = { &_sym30, &_sym2, &_sym24,  (struct enum_fields *) -1,};

// Instruction add_nco_k_Is10
static adl_instr_attrs _sym1109 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction add_nco_k_Is10
static struct adl_operand _sym1108_operands[] = { {72, 0, ADL_EXT_SIGNED, 0, 5, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1110[] = { 0,  (struct enum_fields *) -1,};

// Instruction clr_VRA
static adl_instr_attrs _sym1112 = { ((uint64_t)(1ULL << instr_opB)) , 0 };

// Instruction clr_VRA
static struct adl_operand _sym1111_operands[] = {  0 };
static struct enum_fields *_sym1113[] = {  (struct enum_fields *) -1,};

// Instruction fa0to1
static adl_instr_attrs _sym1115 = { ((uint64_t)(1ULL << instr_opB)) , 0 };

// Instruction fa0to1
static struct adl_operand _sym1114_operands[] = { {70, 0, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1116[] = { 0,  (struct enum_fields *) -1,};

// Instruction loop_stop
static adl_instr_attrs _sym1118 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_loop)) , 0 };

// Instruction loop_stop
static struct adl_operand _sym1117_operands[] = {  0 };
static struct enum_fields *_sym1119[] = {  (struct enum_fields *) -1,};

// Instruction mvB_aY_asX_opB
static adl_instr_attrs _sym1121 = { ((uint64_t)(1ULL << instr_opB)) , 0 };

// Instruction mvB_aY_asX_opB
static struct adl_operand _sym1120_operands[] = { {5, 0, ADL_REGISTER, 0, 7, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{27, 1, ADL_REGISTER, 0, 11, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1122[] = { &_sym2, &_sym30,  (struct enum_fields *) -1,};

// Instruction mvB_aY_asX_opB_mv
adl_instr_attr_val _sym1124[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opBS)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "mvS_aY_asX_opS_mv" }, { 0, 0, 0 } };
static adl_instr_attrs _sym1125 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opBS)) | ((uint64_t)(1ULL << instr_inst)) , _sym1124 };

// Shorthand:  mvB_aY_asX_opB_mv -> mvB_aY_asX_opB;
static struct adl_operand _sym1126_operands[] = { {5, 0, ADL_REGISTER, 0, 7, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{27, 1, ADL_REGISTER, 0, 11, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mvB_aY_asX_opB_mv
static struct adl_operand _sym1123_operands[] = { {195, 0, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{199, 1, ADL_REGISTER, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1127[] = {
  // mvB_aY_asX_opB    (0)
  { "mvB_aY_asX_opB", 1, 15, 64,  0x0, { 0x0,0xfa000000,},0, "", 0, 2, 2, 0, 0, _sym1126_operands,0,0,0, 0,&_sym1125,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1128[] = { &_sym2, &_sym30,  (struct enum_fields *) -1,};

// Instruction mvB_asY_aX_opB
static adl_instr_attrs _sym1130 = { ((uint64_t)(1ULL << instr_opB)) , 0 };

// Instruction mvB_asY_aX_opB
static struct adl_operand _sym1129_operands[] = { {27, 0, ADL_REGISTER, 0, 11, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{5, 1, ADL_REGISTER, 0, 7, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1131[] = { &_sym30, &_sym2,  (struct enum_fields *) -1,};

// Instruction mvB_asY_aX_opB_mv
adl_instr_attr_val _sym1133[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opBS)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "mvS_asY_aX_opS_mv" }, { 0, 0, 0 } };
static adl_instr_attrs _sym1134 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opBS)) | ((uint64_t)(1ULL << instr_inst)) , _sym1133 };

// Shorthand:  mvB_asY_aX_opB_mv -> mvB_asY_aX_opB;
static struct adl_operand _sym1135_operands[] = { {5, 1, ADL_REGISTER, 0, 7, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{27, 0, ADL_REGISTER, 0, 11, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mvB_asY_aX_opB_mv
static struct adl_operand _sym1132_operands[] = { {199, 0, ADL_REGISTER, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1136[] = {
  // mvB_asY_aX_opB    (0)
  { "mvB_asY_aX_opB", 1, 15, 64,  0x0, { 0x0,0xfa400000,},0, "", 0, 2, 2, 0, 0, _sym1135_operands,0,0,0, 0,&_sym1134,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1137[] = { &_sym30, &_sym2,  (struct enum_fields *) -1,};

// Instruction mv_nco_k_Iu10
static adl_instr_attrs _sym1139 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction mv_nco_k_Iu10
static struct adl_operand _sym1138_operands[] = { {123, 0, 0, 0, 5, 0ull, 0x3ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1140[] = { 0,  (struct enum_fields *) -1,};

// Instruction opB_nop
static adl_instr_attrs _sym1142 = { ((uint64_t)(1ULL << instr_opB)) , 0 };

// Instruction opB_nop
static struct adl_operand _sym1141_operands[] = {  0 };
static struct enum_fields *_sym1143[] = {  (struct enum_fields *) -1,};

// Instruction setB_page_rS0_Iu2_Iu2
static adl_instr_attrs _sym1145 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction setB_page_rS0_Iu2_Iu2
static struct adl_operand _sym1144_operands[] = { {106, 0, 0, 0, 6, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{129, 1, 0, 0, 10, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1146[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setB_page_rS0_Iu2_Iu2_set
adl_instr_attr_val _sym1148[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setA_page_rS0_Iu2_Iu2_set" }, { 0, 0, 0 } };
static adl_instr_attrs _sym1149 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) , _sym1148 };

// Shorthand:  setB_page_rS0_Iu2_Iu2_set -> setB_page_rS0_Iu2_Iu2;
static struct adl_operand _sym1150_operands[] = { {106, 0, 0, 0, 6, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{129, 1, 0, 0, 10, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setB_page_rS0_Iu2_Iu2_set
static struct adl_operand _sym1147_operands[] = { {314, 0, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{339, 1, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1151[] = {
  // setB_page_rS0_Iu2_Iu2    (0)
  { "setB_page_rS0_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xb0080000,},0, "", 0, 2, 2, 0, 0, _sym1150_operands,0,0,0, 0,&_sym1149,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1152[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setB_page_rS1_Iu2_Iu2
static adl_instr_attrs _sym1154 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction setB_page_rS1_Iu2_Iu2
static struct adl_operand _sym1153_operands[] = { {106, 0, 0, 0, 6, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{129, 1, 0, 0, 10, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1155[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setB_page_rS1_Iu2_Iu2_set
adl_instr_attr_val _sym1157[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setA_page_rS1_Iu2_Iu2_set" }, { 0, 0, 0 } };
static adl_instr_attrs _sym1158 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) , _sym1157 };

// Shorthand:  setB_page_rS1_Iu2_Iu2_set -> setB_page_rS1_Iu2_Iu2;
static struct adl_operand _sym1159_operands[] = { {106, 0, 0, 0, 6, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{129, 1, 0, 0, 10, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setB_page_rS1_Iu2_Iu2_set
static struct adl_operand _sym1156_operands[] = { {314, 0, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{339, 1, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1160[] = {
  // setB_page_rS1_Iu2_Iu2    (0)
  { "setB_page_rS1_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xb0060000,},0, "", 0, 2, 2, 0, 0, _sym1159_operands,0,0,0, 0,&_sym1158,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1161[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setB_page_rS2_Iu2_Iu2
static adl_instr_attrs _sym1163 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction setB_page_rS2_Iu2_Iu2
static struct adl_operand _sym1162_operands[] = { {106, 0, 0, 0, 6, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{129, 1, 0, 0, 10, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1164[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setB_page_rS2_Iu2_Iu2_set
adl_instr_attr_val _sym1166[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setA_page_rS2_Iu2_Iu2_set" }, { 0, 0, 0 } };
static adl_instr_attrs _sym1167 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) , _sym1166 };

// Shorthand:  setB_page_rS2_Iu2_Iu2_set -> setB_page_rS2_Iu2_Iu2;
static struct adl_operand _sym1168_operands[] = { {106, 0, 0, 0, 6, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{129, 1, 0, 0, 10, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setB_page_rS2_Iu2_Iu2_set
static struct adl_operand _sym1165_operands[] = { {314, 0, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{339, 1, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1169[] = {
  // setB_page_rS2_Iu2_Iu2    (0)
  { "setB_page_rS2_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xb0040000,},0, "", 0, 2, 2, 0, 0, _sym1168_operands,0,0,0, 0,&_sym1167,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1170[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setB_page_rV_Iu2_Iu2
static adl_instr_attrs _sym1172 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction setB_page_rV_Iu2_Iu2
static struct adl_operand _sym1171_operands[] = { {106, 0, 0, 0, 6, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{129, 1, 0, 0, 10, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1173[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setB_page_rV_Iu2_Iu2_set
adl_instr_attr_val _sym1175[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setA_page_rV_Iu2_Iu2_set" }, { 0, 0, 0 } };
static adl_instr_attrs _sym1176 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) , _sym1175 };

// Shorthand:  setB_page_rV_Iu2_Iu2_set -> setB_page_rV_Iu2_Iu2;
static struct adl_operand _sym1177_operands[] = { {106, 0, 0, 0, 6, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{129, 1, 0, 0, 10, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setB_page_rV_Iu2_Iu2_set
static struct adl_operand _sym1174_operands[] = { {314, 0, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{339, 1, 0, 0, 14, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1178[] = {
  // setB_page_rV_Iu2_Iu2    (0)
  { "setB_page_rV_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xb0020000,},0, "", 0, 2, 2, 0, 0, _sym1177_operands,0,0,0, 0,&_sym1176,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1179[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction setB_rS0_Iu9
static adl_instr_attrs _sym1181 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setB_rS0_Iu9
static struct adl_operand _sym1180_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1182[] = { 0,  (struct enum_fields *) -1,};

// Instruction setB_rS0_Iu9_set
adl_instr_attr_val _sym1184[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setA_rS0_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym1185 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym1184 };

// Shorthand:  setB_rS0_Iu9_set -> setB_rS0_Iu9;
static struct adl_operand _sym1186_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setB_rS0_Iu9_set
static struct adl_operand _sym1183_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1187[] = {
  // setB_rS0_Iu9    (0)
  { "setB_rS0_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0080000,},0, "", 0, 1, 1, 0, 0, _sym1186_operands,0,0,0, 0,&_sym1185,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1188[] = { 0,  (struct enum_fields *) -1,};

// Instruction setB_rS1_Iu9
static adl_instr_attrs _sym1190 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setB_rS1_Iu9
static struct adl_operand _sym1189_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1191[] = { 0,  (struct enum_fields *) -1,};

// Instruction setB_rS1_Iu9_set
adl_instr_attr_val _sym1193[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setA_rS1_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym1194 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym1193 };

// Shorthand:  setB_rS1_Iu9_set -> setB_rS1_Iu9;
static struct adl_operand _sym1195_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setB_rS1_Iu9_set
static struct adl_operand _sym1192_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1196[] = {
  // setB_rS1_Iu9    (0)
  { "setB_rS1_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0060000,},0, "", 0, 1, 1, 0, 0, _sym1195_operands,0,0,0, 0,&_sym1194,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1197[] = { 0,  (struct enum_fields *) -1,};

// Instruction setB_rS2_Iu9
static adl_instr_attrs _sym1199 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setB_rS2_Iu9
static struct adl_operand _sym1198_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1200[] = { 0,  (struct enum_fields *) -1,};

// Instruction setB_rS2_Iu9_set
adl_instr_attr_val _sym1202[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setA_rS2_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym1203 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym1202 };

// Shorthand:  setB_rS2_Iu9_set -> setB_rS2_Iu9;
static struct adl_operand _sym1204_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setB_rS2_Iu9_set
static struct adl_operand _sym1201_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1205[] = {
  // setB_rS2_Iu9    (0)
  { "setB_rS2_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0040000,},0, "", 0, 1, 1, 0, 0, _sym1204_operands,0,0,0, 0,&_sym1203,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1206[] = { 0,  (struct enum_fields *) -1,};

// Instruction setB_rSt_Iu9
static adl_instr_attrs _sym1208 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setB_rSt_Iu9
static struct adl_operand _sym1207_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1209[] = { 0,  (struct enum_fields *) -1,};

// Instruction setB_rSt_Iu9_set
adl_instr_attr_val _sym1211[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setA_rSt_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym1212 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym1211 };

// Shorthand:  setB_rSt_Iu9_set -> setB_rSt_Iu9;
static struct adl_operand _sym1213_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setB_rSt_Iu9_set
static struct adl_operand _sym1210_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1214[] = {
  // setB_rSt_Iu9    (0)
  { "setB_rSt_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0000000,},0, "", 0, 1, 1, 0, 0, _sym1213_operands,0,0,0, 0,&_sym1212,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1215[] = { 0,  (struct enum_fields *) -1,};

// Instruction setB_rV_Iu9
static adl_instr_attrs _sym1217 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , 0 };

// Instruction setB_rV_Iu9
static struct adl_operand _sym1216_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1218[] = { 0,  (struct enum_fields *) -1,};

// Instruction setB_rV_Iu9_set
adl_instr_attr_val _sym1220[] = { { ((uint64_t)(1ULL << instr_opB)),  0, 0 }, { ((uint64_t)(1ULL << instr_opAB)),  0, 0 }, { ((uint64_t)(1ULL << instr_ctrl)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "setA_rV_Iu9_set" }, { ((uint64_t)(1ULL << instr_set_vra_ptr)),  0, 0 }, { 0, 0, 0 } };
static adl_instr_attrs _sym1221 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_opAB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_inst)) | ((uint64_t)(1ULL << instr_set_vra_ptr)) , _sym1220 };

// Shorthand:  setB_rV_Iu9_set -> setB_rV_Iu9;
static struct adl_operand _sym1222_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction setB_rV_Iu9_set
static struct adl_operand _sym1219_operands[] = { {308, 0, 0, 0, 14, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1223[] = {
  // setB_rV_Iu9    (0)
  { "setB_rV_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0020000,},0, "", 0, 1, 1, 0, 0, _sym1222_operands,0,0,0, 0,&_sym1221,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1224[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_Smode
static adl_instr_attrs _sym1226 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_Smode
static struct adl_operand _sym1225_operands[] = { {130, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{133, 1, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 2, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{134, 3, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{136, 4, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1227[] = { &_sym268, &_sym280, &_sym272, &_sym284, &_sym292,  (struct enum_fields *) -1,};

// Instruction set_incr_rS0_Iu9
static adl_instr_attrs _sym1229 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_incr_rS0_Iu9
static struct adl_operand _sym1228_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1230[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_incr_rS1_Iu9
static adl_instr_attrs _sym1232 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_incr_rS1_Iu9
static struct adl_operand _sym1231_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1233[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_incr_rS2_Iu9
static adl_instr_attrs _sym1235 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_incr_rS2_Iu9
static struct adl_operand _sym1234_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1236[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_incr_rSt_Iu9
static adl_instr_attrs _sym1238 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_incr_rSt_Iu9
static struct adl_operand _sym1237_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1239[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_incr_rV_Iu9
static adl_instr_attrs _sym1241 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_incr_rV_Iu9
static struct adl_operand _sym1240_operands[] = { {102, 0, 0, 0, 3, 0ull, 0x1ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1242[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_loop_I
static adl_instr_attrs _sym1244 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_loop)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_loop_I
static struct adl_operand _sym1243_operands[] = { {109, 0, 0, 0, 5, 0ull, 0x3ffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1245[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_loop_I_syn
static adl_instr_attrs _sym1247 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_loop)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_loop_I_syn -> set_loop_I;

static bfd_uint64_t _sym1249_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (ITER_CNT_1_checker((operands[0].X_add_number),FALSE)) - 1; }
static struct adl_operand _sym1248_operands[] = { {109, 0, 0, 0, 0, 0, 0, 0, _sym1249_modifier, 0, 0,0, -1,-1,},};

// Instruction set_loop_I_syn
static struct adl_operand _sym1246_operands[] = { {317, 0, 0, 0, 14, 0ull, 0x7ffull, 0ull, 0, 0,ITER_CNT_1_checker, 0,-1,-1,},};
static struct adl_opcode _sym1250[] = {
  // set_loop_I    (0)
  { "set_loop_I", 1, 15, 64,  0x0, { 0x0,0xf0000000,},0, "", 0, 1, 1, 0, 0, _sym1248_operands,0,0,0, 0,&_sym1247,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1251[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_loop_asX
static adl_instr_attrs _sym1253 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_loop)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_loop_asX
static struct adl_operand _sym1252_operands[] = { {27, 0, ADL_REGISTER, 0, 11, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1254[] = { &_sym30,  (struct enum_fields *) -1,};

// Instruction set_prec
static adl_instr_attrs _sym1256 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) | ((uint64_t)(1ULL << instr_set_prec)) , 0 };

// Instruction set_prec
static struct adl_operand _sym1255_operands[] = { {132, 0, 0, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{135, 1, 0, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{137, 2, 0, 0, 7, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{32, 3, 0, 0, 13, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{141, 4, 0, 0, 5, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1257[] = { &_sym276, &_sym288, &_sym296, &_sym106, &_sym312,  (struct enum_fields *) -1,};

// Instruction set_rot_mode
static adl_instr_attrs _sym1259 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_rot_mode
static struct adl_operand _sym1258_operands[] = { {127, 0, 0, 0, 9, 0ull, 0x3full, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1260[] = { &_sym264,  (struct enum_fields *) -1,};

// Instruction set_smode_10_opB
static adl_instr_attrs _sym1262 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_10_opB -> set_Smode;
static struct adl_operand _sym1263_operands[] = { {134, 3, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 2, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{133, 1, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{130, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_10_opB
static struct adl_operand _sym1261_operands[] = { {340, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{343, 1, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 2, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{344, 3, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1264[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 4, 4, 0, 0, _sym1263_operands,0,0,0, 0,&_sym1262,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1265[] = { &_sym268, &_sym280, &_sym272, &_sym284,  (struct enum_fields *) -1,};

// Instruction set_smode_11_opB
static adl_instr_attrs _sym1267 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_11_opB -> set_Smode;
static struct adl_operand _sym1268_operands[] = { {136, 1, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_11_opB
static struct adl_operand _sym1266_operands[] = { {341, 0, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{346, 1, 0, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1269[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 2, 2, 0, 0, _sym1268_operands,0,0,0, 0,&_sym1267,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1270[] = { &_sym272, &_sym292,  (struct enum_fields *) -1,};

// Instruction set_smode_12_opB
static adl_instr_attrs _sym1272 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_12_opB -> set_Smode;
static struct adl_operand _sym1273_operands[] = { {136, 2, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{130, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_12_opB
static struct adl_operand _sym1271_operands[] = { {340, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{346, 2, 0, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1274[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 3, 3, 0, 0, _sym1273_operands,0,0,0, 0,&_sym1272,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1275[] = { &_sym268, &_sym272, &_sym292,  (struct enum_fields *) -1,};

// Instruction set_smode_13_opB
static adl_instr_attrs _sym1277 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_13_opB -> set_Smode;
static struct adl_operand _sym1278_operands[] = { {136, 2, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{133, 0, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_13_opB
static struct adl_operand _sym1276_operands[] = { {343, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{346, 2, 0, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1279[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 3, 3, 0, 0, _sym1278_operands,0,0,0, 0,&_sym1277,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1280[] = { &_sym280, &_sym272, &_sym292,  (struct enum_fields *) -1,};

// Instruction set_smode_14_opB
static adl_instr_attrs _sym1282 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_14_opB -> set_Smode;
static struct adl_operand _sym1283_operands[] = { {136, 3, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 2, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{133, 1, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{130, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_14_opB
static struct adl_operand _sym1281_operands[] = { {340, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{343, 1, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 2, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{346, 3, 0, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1284[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 4, 4, 0, 0, _sym1283_operands,0,0,0, 0,&_sym1282,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1285[] = { &_sym268, &_sym280, &_sym272, &_sym292,  (struct enum_fields *) -1,};

// Instruction set_smode_15_opB
static adl_instr_attrs _sym1287 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_15_opB -> set_Smode;
static struct adl_operand _sym1288_operands[] = { {136, 1, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{134, 0, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_15_opB
static struct adl_operand _sym1286_operands[] = { {344, 0, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{346, 1, 0, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1289[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 2, 2, 0, 0, _sym1288_operands,0,0,0, 0,&_sym1287,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1290[] = { &_sym284, &_sym292,  (struct enum_fields *) -1,};

// Instruction set_smode_16_opB
static adl_instr_attrs _sym1292 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_16_opB -> set_Smode;
static struct adl_operand _sym1293_operands[] = { {136, 2, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{134, 1, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_16_opB
static struct adl_operand _sym1291_operands[] = { {341, 0, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{344, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{346, 2, 0, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1294[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 3, 3, 0, 0, _sym1293_operands,0,0,0, 0,&_sym1292,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1295[] = { &_sym272, &_sym284, &_sym292,  (struct enum_fields *) -1,};

// Instruction set_smode_17_opB
static adl_instr_attrs _sym1297 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_17_opB -> set_Smode;
static struct adl_operand _sym1298_operands[] = { {136, 3, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{134, 2, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{130, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_17_opB
static struct adl_operand _sym1296_operands[] = { {340, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{344, 2, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{346, 3, 0, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1299[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 4, 4, 0, 0, _sym1298_operands,0,0,0, 0,&_sym1297,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1300[] = { &_sym268, &_sym272, &_sym284, &_sym292,  (struct enum_fields *) -1,};

// Instruction set_smode_18_opB
static adl_instr_attrs _sym1302 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_18_opB -> set_Smode;
static struct adl_operand _sym1303_operands[] = { {136, 3, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{134, 2, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{133, 0, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_18_opB
static struct adl_operand _sym1301_operands[] = { {343, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{344, 2, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{346, 3, 0, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1304[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 4, 4, 0, 0, _sym1303_operands,0,0,0, 0,&_sym1302,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1305[] = { &_sym280, &_sym272, &_sym284, &_sym292,  (struct enum_fields *) -1,};

// Instruction set_smode_1_opB
static adl_instr_attrs _sym1307 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_1_opB -> set_Smode;
static struct adl_operand _sym1308_operands[] = { {131, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_1_opB
static struct adl_operand _sym1306_operands[] = { {341, 0, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1309[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 1, 1, 0, 0, _sym1308_operands,0,0,0, 0,&_sym1307,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1310[] = { &_sym272,  (struct enum_fields *) -1,};

// Instruction set_smode_2_opB
static adl_instr_attrs _sym1312 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_2_opB -> set_Smode;
static struct adl_operand _sym1313_operands[] = { {131, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{130, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_2_opB
static struct adl_operand _sym1311_operands[] = { {340, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1314[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 2, 2, 0, 0, _sym1313_operands,0,0,0, 0,&_sym1312,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1315[] = { &_sym268, &_sym272,  (struct enum_fields *) -1,};

// Instruction set_smode_3_opB
static adl_instr_attrs _sym1317 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_3_opB -> set_Smode;
static struct adl_operand _sym1318_operands[] = { {131, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{133, 0, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_3_opB
static struct adl_operand _sym1316_operands[] = { {343, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1319[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 2, 2, 0, 0, _sym1318_operands,0,0,0, 0,&_sym1317,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1320[] = { &_sym280, &_sym272,  (struct enum_fields *) -1,};

// Instruction set_smode_4_opB
static adl_instr_attrs _sym1322 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_4_opB -> set_Smode;
static struct adl_operand _sym1323_operands[] = { {131, 2, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{133, 1, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{130, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_4_opB
static struct adl_operand _sym1321_operands[] = { {340, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{343, 1, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 2, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1324[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 3, 3, 0, 0, _sym1323_operands,0,0,0, 0,&_sym1322,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1325[] = { &_sym268, &_sym280, &_sym272,  (struct enum_fields *) -1,};

// Instruction set_smode_5_opB
static adl_instr_attrs _sym1327 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_5_opB -> set_Smode;
static struct adl_operand _sym1328_operands[] = { {134, 0, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_5_opB
static struct adl_operand _sym1326_operands[] = { {344, 0, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1329[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 1, 1, 0, 0, _sym1328_operands,0,0,0, 0,&_sym1327,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1330[] = { &_sym284,  (struct enum_fields *) -1,};

// Instruction set_smode_6_opB
static adl_instr_attrs _sym1332 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_6_opB -> set_Smode;
static struct adl_operand _sym1333_operands[] = { {136, 0, 0, 0, 2, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_6_opB
static struct adl_operand _sym1331_operands[] = { {346, 0, 0, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1334[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 1, 1, 0, 0, _sym1333_operands,0,0,0, 0,&_sym1332,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1335[] = { &_sym292,  (struct enum_fields *) -1,};

// Instruction set_smode_7_opB
static adl_instr_attrs _sym1337 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_7_opB -> set_Smode;
static struct adl_operand _sym1338_operands[] = { {134, 1, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_7_opB
static struct adl_operand _sym1336_operands[] = { {341, 0, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{344, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1339[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 2, 2, 0, 0, _sym1338_operands,0,0,0, 0,&_sym1337,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1340[] = { &_sym272, &_sym284,  (struct enum_fields *) -1,};

// Instruction set_smode_8_opB
static adl_instr_attrs _sym1342 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_8_opB -> set_Smode;
static struct adl_operand _sym1343_operands[] = { {134, 2, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{130, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_8_opB
static struct adl_operand _sym1341_operands[] = { {340, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{344, 2, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1344[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 3, 3, 0, 0, _sym1343_operands,0,0,0, 0,&_sym1342,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1345[] = { &_sym268, &_sym272, &_sym284,  (struct enum_fields *) -1,};

// Instruction set_smode_9_opB
static adl_instr_attrs _sym1347 = { ((uint64_t)(1ULL << instr_opB)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Shorthand:  set_smode_9_opB -> set_Smode;
static struct adl_operand _sym1348_operands[] = { {134, 2, 0, 0, 5, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{131, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{133, 0, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction set_smode_9_opB
static struct adl_operand _sym1346_operands[] = { {343, 0, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{341, 1, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{344, 2, 0, 0, 14, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1349[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },0, "", 0, 3, 3, 0, 0, _sym1348_operands,0,0,0, 0,&_sym1347,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1350[] = { &_sym280, &_sym272, &_sym284,  (struct enum_fields *) -1,};

// Instruction xtrm_aX
static adl_instr_attrs _sym1352 = { ((uint64_t)(1ULL << instr_opB)) , 0 };

// Instruction xtrm_aX
static struct adl_operand _sym1351_operands[] = { {4, 0, ADL_REGISTER, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1353[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction xtrm_aX_gY
static adl_instr_attrs _sym1355 = { ((uint64_t)(1ULL << instr_opB)) , 0 };

// Instruction xtrm_aX_gY
static struct adl_operand _sym1354_operands[] = { {4, 0, ADL_REGISTER, 0, 9, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{67, 1, ADL_REGISTER, 0, 11, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1356[] = { &_sym2, &_sym186,  (struct enum_fields *) -1,};

// Instruction xtrm_gY
static adl_instr_attrs _sym1358 = { ((uint64_t)(1ULL << instr_opB)) , 0 };

// Instruction xtrm_gY
static struct adl_operand _sym1357_operands[] = { {67, 0, ADL_REGISTER, 0, 11, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1359[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction loop_begin
static adl_instr_attrs _sym1361 = { ((uint64_t)(1ULL << instr_opZ)) | ((uint64_t)(1ULL << instr_loop_begin)) | ((uint64_t)(1ULL << instr_loop)) , 0 };

// Instruction loop_begin
static struct adl_operand _sym1360_operands[] = {  0 };
static struct enum_fields *_sym1362[] = {  (struct enum_fields *) -1,};

// Instruction opZ_nop
static adl_instr_attrs _sym1364 = { ((uint64_t)(1ULL << instr_opZ)) , 0 };

// Instruction opZ_nop
static struct adl_operand _sym1363_operands[] = {  0 };
static struct enum_fields *_sym1365[] = {  (struct enum_fields *) -1,};

// Instruction rts
static adl_instr_attrs _sym1367 = { ((uint64_t)(1ULL << instr_opZ)) | ((uint64_t)(1ULL << instr_rts)) , 0 };

// Instruction rts
static struct adl_operand _sym1366_operands[] = {  0 };
static struct enum_fields *_sym1368[] = {  (struct enum_fields *) -1,};

// Instruction opX_nop
static adl_instr_attrs _sym1370 = { ((uint64_t)(1ULL << instr_opX)) , 0 };

// Instruction opX_nop
static struct adl_operand _sym1369_operands[] = {  0 };
static struct enum_fields *_sym1371[] = {  (struct enum_fields *) -1,};

// Instruction swbreak
static adl_instr_attrs _sym1373 = { ((uint64_t)(1ULL << instr_opX)) , 0 };

// Instruction swbreak
static struct adl_operand _sym1372_operands[] = {  0 };
static struct enum_fields *_sym1374[] = {  (struct enum_fields *) -1,};

// Instruction swbreak_lower
static adl_instr_attrs _sym1376 = { ((uint64_t)(1ULL << instr_opX)) , 0 };

// Instruction swbreak_lower
static struct adl_operand _sym1375_operands[] = {  0 };
static struct enum_fields *_sym1377[] = {  (struct enum_fields *) -1,};

// Instruction swbreak_upper
static adl_instr_attrs _sym1379 = { ((uint64_t)(1ULL << instr_opX)) , 0 };

// Instruction swbreak_upper
static struct adl_operand _sym1378_operands[] = {  0 };
static struct enum_fields *_sym1380[] = {  (struct enum_fields *) -1,};

// Instruction fnop
static adl_instr_attrs _sym1382 = { ((uint64_t)(1ULL << instr_fnop)) , 0 };

// Instruction fnop
static struct adl_operand _sym1381_operands[] = {  0 };
static struct enum_fields *_sym1383[] = {  (struct enum_fields *) -1,};

// Instruction loop_end
static adl_instr_attrs _sym1385 = { ((uint64_t)(1ULL << instr_fnop)) | ((uint64_t)(1ULL << instr_loop_end)) | ((uint64_t)(1ULL << instr_loop)) , 0 };

// Shorthand:  loop_end -> fnop;
static struct adl_operand _sym1386_operands[] = {  0 };

// Instruction loop_end
static struct adl_operand _sym1384_operands[] = {  0 };
static struct adl_opcode _sym1387[] = {
  // fnop    (0)
  { "fnop", 8, 64, 64,  0x7, { 0x0,0x40000,},0, "", 0, 0, 0, 0, 0, _sym1386_operands,0,0,0, 0,&_sym1385,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1388[] = {  (struct enum_fields *) -1,};

// Instruction rd_S0
static adl_instr_attrs _sym1390 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVs0)) , 0 };

// Instruction rd_S0
static struct adl_operand _sym1389_operands[] = {  0 };
static struct enum_fields *_sym1391[] = {  (struct enum_fields *) -1,};

// Instruction rd_s0_nop
static adl_instr_attrs _sym1393 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVs0)) , 0 };

// Instruction rd_s0_nop
static struct adl_operand _sym1392_operands[] = {  0 };
static struct enum_fields *_sym1394[] = {  (struct enum_fields *) -1,};

// Instruction rd_S1
static adl_instr_attrs _sym1396 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVs1)) , 0 };

// Instruction rd_S1
static struct adl_operand _sym1395_operands[] = {  0 };
static struct enum_fields *_sym1397[] = {  (struct enum_fields *) -1,};

// Instruction rd_s1_nop
static adl_instr_attrs _sym1399 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVs1)) , 0 };

// Instruction rd_s1_nop
static struct adl_operand _sym1398_operands[] = {  0 };
static struct enum_fields *_sym1400[] = {  (struct enum_fields *) -1,};

// Instruction rd_S2
static adl_instr_attrs _sym1402 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVs2)) , 0 };

// Instruction rd_S2
static struct adl_operand _sym1401_operands[] = {  0 };
static struct enum_fields *_sym1403[] = {  (struct enum_fields *) -1,};

// Instruction rd_s2_nop
static adl_instr_attrs _sym1405 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVs2)) , 0 };

// Instruction rd_s2_nop
static struct adl_operand _sym1404_operands[] = {  0 };
static struct enum_fields *_sym1406[] = {  (struct enum_fields *) -1,};

// Instruction rot
static adl_instr_attrs _sym1408 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVrot)) , 0 };

// Instruction rot
static struct adl_operand _sym1407_operands[] = {  0 };
static struct enum_fields *_sym1409[] = {  (struct enum_fields *) -1,};

// Instruction rot_nop
static adl_instr_attrs _sym1411 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVrot)) , 0 };

// Instruction rot_nop
static struct adl_operand _sym1410_operands[] = {  0 };
static struct enum_fields *_sym1412[] = {  (struct enum_fields *) -1,};

// Instruction bin2num_Rx
static adl_instr_attrs _sym1414 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction bin2num_Rx
static struct adl_operand _sym1413_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1415[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction clr_Rx_ld_Rx_zeros
static adl_instr_attrs _sym1417 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction clr_Rx_ld_Rx_zeros
static struct adl_operand _sym1416_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1418[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_h2h
static adl_instr_attrs _sym1420 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_h2h
static struct adl_operand _sym1419_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1421[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_h2l
static adl_instr_attrs _sym1423 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_h2l
static struct adl_operand _sym1422_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1424[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_h2l_l2h
static adl_instr_attrs _sym1426 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_h2l_l2h
static struct adl_operand _sym1425_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1427[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_l2h
static adl_instr_attrs _sym1429 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_l2h
static struct adl_operand _sym1428_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1430[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_l2h_h2l
static adl_instr_attrs _sym1432 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_l2h_h2l
static struct adl_operand _sym1431_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1433[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_l2l
static adl_instr_attrs _sym1435 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_l2l
static struct adl_operand _sym1434_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1436[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_nop
static adl_instr_attrs _sym1438 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_nop
static struct adl_operand _sym1437_operands[] = {  0 };
static struct enum_fields *_sym1439[] = {  (struct enum_fields *) -1,};

// Instruction ld_Rx_normal
static adl_instr_attrs _sym1441 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_normal
static struct adl_operand _sym1440_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1442[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_qam
static adl_instr_attrs _sym1444 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_qam
static struct adl_operand _sym1443_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1445[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_replace_h
static adl_instr_attrs _sym1447 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_replace_h
static struct adl_operand _sym1446_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1448[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction ld_Rx_replace_l
static adl_instr_attrs _sym1450 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVr)) , 0 };

// Instruction ld_Rx_replace_l
static struct adl_operand _sym1449_operands[] = { {126, 0, ADL_REGISTER, 0, 4, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1451[] = { &_sym260,  (struct enum_fields *) -1,};

// Instruction st_au_st_sau_nop
static adl_instr_attrs _sym1453 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Instruction st_au_st_sau_nop
static struct adl_operand _sym1452_operands[] = {  0 };
static struct enum_fields *_sym1454[] = {  (struct enum_fields *) -1,};

// Instruction wr_even_fft7_fft2
static adl_instr_attrs _sym1456 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Instruction wr_even_fft7_fft2
static struct adl_operand _sym1455_operands[] = {  0 };
static struct enum_fields *_sym1457[] = {  (struct enum_fields *) -1,};

// Instruction wr_even_fft7_fft2_wr_even
static adl_instr_attrs _sym1459 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Shorthand:  wr_even_fft7_fft2_wr_even -> wr_even_fft7_fft2;
static struct adl_operand _sym1460_operands[] = {  0 };

// Instruction wr_even_fft7_fft2_wr_even
static struct adl_operand _sym1458_operands[] = {  0 };
static struct adl_opcode _sym1461[] = {
  // wr_even_fft7_fft2    (0)
  { "wr_even_fft7_fft2", 0, 3, 64,  0x0, { 0x0,0xe0000000,},0, "", 0, 0, 0, 0, 0, _sym1460_operands,0,0,0, 0,&_sym1459,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1462[] = {  (struct enum_fields *) -1,};

// Instruction wr_even_fft7_fft2_wr_fft2
static adl_instr_attrs _sym1464 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Shorthand:  wr_even_fft7_fft2_wr_fft2 -> wr_even_fft7_fft2;
static struct adl_operand _sym1465_operands[] = {  0 };

// Instruction wr_even_fft7_fft2_wr_fft2
static struct adl_operand _sym1463_operands[] = {  0 };
static struct adl_opcode _sym1466[] = {
  // wr_even_fft7_fft2    (0)
  { "wr_even_fft7_fft2", 0, 3, 64,  0x0, { 0x0,0xe0000000,},0, "", 0, 0, 0, 0, 0, _sym1465_operands,0,0,0, 0,&_sym1464,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1467[] = {  (struct enum_fields *) -1,};

// Instruction wr_even_fft7_fft2_wr_fft7
static adl_instr_attrs _sym1469 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Shorthand:  wr_even_fft7_fft2_wr_fft7 -> wr_even_fft7_fft2;
static struct adl_operand _sym1470_operands[] = {  0 };

// Instruction wr_even_fft7_fft2_wr_fft7
static struct adl_operand _sym1468_operands[] = {  0 };
static struct adl_opcode _sym1471[] = {
  // wr_even_fft7_fft2    (0)
  { "wr_even_fft7_fft2", 0, 3, 64,  0x0, { 0x0,0xe0000000,},0, "", 0, 0, 0, 0, 0, _sym1470_operands,0,0,0, 0,&_sym1469,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1472[] = {  (struct enum_fields *) -1,};

// Instruction wr_fft3
static adl_instr_attrs _sym1474 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Instruction wr_fft3
static struct adl_operand _sym1473_operands[] = {  0 };
static struct enum_fields *_sym1475[] = {  (struct enum_fields *) -1,};

// Instruction wr_fft4
static adl_instr_attrs _sym1477 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Instruction wr_fft4
static struct adl_operand _sym1476_operands[] = {  0 };
static struct enum_fields *_sym1478[] = {  (struct enum_fields *) -1,};

// Instruction wr_fftn_fft1
static adl_instr_attrs _sym1480 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Instruction wr_fftn_fft1
static struct adl_operand _sym1479_operands[] = {  0 };
static struct enum_fields *_sym1481[] = {  (struct enum_fields *) -1,};

// Instruction wr_fftn_fft1_wr_fft1
static adl_instr_attrs _sym1483 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Shorthand:  wr_fftn_fft1_wr_fft1 -> wr_fftn_fft1;
static struct adl_operand _sym1484_operands[] = {  0 };

// Instruction wr_fftn_fft1_wr_fft1
static struct adl_operand _sym1482_operands[] = {  0 };
static struct adl_opcode _sym1485[] = {
  // wr_fftn_fft1    (0)
  { "wr_fftn_fft1", 0, 3, 64,  0x0, { 0x0,0x40000000,},0, "", 0, 0, 0, 0, 0, _sym1484_operands,0,0,0, 0,&_sym1483,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1486[] = {  (struct enum_fields *) -1,};

// Instruction wr_fftn_fft1_wr_fftn
static adl_instr_attrs _sym1488 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Shorthand:  wr_fftn_fft1_wr_fftn -> wr_fftn_fft1;
static struct adl_operand _sym1489_operands[] = {  0 };

// Instruction wr_fftn_fft1_wr_fftn
static struct adl_operand _sym1487_operands[] = {  0 };
static struct adl_opcode _sym1490[] = {
  // wr_fftn_fft1    (0)
  { "wr_fftn_fft1", 0, 3, 64,  0x0, { 0x0,0x40000000,},0, "", 0, 0, 0, 0, 0, _sym1489_operands,0,0,0, 0,&_sym1488,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1491[] = {  (struct enum_fields *) -1,};

// Instruction wr_fn1_fft6
static adl_instr_attrs _sym1493 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Instruction wr_fn1_fft6
static struct adl_operand _sym1492_operands[] = {  0 };
static struct enum_fields *_sym1494[] = {  (struct enum_fields *) -1,};

// Instruction wr_fn1_fft6_wr_fft6
static adl_instr_attrs _sym1496 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Shorthand:  wr_fn1_fft6_wr_fft6 -> wr_fn1_fft6;
static struct adl_operand _sym1497_operands[] = {  0 };

// Instruction wr_fn1_fft6_wr_fft6
static struct adl_operand _sym1495_operands[] = {  0 };
static struct adl_opcode _sym1498[] = {
  // wr_fn1_fft6    (0)
  { "wr_fn1_fft6", 0, 3, 64,  0x0, { 0x0,0x60000000,},0, "", 0, 0, 0, 0, 0, _sym1497_operands,0,0,0, 0,&_sym1496,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1499[] = {  (struct enum_fields *) -1,};

// Instruction wr_fn1_fft6_wr_fn1
static adl_instr_attrs _sym1501 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Shorthand:  wr_fn1_fft6_wr_fn1 -> wr_fn1_fft6;
static struct adl_operand _sym1502_operands[] = {  0 };

// Instruction wr_fn1_fft6_wr_fn1
static struct adl_operand _sym1500_operands[] = {  0 };
static struct adl_opcode _sym1503[] = {
  // wr_fn1_fft6    (0)
  { "wr_fn1_fft6", 0, 3, 64,  0x0, { 0x0,0x60000000,},0, "", 0, 0, 0, 0, 0, _sym1502_operands,0,0,0, 0,&_sym1501,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1504[] = {  (struct enum_fields *) -1,};

// Instruction wr_fn_fft5
static adl_instr_attrs _sym1506 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Instruction wr_fn_fft5
static struct adl_operand _sym1505_operands[] = {  0 };
static struct enum_fields *_sym1507[] = {  (struct enum_fields *) -1,};

// Instruction wr_fn_fft5_wr_fft5
static adl_instr_attrs _sym1509 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Shorthand:  wr_fn_fft5_wr_fft5 -> wr_fn_fft5;
static struct adl_operand _sym1510_operands[] = {  0 };

// Instruction wr_fn_fft5_wr_fft5
static struct adl_operand _sym1508_operands[] = {  0 };
static struct adl_opcode _sym1511[] = {
  // wr_fn_fft5    (0)
  { "wr_fn_fft5", 0, 3, 64,  0x0, { 0x0,0x80000000,},0, "", 0, 0, 0, 0, 0, _sym1510_operands,0,0,0, 0,&_sym1509,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1512[] = {  (struct enum_fields *) -1,};

// Instruction wr_fn_fft5_wr_fn
static adl_instr_attrs _sym1514 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Shorthand:  wr_fn_fft5_wr_fn -> wr_fn_fft5;
static struct adl_operand _sym1515_operands[] = {  0 };

// Instruction wr_fn_fft5_wr_fn
static struct adl_operand _sym1513_operands[] = {  0 };
static struct adl_opcode _sym1516[] = {
  // wr_fn_fft5    (0)
  { "wr_fn_fft5", 0, 3, 64,  0x0, { 0x0,0x80000000,},0, "", 0, 0, 0, 0, 0, _sym1515_operands,0,0,0, 0,&_sym1514,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1517[] = {  (struct enum_fields *) -1,};

// Instruction wr_normal
static adl_instr_attrs _sym1519 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVd)) , 0 };

// Instruction wr_normal
static struct adl_operand _sym1518_operands[] = {  0 };
static struct enum_fields *_sym1520[] = {  (struct enum_fields *) -1,};

// Instruction atan
static adl_instr_attrs _sym1522 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) | ((uint64_t)(1ULL << instr_en_4au)) , 0 };

// Instruction atan
static struct adl_operand _sym1521_operands[] = {  0 };
static struct enum_fields *_sym1523[] = {  (struct enum_fields *) -1,};

// Instruction au_nop
static adl_instr_attrs _sym1525 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Instruction au_nop
static struct adl_operand _sym1524_operands[] = {  0 };
static struct enum_fields *_sym1526[] = {  (struct enum_fields *) -1,};

// Instruction dif
static adl_instr_attrs _sym1528 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Instruction dif
static struct adl_operand _sym1527_operands[] = {  0 };
static struct enum_fields *_sym1529[] = {  (struct enum_fields *) -1,};

// Instruction mac
static adl_instr_attrs _sym1531 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Instruction mac
static struct adl_operand _sym1530_operands[] = {  0 };
static struct enum_fields *_sym1532[] = {  (struct enum_fields *) -1,};

// Instruction mad_dit
static adl_instr_attrs _sym1534 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Instruction mad_dit
static struct adl_operand _sym1533_operands[] = {  0 };
static struct enum_fields *_sym1535[] = {  (struct enum_fields *) -1,};

// Instruction mad_dit_dit
static adl_instr_attrs _sym1537 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Shorthand:  mad_dit_dit -> mad_dit;
static struct adl_operand _sym1538_operands[] = {  0 };

// Instruction mad_dit_dit
static struct adl_operand _sym1536_operands[] = {  0 };
static struct adl_opcode _sym1539[] = {
  // mad_dit    (0)
  { "mad_dit", 0, 4, 64,  0x0, { 0x0,0x10000000,},0, "", 0, 0, 0, 0, 0, _sym1538_operands,0,0,0, 0,&_sym1537,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1540[] = {  (struct enum_fields *) -1,};

// Instruction mad_dit_mad
static adl_instr_attrs _sym1542 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Shorthand:  mad_dit_mad -> mad_dit;
static struct adl_operand _sym1543_operands[] = {  0 };

// Instruction mad_dit_mad
static struct adl_operand _sym1541_operands[] = {  0 };
static struct adl_opcode _sym1544[] = {
  // mad_dit    (0)
  { "mad_dit", 0, 4, 64,  0x0, { 0x0,0x10000000,},0, "", 0, 0, 0, 0, 0, _sym1543_operands,0,0,0, 0,&_sym1542,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1545[] = {  (struct enum_fields *) -1,};

// Instruction mads
static adl_instr_attrs _sym1547 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Instruction mads
static struct adl_operand _sym1546_operands[] = {  0 };
static struct enum_fields *_sym1548[] = {  (struct enum_fields *) -1,};

// Instruction maf
static adl_instr_attrs _sym1550 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Instruction maf
static struct adl_operand _sym1549_operands[] = {  0 };
static struct enum_fields *_sym1551[] = {  (struct enum_fields *) -1,};

// Instruction rcp
static adl_instr_attrs _sym1553 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) | ((uint64_t)(1ULL << instr_dis_64au_sp)) , 0 };

// Instruction rcp
static struct adl_operand _sym1552_operands[] = {  0 };
static struct enum_fields *_sym1554[] = {  (struct enum_fields *) -1,};

// Instruction rcp_e
static adl_instr_attrs _sym1556 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) | ((uint64_t)(1ULL << instr_dis_64au_sp)) , 0 };

// Instruction rcp_e
static struct adl_operand _sym1555_operands[] = {  0 };
static struct enum_fields *_sym1557[] = {  (struct enum_fields *) -1,};

// Instruction rrt
static adl_instr_attrs _sym1559 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) | ((uint64_t)(1ULL << instr_dis_all_dp)) , 0 };

// Instruction rrt
static struct adl_operand _sym1558_operands[] = {  0 };
static struct enum_fields *_sym1560[] = {  (struct enum_fields *) -1,};

// Instruction rrt_e
static adl_instr_attrs _sym1562 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) | ((uint64_t)(1ULL << instr_dis_all_dp)) , 0 };

// Instruction rrt_e
static struct adl_operand _sym1561_operands[] = {  0 };
static struct enum_fields *_sym1563[] = {  (struct enum_fields *) -1,};

// Instruction srt
static adl_instr_attrs _sym1565 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Instruction srt
static struct adl_operand _sym1564_operands[] = {  0 };
static struct enum_fields *_sym1566[] = {  (struct enum_fields *) -1,};

// Instruction srt_e
static adl_instr_attrs _sym1568 = { ((uint64_t)(1ULL << instr_opV)) | ((uint64_t)(1ULL << instr_opVau)) , 0 };

// Instruction srt_e
static struct adl_operand _sym1567_operands[] = {  0 };
static struct enum_fields *_sym1569[] = {  (struct enum_fields *) -1,};

// Instruction abs_gY_gX
static adl_instr_attrs _sym1571 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction abs_gY_gX
static struct adl_operand _sym1570_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1572[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction add_cc_gX_sp_sp_0
static adl_instr_attrs _sym1574 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gX_sp_sp_0
static struct adl_operand _sym1573_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1575[] = { &_sym128, &_sym216,  (struct enum_fields *) -1,};

// Instruction add_cc_gX_sp_sp_1
static adl_instr_attrs _sym1577 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gX_sp_sp_1
static struct adl_operand _sym1576_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1578[] = { &_sym128, &_sym222,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_000
static adl_instr_attrs _sym1580 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_000
static struct adl_operand _sym1579_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1581[] = { &_sym128, &_sym216, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_001
static adl_instr_attrs _sym1583 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_001
static struct adl_operand _sym1582_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1584[] = { &_sym128, &_sym216, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_010
static adl_instr_attrs _sym1586 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_010
static struct adl_operand _sym1585_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1587[] = { &_sym128, &_sym216, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_011
static adl_instr_attrs _sym1589 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_011
static struct adl_operand _sym1588_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1590[] = { &_sym128, &_sym216, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_100
static adl_instr_attrs _sym1592 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_100
static struct adl_operand _sym1591_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1593[] = { &_sym128, &_sym222, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_101
static adl_instr_attrs _sym1595 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_101
static struct adl_operand _sym1594_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1596[] = { &_sym128, &_sym222, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_110
static adl_instr_attrs _sym1598 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_110
static struct adl_operand _sym1597_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1599[] = { &_sym128, &_sym222, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_111
static adl_instr_attrs _sym1601 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_111
static struct adl_operand _sym1600_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1602[] = { &_sym128, &_sym222, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gY_sp_00
static adl_instr_attrs _sym1604 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gY_sp_00
static struct adl_operand _sym1603_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1605[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gY_sp_01
static adl_instr_attrs _sym1607 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gY_sp_01
static struct adl_operand _sym1606_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1608[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gY_sp_10
static adl_instr_attrs _sym1610 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gY_sp_10
static struct adl_operand _sym1609_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1611[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gY_sp_11
static adl_instr_attrs _sym1613 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gY_sp_11
static struct adl_operand _sym1612_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1614[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_sp_gX_00
static adl_instr_attrs _sym1616 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_sp_gX_00
static struct adl_operand _sym1615_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1617[] = { &_sym128, &_sym216, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_sp_gX_01
static adl_instr_attrs _sym1619 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_sp_gX_01
static struct adl_operand _sym1618_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1620[] = { &_sym128, &_sym216, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_sp_gX_10
static adl_instr_attrs _sym1622 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_sp_gX_10
static struct adl_operand _sym1621_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1623[] = { &_sym128, &_sym222, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_sp_gX_11
static adl_instr_attrs _sym1625 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_sp_gX_11
static struct adl_operand _sym1624_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1626[] = { &_sym128, &_sym222, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gX_0
static adl_instr_attrs _sym1628 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_cc_sp_gX_0 -> add_cc_sp_sp_gX_0;
static struct adl_operand _sym1629_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_cc_sp_gX_0
static struct adl_operand _sym1627_operands[] = { {226, 0, 0, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{249, 1, ADL_REGISTER, 0, 24, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1630[] = {
  // add_cc_sp_sp_gX_0    (0)
  { "add_cc_sp_sp_gX_0", 3, 25, 64,  0x1, { 0x0,0x34007700,},0, "", 0, 2, 2, 0, 1, _sym1629_operands,0,0,1, 0,&_sym1628,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1631[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gX_1
static adl_instr_attrs _sym1633 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_cc_sp_gX_1 -> add_cc_sp_sp_gX_1;
static struct adl_operand _sym1634_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_cc_sp_gX_1
static struct adl_operand _sym1632_operands[] = { {226, 0, 0, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{250, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1635[] = {
  // add_cc_sp_sp_gX_1    (0)
  { "add_cc_sp_sp_gX_1", 3, 25, 64,  0x1, { 0x0,0x34047700,},0, "", 0, 2, 2, 0, 1, _sym1634_operands,0,0,1, 0,&_sym1633,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1636[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_gX_00
static adl_instr_attrs _sym1638 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_gX_00
static struct adl_operand _sym1637_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1639[] = { &_sym128, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_gX_01
static adl_instr_attrs _sym1641 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_gX_01
static struct adl_operand _sym1640_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1642[] = { &_sym128, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_gX_10
static adl_instr_attrs _sym1644 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_gX_10
static struct adl_operand _sym1643_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1645[] = { &_sym128, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_gX_11
static adl_instr_attrs _sym1647 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_gX_11
static struct adl_operand _sym1646_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1648[] = { &_sym128, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_sp_0
static adl_instr_attrs _sym1650 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_sp_0
static struct adl_operand _sym1649_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1651[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_sp_1
static adl_instr_attrs _sym1653 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_sp_1
static struct adl_operand _sym1652_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1654[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_sp_gX_0
static adl_instr_attrs _sym1656 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_sp_gX_0
static struct adl_operand _sym1655_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1657[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_sp_gX_1
static adl_instr_attrs _sym1659 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_sp_gX_1
static struct adl_operand _sym1658_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1660[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_sp_sp
static adl_instr_attrs _sym1662 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_sp_sp
static struct adl_operand _sym1661_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1663[] = { &_sym128,  (struct enum_fields *) -1,};

// Instruction add_gY_H_gX_00
static adl_instr_attrs _sym1665 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_H_gX_00
static struct adl_operand _sym1664_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1666[] = { &_sym128, &_sym216, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_gY_H_gX_01
static adl_instr_attrs _sym1668 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_H_gX_01
static struct adl_operand _sym1667_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1669[] = { &_sym128, &_sym216, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_gY_H_gX_10
static adl_instr_attrs _sym1671 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_H_gX_10
static struct adl_operand _sym1670_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1672[] = { &_sym128, &_sym222, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_gY_H_gX_11
static adl_instr_attrs _sym1674 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_H_gX_11
static struct adl_operand _sym1673_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1675[] = { &_sym128, &_sym222, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_gY_gX_H_00
static adl_instr_attrs _sym1677 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_gX_H_00
static struct adl_operand _sym1676_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1678[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_gY_gX_H_01
static adl_instr_attrs _sym1680 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_gX_H_01
static struct adl_operand _sym1679_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1681[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_gY_gX_H_10
static adl_instr_attrs _sym1683 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_gX_H_10
static struct adl_operand _sym1682_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1684[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_gY_gX_H_11
static adl_instr_attrs _sym1686 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_gX_H_11
static struct adl_operand _sym1685_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1687[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16
static adl_instr_attrs _sym1689 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_s_gX_Is16
static struct adl_operand _sym1688_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1690[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_add
static adl_instr_attrs _sym1692 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_add -> add_s_gX_Is16;
static struct adl_operand _sym1693_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_add
static struct adl_operand _sym1691_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1694[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000000,},0, "", 0, 2, 2, 0, 0, _sym1693_operands,0,0,0, 0,&_sym1692,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1695[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_gX
static adl_instr_attrs _sym1697 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_gX -> add_s_gX_Is16;
static struct adl_operand _sym1698_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_gX
static struct adl_operand _sym1696_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1699[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000000,},0, "", 0, 2, 2, 0, 0, _sym1698_operands,0,0,0, 0,&_sym1697,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1700_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1701[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_gX_add
static adl_instr_attrs _sym1703 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_gX_add -> add_s_gX_Is16;
static struct adl_operand _sym1704_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_gX_add
static struct adl_operand _sym1702_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1705[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000000,},0, "", 0, 2, 2, 0, 0, _sym1704_operands,0,0,0, 0,&_sym1703,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1706_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1707[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_sp
static adl_instr_attrs _sym1709 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_sp -> add_s_gX_Is16;
static struct adl_operand _sym1710_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_sp
static struct adl_operand _sym1708_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1711[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000700,},0, "", 0, 1, 1, 0, 0, _sym1710_operands,0,0,0, 0,&_sym1709,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1712[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_sp_add
static adl_instr_attrs _sym1714 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_sp_add -> add_s_gX_Is16;
static struct adl_operand _sym1715_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_sp_add
static struct adl_operand _sym1713_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1716[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000700,},0, "", 0, 1, 1, 0, 0, _sym1715_operands,0,0,0, 0,&_sym1714,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1717[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_sp_sp
static adl_instr_attrs _sym1719 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_sp_sp -> add_s_gX_Is16;
static struct adl_operand _sym1720_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_sp_sp
static struct adl_operand _sym1718_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1721[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000700,},0, "", 0, 1, 1, 0, 0, _sym1720_operands,0,0,0, 0,&_sym1719,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1722[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_sp_sp_add
static adl_instr_attrs _sym1724 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_sp_sp_add -> add_s_gX_Is16;
static struct adl_operand _sym1725_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_sp_sp_add
static struct adl_operand _sym1723_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1726[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000700,},0, "", 0, 1, 1, 0, 0, _sym1725_operands,0,0,0, 0,&_sym1724,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1727[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16
static adl_instr_attrs _sym1729 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_z_gX_Iu16
static struct adl_operand _sym1728_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1730[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_add
static adl_instr_attrs _sym1732 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_add -> add_z_gX_Iu16;
static struct adl_operand _sym1733_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_add
static struct adl_operand _sym1731_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1734[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000000,},0, "", 0, 2, 2, 0, 0, _sym1733_operands,0,0,0, 0,&_sym1732,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1735[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_gX
static adl_instr_attrs _sym1737 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_gX -> add_z_gX_Iu16;
static struct adl_operand _sym1738_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_gX
static struct adl_operand _sym1736_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1739[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000000,},0, "", 0, 2, 2, 0, 0, _sym1738_operands,0,0,0, 0,&_sym1737,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1740_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1741[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_gX_add
static adl_instr_attrs _sym1743 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_gX_add -> add_z_gX_Iu16;
static struct adl_operand _sym1744_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_gX_add
static struct adl_operand _sym1742_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1745[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000000,},0, "", 0, 2, 2, 0, 0, _sym1744_operands,0,0,0, 0,&_sym1743,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1746_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1747[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_sp
static adl_instr_attrs _sym1749 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_sp -> add_z_gX_Iu16;
static struct adl_operand _sym1750_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_sp
static struct adl_operand _sym1748_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1751[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000700,},0, "", 0, 1, 1, 0, 0, _sym1750_operands,0,0,0, 0,&_sym1749,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1752[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_sp_add
static adl_instr_attrs _sym1754 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_sp_add -> add_z_gX_Iu16;
static struct adl_operand _sym1755_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_sp_add
static struct adl_operand _sym1753_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1756[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000700,},0, "", 0, 1, 1, 0, 0, _sym1755_operands,0,0,0, 0,&_sym1754,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1757[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_sp_sp
static adl_instr_attrs _sym1759 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_sp_sp -> add_z_gX_Iu16;
static struct adl_operand _sym1760_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_sp_sp
static struct adl_operand _sym1758_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1761[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000700,},0, "", 0, 1, 1, 0, 0, _sym1760_operands,0,0,0, 0,&_sym1759,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1762[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_sp_sp_add
static adl_instr_attrs _sym1764 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_sp_sp_add -> add_z_gX_Iu16;
static struct adl_operand _sym1765_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_sp_sp_add
static struct adl_operand _sym1763_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1766[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000700,},0, "", 0, 1, 1, 0, 0, _sym1765_operands,0,0,0, 0,&_sym1764,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1767[] = { 0,  (struct enum_fields *) -1,};

// Instruction and_H
static adl_instr_attrs _sym1769 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_H
static struct adl_operand _sym1768_operands[] = {  0 };
static struct enum_fields *_sym1770[] = {  (struct enum_fields *) -1,};

// Instruction and_cc_gX_sp_sp_0
static adl_instr_attrs _sym1772 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gX_sp_sp_0
static struct adl_operand _sym1771_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1773[] = { &_sym128, &_sym216,  (struct enum_fields *) -1,};

// Instruction and_cc_gX_sp_sp_1
static adl_instr_attrs _sym1775 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gX_sp_sp_1
static struct adl_operand _sym1774_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1776[] = { &_sym128, &_sym222,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_000
static adl_instr_attrs _sym1778 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_000
static struct adl_operand _sym1777_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1779[] = { &_sym128, &_sym216, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_001
static adl_instr_attrs _sym1781 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_001
static struct adl_operand _sym1780_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1782[] = { &_sym128, &_sym216, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_010
static adl_instr_attrs _sym1784 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_010
static struct adl_operand _sym1783_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1785[] = { &_sym128, &_sym216, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_011
static adl_instr_attrs _sym1787 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_011
static struct adl_operand _sym1786_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1788[] = { &_sym128, &_sym216, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_100
static adl_instr_attrs _sym1790 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_100
static struct adl_operand _sym1789_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1791[] = { &_sym128, &_sym222, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_101
static adl_instr_attrs _sym1793 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_101
static struct adl_operand _sym1792_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1794[] = { &_sym128, &_sym222, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_110
static adl_instr_attrs _sym1796 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_110
static struct adl_operand _sym1795_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1797[] = { &_sym128, &_sym222, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_111
static adl_instr_attrs _sym1799 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_111
static struct adl_operand _sym1798_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1800[] = { &_sym128, &_sym222, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_sp_00
static adl_instr_attrs _sym1802 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_sp_00
static struct adl_operand _sym1801_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1803[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_sp_01
static adl_instr_attrs _sym1805 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_sp_01
static struct adl_operand _sym1804_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1806[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_sp_10
static adl_instr_attrs _sym1808 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_sp_10
static struct adl_operand _sym1807_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1809[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_sp_11
static adl_instr_attrs _sym1811 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_sp_11
static struct adl_operand _sym1810_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1812[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_sp_gX_00
static adl_instr_attrs _sym1814 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_sp_gX_00
static struct adl_operand _sym1813_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1815[] = { &_sym128, &_sym216, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_sp_gX_01
static adl_instr_attrs _sym1817 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_sp_gX_01
static struct adl_operand _sym1816_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1818[] = { &_sym128, &_sym216, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_sp_gX_10
static adl_instr_attrs _sym1820 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_sp_gX_10
static struct adl_operand _sym1819_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1821[] = { &_sym128, &_sym222, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_sp_gX_11
static adl_instr_attrs _sym1823 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_sp_gX_11
static struct adl_operand _sym1822_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1824[] = { &_sym128, &_sym222, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gX_sp_0
static adl_instr_attrs _sym1826 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gX_sp_0
static struct adl_operand _sym1825_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1827[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gX_sp_1
static adl_instr_attrs _sym1829 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gX_sp_1
static struct adl_operand _sym1828_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1830[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gY_gX_00
static adl_instr_attrs _sym1832 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gY_gX_00
static struct adl_operand _sym1831_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1833[] = { &_sym128, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gY_gX_01
static adl_instr_attrs _sym1835 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gY_gX_01
static struct adl_operand _sym1834_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1836[] = { &_sym128, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gY_gX_10
static adl_instr_attrs _sym1838 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gY_gX_10
static struct adl_operand _sym1837_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1839[] = { &_sym128, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gY_gX_11
static adl_instr_attrs _sym1841 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gY_gX_11
static struct adl_operand _sym1840_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1842[] = { &_sym128, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_sp_gY_0
static adl_instr_attrs _sym1844 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_sp_gY_0
static struct adl_operand _sym1843_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1845[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_sp_gY_1
static adl_instr_attrs _sym1847 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_sp_gY_1
static struct adl_operand _sym1846_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1848[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_gX_Iu16
static adl_instr_attrs _sym1850 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_gX_Iu16
static struct adl_operand _sym1849_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{75, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1851[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction and_gX_gX_Iu16
static adl_instr_attrs _sym1853 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  and_gX_gX_Iu16 -> and_gX_Iu16;
static struct adl_operand _sym1854_operands[] = { {75, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction and_gX_gX_Iu16
static struct adl_operand _sym1852_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{270, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1855[] = {
  // and_gX_Iu16    (0)
  { "and_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x18000000,},0, "", 0, 2, 2, 0, 0, _sym1854_operands,0,0,0, 0,&_sym1853,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1856_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1857[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction and_sp_Iu16
static adl_instr_attrs _sym1859 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  and_sp_Iu16 -> and_gX_Iu16;
static struct adl_operand _sym1860_operands[] = { {75, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction and_sp_Iu16
static struct adl_operand _sym1858_operands[] = { {270, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1861[] = {
  // and_gX_Iu16    (0)
  { "and_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x18000700,},0, "", 0, 1, 1, 0, 0, _sym1860_operands,0,0,0, 0,&_sym1859,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1862[] = { 0,  (struct enum_fields *) -1,};

// Instruction bclr_cc_gZ_gY_gX
static adl_instr_attrs _sym1864 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction bclr_cc_gZ_gY_gX
static struct adl_operand _sym1863_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1865[] = { &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction btst_gX_I
static adl_instr_attrs _sym1867 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction btst_gX_I
static struct adl_operand _sym1866_operands[] = { {69, 0, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{95, 1, 0, 0, 12, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1868[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction clr_VRA_gX_gY
static adl_instr_attrs _sym1870 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction clr_VRA_gX_gY
static struct adl_operand _sym1869_operands[] = { {69, 0, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{55, 1, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1871[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction clr_g_Iu12
static adl_instr_attrs _sym1873 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction clr_g_Iu12
static struct adl_operand _sym1872_operands[] = { {73, 0, 0, 0, 13, 0ull, 0xfffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1874[] = { 0,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gX_gY_00
static adl_instr_attrs _sym1876 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gX_gY_00
static struct adl_operand _sym1875_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1877[] = { &_sym128, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gX_gY_01
static adl_instr_attrs _sym1879 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gX_gY_01
static struct adl_operand _sym1878_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1880[] = { &_sym128, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gX_gY_10
static adl_instr_attrs _sym1882 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gX_gY_10
static struct adl_operand _sym1881_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1883[] = { &_sym128, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gX_gY_11
static adl_instr_attrs _sym1885 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gX_gY_11
static struct adl_operand _sym1884_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1886[] = { &_sym128, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gY_sp_0
static adl_instr_attrs _sym1888 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gY_sp_0
static struct adl_operand _sym1887_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1889[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gY_sp_1
static adl_instr_attrs _sym1891 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gY_sp_1
static struct adl_operand _sym1890_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1892[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction cmp_cc_sp_gX_0
static adl_instr_attrs _sym1894 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_sp_gX_0
static struct adl_operand _sym1893_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1895[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction cmp_cc_sp_gX_1
static adl_instr_attrs _sym1897 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_sp_gX_1
static struct adl_operand _sym1896_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1898[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction cmp_cc_sp_sp
static adl_instr_attrs _sym1900 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_sp_sp
static struct adl_operand _sym1899_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1901[] = { &_sym128,  (struct enum_fields *) -1,};

// Instruction cmp_s_gX_Is16
static adl_instr_attrs _sym1903 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_s_gX_Is16
static struct adl_operand _sym1902_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1904[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction cmp_s_gX_Is16_cmp
static adl_instr_attrs _sym1906 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_s_gX_Is16_cmp -> cmp_s_gX_Is16;
static struct adl_operand _sym1907_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_s_gX_Is16_cmp
static struct adl_operand _sym1905_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1908[] = {
  // cmp_s_gX_Is16    (0)
  { "cmp_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x78000000,},0, "", 0, 2, 2, 0, 0, _sym1907_operands,0,0,0, 0,&_sym1906,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1909[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction cmp_s_gX_Is16_sp
static adl_instr_attrs _sym1911 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_s_gX_Is16_sp -> cmp_s_gX_Is16;
static struct adl_operand _sym1912_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_s_gX_Is16_sp
static struct adl_operand _sym1910_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1913[] = {
  // cmp_s_gX_Is16    (0)
  { "cmp_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x78000700,},0, "", 0, 1, 1, 0, 0, _sym1912_operands,0,0,0, 0,&_sym1911,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1914[] = { 0,  (struct enum_fields *) -1,};

// Instruction cmp_s_gX_Is16_sp_cmp
static adl_instr_attrs _sym1916 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_s_gX_Is16_sp_cmp -> cmp_s_gX_Is16;
static struct adl_operand _sym1917_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_s_gX_Is16_sp_cmp
static struct adl_operand _sym1915_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1918[] = {
  // cmp_s_gX_Is16    (0)
  { "cmp_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x78000700,},0, "", 0, 1, 1, 0, 0, _sym1917_operands,0,0,0, 0,&_sym1916,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1919[] = { 0,  (struct enum_fields *) -1,};

// Instruction cmp_z_gX_Iu16
static adl_instr_attrs _sym1921 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_z_gX_Iu16
static struct adl_operand _sym1920_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1922[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction cmp_z_gX_Iu16_cmp
static adl_instr_attrs _sym1924 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_z_gX_Iu16_cmp -> cmp_z_gX_Iu16;
static struct adl_operand _sym1925_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_z_gX_Iu16_cmp
static struct adl_operand _sym1923_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1926[] = {
  // cmp_z_gX_Iu16    (0)
  { "cmp_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x70000000,},0, "", 0, 2, 2, 0, 0, _sym1925_operands,0,0,0, 0,&_sym1924,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1927[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction cmp_z_gX_Iu16_sp
static adl_instr_attrs _sym1929 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_z_gX_Iu16_sp -> cmp_z_gX_Iu16;
static struct adl_operand _sym1930_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_z_gX_Iu16_sp
static struct adl_operand _sym1928_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1931[] = {
  // cmp_z_gX_Iu16    (0)
  { "cmp_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x70000700,},0, "", 0, 1, 1, 0, 0, _sym1930_operands,0,0,0, 0,&_sym1929,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1932[] = { 0,  (struct enum_fields *) -1,};

// Instruction cmp_z_gX_Iu16_sp_cmp
static adl_instr_attrs _sym1934 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_z_gX_Iu16_sp_cmp -> cmp_z_gX_Iu16;
static struct adl_operand _sym1935_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_z_gX_Iu16_sp_cmp
static struct adl_operand _sym1933_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1936[] = {
  // cmp_z_gX_Iu16    (0)
  { "cmp_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x70000700,},0, "", 0, 1, 1, 0, 0, _sym1935_operands,0,0,0, 0,&_sym1934,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1937[] = { 0,  (struct enum_fields *) -1,};

// Instruction div_s_cc_gZ_gX_gY
static adl_instr_attrs _sym1939 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction div_s_cc_gZ_gX_gY
static struct adl_operand _sym1938_operands[] = { {139, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{37, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 3, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 4, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1940[] = { &_sym308, &_sym130, &_sym214, &_sym202, &_sym232,  (struct enum_fields *) -1,};

// Instruction div_s_cc_gZ_gX_gY_cond
static adl_instr_attrs _sym1942 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_cc_gZ_gX_gY_cond -> div_s_cc_gZ_gX_gY;

static bfd_uint64_t _sym1944_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (operands[0].X_add_number) >> 4; }
static struct adl_operand _sym1943_operands[] = { {139, 0, 0, 0, 0, 0, 0, 0, _sym1944_modifier, 0, 0,0, -1,-1,},{37, 0, 0, 0, 9, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_cc_gZ_gX_gY_cond
static struct adl_operand _sym1941_operands[] = { {350, 0, 0, 0, 24, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 3, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1945[] = {
  // div_s_cc_gZ_gX_gY    (0)
  { "div_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x31000000,},0, "", 0, 5, 5, 0, 1, _sym1943_operands,0,0,0, 0,&_sym1942,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1946[] = { &_sym306, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction div_s_cc_gZ_gX_gY_signed
static adl_instr_attrs _sym1948 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_cc_gZ_gX_gY_signed -> div_s_cc_gZ_gX_gY;
static struct adl_operand _sym1949_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_cc_gZ_gX_gY_signed
static struct adl_operand _sym1947_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1950[] = {
  // div_s_cc_gZ_gX_gY    (0)
  { "div_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x31800000,},0, "", 0, 3, 3, 0, 0, _sym1949_operands,0,0,0, 0,&_sym1948,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1951[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction div_s_cc_gZ_gX_gY_unsigned
static adl_instr_attrs _sym1953 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_cc_gZ_gX_gY_unsigned -> div_s_cc_gZ_gX_gY;
static struct adl_operand _sym1954_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_cc_gZ_gX_gY_unsigned
static struct adl_operand _sym1952_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1955[] = {
  // div_s_cc_gZ_gX_gY    (0)
  { "div_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x31000000,},0, "", 0, 3, 3, 0, 0, _sym1954_operands,0,0,0, 0,&_sym1953,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1956[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction div_s_gX_Is16
static adl_instr_attrs _sym1958 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction div_s_gX_Is16
static struct adl_operand _sym1957_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1959[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_s_gX_Is16_div
static adl_instr_attrs _sym1961 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_gX_Is16_div -> div_s_gX_Is16;
static struct adl_operand _sym1962_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_gX_Is16_div
static struct adl_operand _sym1960_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1963[] = {
  // div_s_gX_Is16    (0)
  { "div_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x88000000,},0, "", 0, 2, 2, 0, 0, _sym1962_operands,0,0,0, 0,&_sym1961,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1964[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_s_gX_Is16_gX
static adl_instr_attrs _sym1966 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_gX_Is16_gX -> div_s_gX_Is16;
static struct adl_operand _sym1967_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_gX_Is16_gX
static struct adl_operand _sym1965_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1968[] = {
  // div_s_gX_Is16    (0)
  { "div_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x88000000,},0, "", 0, 2, 2, 0, 0, _sym1967_operands,0,0,0, 0,&_sym1966,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1969_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1970[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_s_gX_Is16_gX_div
static adl_instr_attrs _sym1972 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_gX_Is16_gX_div -> div_s_gX_Is16;
static struct adl_operand _sym1973_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_gX_Is16_gX_div
static struct adl_operand _sym1971_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1974[] = {
  // div_s_gX_Is16    (0)
  { "div_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x88000000,},0, "", 0, 2, 2, 0, 0, _sym1973_operands,0,0,0, 0,&_sym1972,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1975_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1976[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_z_gX_Iu16
static adl_instr_attrs _sym1978 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction div_z_gX_Iu16
static struct adl_operand _sym1977_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1979[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_z_gX_Iu16_div
static adl_instr_attrs _sym1981 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_z_gX_Iu16_div -> div_z_gX_Iu16;
static struct adl_operand _sym1982_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_z_gX_Iu16_div
static struct adl_operand _sym1980_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1983[] = {
  // div_z_gX_Iu16    (0)
  { "div_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x80000000,},0, "", 0, 2, 2, 0, 0, _sym1982_operands,0,0,0, 0,&_sym1981,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym1984[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_z_gX_Iu16_gX
static adl_instr_attrs _sym1986 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_z_gX_Iu16_gX -> div_z_gX_Iu16;
static struct adl_operand _sym1987_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_z_gX_Iu16_gX
static struct adl_operand _sym1985_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1988[] = {
  // div_z_gX_Iu16    (0)
  { "div_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x80000000,},0, "", 0, 2, 2, 0, 0, _sym1987_operands,0,0,0, 0,&_sym1986,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1989_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1990[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_z_gX_Iu16_gX_div
static adl_instr_attrs _sym1992 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_z_gX_Iu16_gX_div -> div_z_gX_Iu16;
static struct adl_operand _sym1993_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_z_gX_Iu16_gX_div
static struct adl_operand _sym1991_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym1994[] = {
  // div_z_gX_Iu16    (0)
  { "div_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x80000000,},0, "", 0, 2, 2, 0, 0, _sym1993_operands,0,0,0, 0,&_sym1992,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym1995_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym1996[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ff0to1_gY_gX
static adl_instr_attrs _sym1998 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction ff0to1_gY_gX
static struct adl_operand _sym1997_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym1999[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction ff1_gY_gX
static adl_instr_attrs _sym2001 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction ff1_gY_gX
static struct adl_operand _sym2000_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2002[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction ff1to0_gY_gX
static adl_instr_attrs _sym2004 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction ff1to0_gY_gX
static struct adl_operand _sym2003_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2005[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction fns_gY_gX
static adl_instr_attrs _sym2007 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction fns_gY_gX
static struct adl_operand _sym2006_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2008[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction ld_H_Iu17_opS_HI
static adl_instr_attrs _sym2010 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_HI_ld_H_Iu17)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_H_Iu17_opS_HI
static struct adl_operand _sym2009_operands[] = { {83, 0, ADL_ABSOLUTE, 0, 4, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2011[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_Is8
static adl_instr_attrs _sym2013 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_H_aX_Is8
static struct adl_operand _sym2012_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2014[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_Is8_minus
static adl_instr_attrs _sym2016 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_H_aX_Is8_minus -> ld_H_aX_Is8;

static bfd_uint64_t _sym2018_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2017_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2018_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_H_aX_Is8_minus
static struct adl_operand _sym2015_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2019[] = {
  // ld_H_aX_Is8    (0)
  { "ld_H_aX_Is8", 3, 25, 64,  0x1, { 0x0,0x4000600,},0, "", 0, 2, 2, 0, 0, _sym2017_operands,0,0,0, 0,&_sym2016,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2020[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_Is8_zero
static adl_instr_attrs _sym2022 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_H_aX_Is8_zero -> ld_H_aX_Is8;
static struct adl_operand _sym2023_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_H_aX_Is8_zero
static struct adl_operand _sym2021_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2024[] = {
  // ld_H_aX_Is8    (0)
  { "ld_H_aX_Is8", 3, 25, 64,  0x1, { 0x0,0x4000600,},0, "", 0, 1, 1, 0, 0, _sym2023_operands,0,0,0, 0,&_sym2022,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2025[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_aY
static adl_instr_attrs _sym2027 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_H_aX_aY
static struct adl_operand _sym2026_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2028[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_u_Is8
static adl_instr_attrs _sym2030 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_H_aX_u_Is8
static struct adl_operand _sym2029_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2031[] = { &_sym10, 0,  (struct enum_fields *) -1,};

// Instruction ld_H_sp_Is10
static adl_instr_attrs _sym2033 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_H_sp_Is10
static struct adl_operand _sym2032_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2034[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_H_sp_Is10_minus
static adl_instr_attrs _sym2036 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_H_sp_Is10_minus -> ld_H_sp_Is10;

static bfd_uint64_t _sym2038_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym2037_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym2038_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_H_sp_Is10_minus
static struct adl_operand _sym2035_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2039[] = {
  // ld_H_sp_Is10    (0)
  { "ld_H_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2000600,},0, "", 0, 1, 1, 0, 0, _sym2037_operands,0,0,0, 0,&_sym2036,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2040[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_H_sp_Is10_zero
static adl_instr_attrs _sym2042 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_H_sp_Is10_zero -> ld_H_sp_Is10;
static struct adl_operand _sym2043_operands[] = {  0 };

// Instruction ld_H_sp_Is10_zero
static struct adl_operand _sym2041_operands[] = {  0 };
static struct adl_opcode _sym2044[] = {
  // ld_H_sp_Is10    (0)
  { "ld_H_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2000600,},0, "", 0, 0, 0, 0, 0, _sym2043_operands,0,0,0, 0,&_sym2042,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2045[] = {  (struct enum_fields *) -1,};

// Instruction ld_gX_Iu17_opS_HI
static adl_instr_attrs _sym2047 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_HI_ld_gX_Iu17)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gX_Iu17_opS_HI
static struct adl_operand _sym2046_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{83, 1, ADL_ABSOLUTE, 0, 4, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2048[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_gX_sp_Is10
static adl_instr_attrs _sym2050 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gX_sp_Is10
static struct adl_operand _sym2049_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{71, 1, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2051[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_gX_sp_Is10_minus
static adl_instr_attrs _sym2053 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_gX_sp_Is10_minus -> ld_gX_sp_Is10;

static bfd_uint64_t _sym2055_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2054_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym2055_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gX_sp_Is10_minus
static struct adl_operand _sym2052_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{255, 1, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2056[] = {
  // ld_gX_sp_Is10    (0)
  { "ld_gX_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2000000,},0, "", 0, 2, 2, 0, 0, _sym2054_operands,0,0,0, 0,&_sym2053,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2057[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_gX_sp_Is10_zero
static adl_instr_attrs _sym2059 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_gX_sp_Is10_zero -> ld_gX_sp_Is10;
static struct adl_operand _sym2060_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gX_sp_Is10_zero
static struct adl_operand _sym2058_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2061[] = {
  // ld_gX_sp_Is10    (0)
  { "ld_gX_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2000000,},0, "", 0, 1, 1, 0, 0, _sym2060_operands,0,0,0, 0,&_sym2059,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2062[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_Is8_u
static adl_instr_attrs _sym2064 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gY_aX_Is8_u
static struct adl_operand _sym2063_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2065[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8
static adl_instr_attrs _sym2067 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gY_aX_u_Is8
static struct adl_operand _sym2066_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2068[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_minus
static adl_instr_attrs _sym2070 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_minus -> ld_gY_aX_u_Is8;

static bfd_uint64_t _sym2072_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym2073_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }
static struct adl_operand _sym2071_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2072_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2073_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_minus
static struct adl_operand _sym2069_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 2, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2074[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4000000,},0, "", 0, 4, 4, 0, 0, _sym2071_operands,0,0,0, 0,&_sym2070,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2075[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_plus
static adl_instr_attrs _sym2077 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_plus -> ld_gY_aX_u_Is8;

static bfd_uint64_t _sym2079_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }

static bfd_uint64_t _sym2080_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }
static struct adl_operand _sym2078_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2079_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2080_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_plus
static struct adl_operand _sym2076_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 2, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2081[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4000000,},0, "", 0, 4, 4, 0, 0, _sym2078_operands,0,0,0, 0,&_sym2077,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2082[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_u
static adl_instr_attrs _sym2084 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gY_aX_u_Is8_u
static struct adl_operand _sym2083_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2085[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_u_minus
static adl_instr_attrs _sym2087 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_u_minus -> ld_gY_aX_u_Is8_u;

static bfd_uint64_t _sym2089_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym2090_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }
static struct adl_operand _sym2088_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2089_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2090_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_u_minus
static struct adl_operand _sym2086_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 2, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2091[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4200000,},0, "", 0, 4, 4, 0, 0, _sym2088_operands,0,0,0, 0,&_sym2087,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2092[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_u_plus
static adl_instr_attrs _sym2094 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_u_plus -> ld_gY_aX_u_Is8_u;

static bfd_uint64_t _sym2096_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }

static bfd_uint64_t _sym2097_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }
static struct adl_operand _sym2095_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2096_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2097_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_u_plus
static struct adl_operand _sym2093_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 2, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2098[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4200000,},0, "", 0, 4, 4, 0, 0, _sym2095_operands,0,0,0, 0,&_sym2094,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2099[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_u_zero
static adl_instr_attrs _sym2101 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_u_zero -> ld_gY_aX_u_Is8_u;
static struct adl_operand _sym2102_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_u_zero
static struct adl_operand _sym2100_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2103[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4200000,},0, "", 0, 2, 2, 0, 0, _sym2102_operands,0,0,0, 0,&_sym2101,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2104[] = { &_sym186, &_sym2,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_zero
static adl_instr_attrs _sym2106 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_zero -> ld_gY_aX_u_Is8;
static struct adl_operand _sym2107_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_zero
static struct adl_operand _sym2105_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2108[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4000000,},0, "", 0, 2, 2, 0, 0, _sym2107_operands,0,0,0, 0,&_sym2106,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2109[] = { &_sym186, &_sym2,  (struct enum_fields *) -1,};

// Instruction ld_gZ_aX_aY
static adl_instr_attrs _sym2111 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_gZ_aX_aY
static struct adl_operand _sym2110_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 2, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 3, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2112[] = { &_sym186, &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_line_gY_aX_u_Is8_minus
static adl_instr_attrs _sym2114 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_gY_aX_u_Is8_minus -> ld_gY_aX_u_Is8;

static bfd_uint64_t _sym2116_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[2].X_add_number),FALSE)); }
static struct adl_operand _sym2115_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2116_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_line_gY_aX_u_Is8_minus
static struct adl_operand _sym2113_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 2, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2117[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4800000,},0, "", 0, 3, 3, 0, 0, _sym2115_operands,0,0,0, 0,&_sym2114,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2118[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_line_gY_aX_u_Is8_plus
static adl_instr_attrs _sym2120 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_gY_aX_u_Is8_plus -> ld_gY_aX_u_Is8;
static struct adl_operand _sym2121_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_line_gY_aX_u_Is8_plus
static struct adl_operand _sym2119_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 2, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2122[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4800000,},0, "", 0, 3, 3, 0, 0, _sym2121_operands,0,0,0, 0,&_sym2120,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2123[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_line_gY_aX_u_Is8_u_minus
static adl_instr_attrs _sym2125 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_gY_aX_u_Is8_u_minus -> ld_gY_aX_u_Is8_u;

static bfd_uint64_t _sym2127_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[2].X_add_number),FALSE)); }
static struct adl_operand _sym2126_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2127_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_line_gY_aX_u_Is8_u_minus
static struct adl_operand _sym2124_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 2, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2128[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4a00000,},0, "", 0, 3, 3, 0, 0, _sym2126_operands,0,0,0, 0,&_sym2125,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2129[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_line_gY_aX_u_Is8_u_plus
static adl_instr_attrs _sym2131 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_gY_aX_u_Is8_u_plus -> ld_gY_aX_u_Is8_u;
static struct adl_operand _sym2132_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_line_gY_aX_u_Is8_u_plus
static struct adl_operand _sym2130_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 2, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2133[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4a00000,},0, "", 0, 3, 3, 0, 0, _sym2132_operands,0,0,0, 0,&_sym2131,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2134[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_Is8
static adl_instr_attrs _sym2136 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_H_aX_Is8
static struct adl_operand _sym2135_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2137[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_Is8_minus
static adl_instr_attrs _sym2139 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_aX_Is8_minus -> ld_u_H_aX_Is8;

static bfd_uint64_t _sym2141_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2140_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2141_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_u_H_aX_Is8_minus
static struct adl_operand _sym2138_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2142[] = {
  // ld_u_H_aX_Is8    (0)
  { "ld_u_H_aX_Is8", 3, 25, 64,  0x1, { 0x0,0x4200600,},0, "", 0, 2, 2, 0, 0, _sym2140_operands,0,0,0, 0,&_sym2139,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2143[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_Is8_zero
static adl_instr_attrs _sym2145 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_aX_Is8_zero -> ld_u_H_aX_Is8;
static struct adl_operand _sym2146_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_H_aX_Is8_zero
static struct adl_operand _sym2144_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2147[] = {
  // ld_u_H_aX_Is8    (0)
  { "ld_u_H_aX_Is8", 3, 25, 64,  0x1, { 0x0,0x4200600,},0, "", 0, 1, 1, 0, 0, _sym2146_operands,0,0,0, 0,&_sym2145,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2148[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_aY
static adl_instr_attrs _sym2150 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_u_H_aX_aY
static struct adl_operand _sym2149_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2151[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_u_Is8
static adl_instr_attrs _sym2153 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_H_aX_u_Is8
static struct adl_operand _sym2152_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2154[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_u_Is8_minus
static adl_instr_attrs _sym2156 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_aX_u_Is8_minus -> ld_u_H_aX_u_Is8;

static bfd_uint64_t _sym2158_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2157_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2158_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_u_H_aX_u_Is8_minus
static struct adl_operand _sym2155_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2159[] = {
  // ld_u_H_aX_u_Is8    (0)
  { "ld_u_H_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4600600,},0, "", 0, 2, 2, 0, 0, _sym2157_operands,0,0,0, 0,&_sym2156,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2160[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_u_aY
static adl_instr_attrs _sym2162 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_u_H_aX_u_aY
static struct adl_operand _sym2161_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2163[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_u_H_sp_Is10
static adl_instr_attrs _sym2165 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_H_sp_Is10
static struct adl_operand _sym2164_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2166[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_sp_Is10_minus
static adl_instr_attrs _sym2168 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_sp_Is10_minus -> ld_u_H_sp_Is10;

static bfd_uint64_t _sym2170_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym2169_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym2170_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_u_H_sp_Is10_minus
static struct adl_operand _sym2167_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2171[] = {
  // ld_u_H_sp_Is10    (0)
  { "ld_u_H_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2200600,},0, "", 0, 1, 1, 0, 0, _sym2169_operands,0,0,0, 0,&_sym2168,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2172[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_sp_Is10_zero
static adl_instr_attrs _sym2174 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_sp_Is10_zero -> ld_u_H_sp_Is10;
static struct adl_operand _sym2175_operands[] = {  0 };

// Instruction ld_u_H_sp_Is10_zero
static struct adl_operand _sym2173_operands[] = {  0 };
static struct adl_opcode _sym2176[] = {
  // ld_u_H_sp_Is10    (0)
  { "ld_u_H_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2200600,},0, "", 0, 0, 0, 0, 0, _sym2175_operands,0,0,0, 0,&_sym2174,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2177[] = {  (struct enum_fields *) -1,};

// Instruction ld_u_gX_sp_Is
static adl_instr_attrs _sym2179 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_gX_sp_Is
static struct adl_operand _sym2178_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{71, 1, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2180[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gX_sp_Is_minus
static adl_instr_attrs _sym2182 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_gX_sp_Is_minus -> ld_u_gX_sp_Is;

static bfd_uint64_t _sym2184_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2183_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym2184_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gX_sp_Is_minus
static struct adl_operand _sym2181_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{255, 1, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2185[] = {
  // ld_u_gX_sp_Is    (0)
  { "ld_u_gX_sp_Is", 3, 25, 64,  0x1, { 0x0,0x2200000,},0, "", 0, 2, 2, 0, 0, _sym2183_operands,0,0,0, 0,&_sym2182,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2186[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gX_sp_Is_zero
static adl_instr_attrs _sym2188 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_gX_sp_Is_zero -> ld_u_gX_sp_Is;
static struct adl_operand _sym2189_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gX_sp_Is_zero
static struct adl_operand _sym2187_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2190[] = {
  // ld_u_gX_sp_Is    (0)
  { "ld_u_gX_sp_Is", 3, 25, 64,  0x1, { 0x0,0x2200000,},0, "", 0, 1, 1, 0, 0, _sym2189_operands,0,0,0, 0,&_sym2188,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2191[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u
static adl_instr_attrs _sym2193 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_gY_aX_Is8_u
static struct adl_operand _sym2192_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2194[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u_line_minus
static adl_instr_attrs _sym2196 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_gY_aX_Is8_u_line_minus -> ld_u_gY_aX_Is8_u;

static bfd_uint64_t _sym2198_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[2].X_add_number),FALSE)); }
static struct adl_operand _sym2197_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2198_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gY_aX_Is8_u_line_minus
static struct adl_operand _sym2195_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 2, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2199[] = {
  // ld_u_gY_aX_Is8_u    (0)
  { "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4e00000,},0, "", 0, 3, 3, 0, 0, _sym2197_operands,0,0,0, 0,&_sym2196,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2200[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u_line_plus
static adl_instr_attrs _sym2202 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_gY_aX_Is8_u_line_plus -> ld_u_gY_aX_Is8_u;
static struct adl_operand _sym2203_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gY_aX_Is8_u_line_plus
static struct adl_operand _sym2201_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 2, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2204[] = {
  // ld_u_gY_aX_Is8_u    (0)
  { "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4e00000,},0, "", 0, 3, 3, 0, 0, _sym2203_operands,0,0,0, 0,&_sym2202,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2205[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u_minus
static adl_instr_attrs _sym2207 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_u_gY_aX_Is8_u_minus -> ld_u_gY_aX_Is8_u;

static bfd_uint64_t _sym2209_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym2210_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }
static struct adl_operand _sym2208_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2209_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2210_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gY_aX_Is8_u_minus
static struct adl_operand _sym2206_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 2, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2211[] = {
  // ld_u_gY_aX_Is8_u    (0)
  { "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4600000,},0, "", 0, 4, 4, 0, 0, _sym2208_operands,0,0,0, 0,&_sym2207,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2212[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u_plus
static adl_instr_attrs _sym2214 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_u_gY_aX_Is8_u_plus -> ld_u_gY_aX_Is8_u;

static bfd_uint64_t _sym2216_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }

static bfd_uint64_t _sym2217_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }
static struct adl_operand _sym2215_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2216_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2217_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gY_aX_Is8_u_plus
static struct adl_operand _sym2213_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 2, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2218[] = {
  // ld_u_gY_aX_Is8_u    (0)
  { "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4600000,},0, "", 0, 4, 4, 0, 0, _sym2215_operands,0,0,0, 0,&_sym2214,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2219[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gZ_aX_aY_u
static adl_instr_attrs _sym2221 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_u_gZ_aX_aY_u
static struct adl_operand _sym2220_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 2, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 3, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2222[] = { &_sym186, &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_u_gZ_aX_u_aY
static adl_instr_attrs _sym2224 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_u_gZ_aX_u_aY
static struct adl_operand _sym2223_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 2, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 3, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2225[] = { &_sym186, &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction log2_gY_gX
static adl_instr_attrs _sym2227 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction log2_gY_gX
static struct adl_operand _sym2226_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2228[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction mod_s_cc_gZ_gX_gY
static adl_instr_attrs _sym2230 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mod_s_cc_gZ_gX_gY
static struct adl_operand _sym2229_operands[] = { {139, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{37, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 3, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 4, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2231[] = { &_sym308, &_sym130, &_sym214, &_sym202, &_sym232,  (struct enum_fields *) -1,};

// Instruction mod_s_cc_gZ_gX_gY_cond
static adl_instr_attrs _sym2233 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_cc_gZ_gX_gY_cond -> mod_s_cc_gZ_gX_gY;

static bfd_uint64_t _sym2235_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (operands[0].X_add_number) >> 4; }
static struct adl_operand _sym2234_operands[] = { {139, 0, 0, 0, 0, 0, 0, 0, _sym2235_modifier, 0, 0,0, -1,-1,},{37, 0, 0, 0, 9, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_cc_gZ_gX_gY_cond
static struct adl_operand _sym2232_operands[] = { {350, 0, 0, 0, 24, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 3, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2236[] = {
  // mod_s_cc_gZ_gX_gY    (0)
  { "mod_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x32000000,},0, "", 0, 5, 5, 0, 1, _sym2234_operands,0,0,0, 0,&_sym2233,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2237[] = { &_sym306, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mod_s_cc_gZ_gX_gY_signed
static adl_instr_attrs _sym2239 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_cc_gZ_gX_gY_signed -> mod_s_cc_gZ_gX_gY;
static struct adl_operand _sym2240_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_cc_gZ_gX_gY_signed
static struct adl_operand _sym2238_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2241[] = {
  // mod_s_cc_gZ_gX_gY    (0)
  { "mod_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x32800000,},0, "", 0, 3, 3, 0, 0, _sym2240_operands,0,0,0, 0,&_sym2239,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2242[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mod_s_cc_gZ_gX_gY_unsigned
static adl_instr_attrs _sym2244 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_cc_gZ_gX_gY_unsigned -> mod_s_cc_gZ_gX_gY;
static struct adl_operand _sym2245_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_cc_gZ_gX_gY_unsigned
static struct adl_operand _sym2243_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2246[] = {
  // mod_s_cc_gZ_gX_gY    (0)
  { "mod_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x32000000,},0, "", 0, 3, 3, 0, 0, _sym2245_operands,0,0,0, 0,&_sym2244,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2247[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mod_s_gX_Is16
static adl_instr_attrs _sym2249 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mod_s_gX_Is16
static struct adl_operand _sym2248_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2250[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_s_gX_Is16_gX
static adl_instr_attrs _sym2252 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_gX_Is16_gX -> mod_s_gX_Is16;
static struct adl_operand _sym2253_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_gX_Is16_gX
static struct adl_operand _sym2251_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2254[] = {
  // mod_s_gX_Is16    (0)
  { "mod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x98000000,},0, "", 0, 2, 2, 0, 0, _sym2253_operands,0,0,0, 0,&_sym2252,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2255_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2256[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_s_gX_Is16_gX_mod
static adl_instr_attrs _sym2258 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_gX_Is16_gX_mod -> mod_s_gX_Is16;
static struct adl_operand _sym2259_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_gX_Is16_gX_mod
static struct adl_operand _sym2257_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2260[] = {
  // mod_s_gX_Is16    (0)
  { "mod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x98000000,},0, "", 0, 2, 2, 0, 0, _sym2259_operands,0,0,0, 0,&_sym2258,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2261_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2262[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_s_gX_Is16_mod
static adl_instr_attrs _sym2264 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_gX_Is16_mod -> mod_s_gX_Is16;
static struct adl_operand _sym2265_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_gX_Is16_mod
static struct adl_operand _sym2263_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2266[] = {
  // mod_s_gX_Is16    (0)
  { "mod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x98000000,},0, "", 0, 2, 2, 0, 0, _sym2265_operands,0,0,0, 0,&_sym2264,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2267[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_z_gX_Iu16
static adl_instr_attrs _sym2269 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mod_z_gX_Iu16
static struct adl_operand _sym2268_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2270[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_z_gX_Iu16_gX
static adl_instr_attrs _sym2272 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_z_gX_Iu16_gX -> mod_z_gX_Iu16;
static struct adl_operand _sym2273_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_z_gX_Iu16_gX
static struct adl_operand _sym2271_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2274[] = {
  // mod_z_gX_Iu16    (0)
  { "mod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x90000000,},0, "", 0, 2, 2, 0, 0, _sym2273_operands,0,0,0, 0,&_sym2272,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2275_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2276[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_z_gX_Iu16_gX_mod
static adl_instr_attrs _sym2278 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_z_gX_Iu16_gX_mod -> mod_z_gX_Iu16;
static struct adl_operand _sym2279_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_z_gX_Iu16_gX_mod
static struct adl_operand _sym2277_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2280[] = {
  // mod_z_gX_Iu16    (0)
  { "mod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x90000000,},0, "", 0, 2, 2, 0, 0, _sym2279_operands,0,0,0, 0,&_sym2278,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2281_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2282[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_z_gX_Iu16_mod
static adl_instr_attrs _sym2284 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_z_gX_Iu16_mod -> mod_z_gX_Iu16;
static struct adl_operand _sym2285_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_z_gX_Iu16_mod
static struct adl_operand _sym2283_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2286[] = {
  // mod_z_gX_Iu16    (0)
  { "mod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x90000000,},0, "", 0, 2, 2, 0, 0, _sym2285_operands,0,0,0, 0,&_sym2284,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2287[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_s_cc_gZ_gX_gY
static adl_instr_attrs _sym2289 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mpy_s_cc_gZ_gX_gY
static struct adl_operand _sym2288_operands[] = { {139, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{37, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 3, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 4, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2290[] = { &_sym308, &_sym130, &_sym214, &_sym202, &_sym232,  (struct enum_fields *) -1,};

// Instruction mpy_s_cc_gZ_gX_gY_cond
static adl_instr_attrs _sym2292 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_cc_gZ_gX_gY_cond -> mpy_s_cc_gZ_gX_gY;

static bfd_uint64_t _sym2294_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (operands[0].X_add_number) >> 4; }
static struct adl_operand _sym2293_operands[] = { {139, 0, 0, 0, 0, 0, 0, 0, _sym2294_modifier, 0, 0,0, -1,-1,},{37, 0, 0, 0, 9, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_cc_gZ_gX_gY_cond
static struct adl_operand _sym2291_operands[] = { {350, 0, 0, 0, 24, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 3, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2295[] = {
  // mpy_s_cc_gZ_gX_gY    (0)
  { "mpy_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x30000000,},0, "", 0, 5, 5, 0, 1, _sym2293_operands,0,0,0, 0,&_sym2292,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2296[] = { &_sym306, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mpy_s_cc_gZ_gX_gY_signed
static adl_instr_attrs _sym2298 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_cc_gZ_gX_gY_signed -> mpy_s_cc_gZ_gX_gY;
static struct adl_operand _sym2299_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_cc_gZ_gX_gY_signed
static struct adl_operand _sym2297_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2300[] = {
  // mpy_s_cc_gZ_gX_gY    (0)
  { "mpy_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x30800000,},0, "", 0, 3, 3, 0, 0, _sym2299_operands,0,0,0, 0,&_sym2298,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2301[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mpy_s_cc_gZ_gX_gY_unsigned
static adl_instr_attrs _sym2303 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_cc_gZ_gX_gY_unsigned -> mpy_s_cc_gZ_gX_gY;
static struct adl_operand _sym2304_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_cc_gZ_gX_gY_unsigned
static struct adl_operand _sym2302_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2305[] = {
  // mpy_s_cc_gZ_gX_gY    (0)
  { "mpy_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x30000000,},0, "", 0, 3, 3, 0, 0, _sym2304_operands,0,0,0, 0,&_sym2303,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2306[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mpy_s_gX_Is16
static adl_instr_attrs _sym2308 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mpy_s_gX_Is16
static struct adl_operand _sym2307_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2309[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_s_gX_Is16_gX
static adl_instr_attrs _sym2311 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_gX_Is16_gX -> mpy_s_gX_Is16;
static struct adl_operand _sym2312_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_gX_Is16_gX
static struct adl_operand _sym2310_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2313[] = {
  // mpy_s_gX_Is16    (0)
  { "mpy_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xa8000000,},0, "", 0, 2, 2, 0, 0, _sym2312_operands,0,0,0, 0,&_sym2311,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2314_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2315[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_s_gX_Is16_gX_mpy
static adl_instr_attrs _sym2317 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_gX_Is16_gX_mpy -> mpy_s_gX_Is16;
static struct adl_operand _sym2318_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_gX_Is16_gX_mpy
static struct adl_operand _sym2316_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2319[] = {
  // mpy_s_gX_Is16    (0)
  { "mpy_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xa8000000,},0, "", 0, 2, 2, 0, 0, _sym2318_operands,0,0,0, 0,&_sym2317,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2320_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2321[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_s_gX_Is16_mpy
static adl_instr_attrs _sym2323 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_gX_Is16_mpy -> mpy_s_gX_Is16;
static struct adl_operand _sym2324_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_gX_Is16_mpy
static struct adl_operand _sym2322_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2325[] = {
  // mpy_s_gX_Is16    (0)
  { "mpy_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xa8000000,},0, "", 0, 2, 2, 0, 0, _sym2324_operands,0,0,0, 0,&_sym2323,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2326[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_z_gX_Iu16
static adl_instr_attrs _sym2328 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mpy_z_gX_Iu16
static struct adl_operand _sym2327_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2329[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_z_gX_Iu16_gX
static adl_instr_attrs _sym2331 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_z_gX_Iu16_gX -> mpy_z_gX_Iu16;
static struct adl_operand _sym2332_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_z_gX_Iu16_gX
static struct adl_operand _sym2330_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2333[] = {
  // mpy_z_gX_Iu16    (0)
  { "mpy_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xa0000000,},0, "", 0, 2, 2, 0, 0, _sym2332_operands,0,0,0, 0,&_sym2331,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2334_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2335[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_z_gX_Iu16_gX_mpy
static adl_instr_attrs _sym2337 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_z_gX_Iu16_gX_mpy -> mpy_z_gX_Iu16;
static struct adl_operand _sym2338_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_z_gX_Iu16_gX_mpy
static struct adl_operand _sym2336_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2339[] = {
  // mpy_z_gX_Iu16    (0)
  { "mpy_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xa0000000,},0, "", 0, 2, 2, 0, 0, _sym2338_operands,0,0,0, 0,&_sym2337,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2340_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2341[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_z_gX_Iu16_mpy
static adl_instr_attrs _sym2343 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_z_gX_Iu16_mpy -> mpy_z_gX_Iu16;
static struct adl_operand _sym2344_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_z_gX_Iu16_mpy
static struct adl_operand _sym2342_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2345[] = {
  // mpy_z_gX_Iu16    (0)
  { "mpy_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xa0000000,},0, "", 0, 2, 2, 0, 0, _sym2344_operands,0,0,0, 0,&_sym2343,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2346[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mvS_aY_asX_opS
static adl_instr_attrs _sym2348 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mvS_aY_asX_opS
static struct adl_operand _sym2347_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{28, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2349[] = { &_sym2, &_sym30,  (struct enum_fields *) -1,};

// Instruction mvS_aY_asX_opS_mv
adl_instr_attr_val _sym2351[] = { { ((uint64_t)(1ULL << instr_opBS)),  0, 0 }, { ((uint64_t)(1ULL << instr_opS)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "mvB_aY_asX_opB_mv" }, { 0, 0, 0 } };
static adl_instr_attrs _sym2352 = { ((uint64_t)(1ULL << instr_opBS)) | ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_inst)) , _sym2351 };

// Shorthand:  mvS_aY_asX_opS_mv -> mvS_aY_asX_opS;
static struct adl_operand _sym2353_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{28, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mvS_aY_asX_opS_mv
static struct adl_operand _sym2350_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{199, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2354[] = {
  // mvS_aY_asX_opS    (0)
  { "mvS_aY_asX_opS", 3, 25, 64,  0x1, { 0x0,0x6000000,},0, "", 0, 2, 2, 0, 0, _sym2353_operands,0,0,0, 0,&_sym2352,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2355[] = { &_sym2, &_sym30,  (struct enum_fields *) -1,};

// Instruction mvS_asY_aX_opS
static adl_instr_attrs _sym2357 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mvS_asY_aX_opS
static struct adl_operand _sym2356_operands[] = { {28, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2358[] = { &_sym30, &_sym2,  (struct enum_fields *) -1,};

// Instruction mvS_asY_aX_opS_mv
adl_instr_attr_val _sym2360[] = { { ((uint64_t)(1ULL << instr_opBS)),  0, 0 }, { ((uint64_t)(1ULL << instr_opS)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "mvB_asY_aX_opB_mv" }, { 0, 0, 0 } };
static adl_instr_attrs _sym2361 = { ((uint64_t)(1ULL << instr_opBS)) | ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_inst)) , _sym2360 };

// Shorthand:  mvS_asY_aX_opS_mv -> mvS_asY_aX_opS;
static struct adl_operand _sym2362_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{28, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mvS_asY_aX_opS_mv
static struct adl_operand _sym2359_operands[] = { {199, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2363[] = {
  // mvS_asY_aX_opS    (0)
  { "mvS_asY_aX_opS", 3, 25, 64,  0x1, { 0x0,0x6200000,},0, "", 0, 2, 2, 0, 0, _sym2362_operands,0,0,0, 0,&_sym2361,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2364[] = { &_sym30, &_sym2,  (struct enum_fields *) -1,};

// Instruction mv_aX_sp
static adl_instr_attrs _sym2366 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_aX_sp
static struct adl_operand _sym2365_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2367[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction mv_cc_Iu4
static adl_instr_attrs _sym2369 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_Iu4
static struct adl_operand _sym2368_operands[] = { {94, 0, 0, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2370[] = { 0,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_div
static adl_instr_attrs _sym2372 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_div
static struct adl_operand _sym2371_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2373[] = { &_sym128, &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_00
static adl_instr_attrs _sym2375 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_00
static struct adl_operand _sym2374_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2376[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_01
static adl_instr_attrs _sym2378 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_01
static struct adl_operand _sym2377_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2379[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_10
static adl_instr_attrs _sym2381 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_10
static struct adl_operand _sym2380_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2382[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_11
static adl_instr_attrs _sym2384 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_11
static struct adl_operand _sym2383_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2385[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_mv_cc_gX_1
static adl_instr_attrs _sym2387 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_mv_cc_gX_1
static struct adl_operand _sym2386_operands[] = { {53, 0, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2388[] = { &_sym190,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_mv_cc_gX_2
static adl_instr_attrs _sym2390 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_mv_cc_gX_2
static struct adl_operand _sym2389_operands[] = { {54, 0, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2391[] = { &_sym194,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_mv_gX_cc_1
static adl_instr_attrs _sym2393 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_mv_gX_cc_1
static struct adl_operand _sym2392_operands[] = { {61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2394[] = { &_sym216,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_mv_gX_cc_2
static adl_instr_attrs _sym2396 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_mv_gX_cc_2
static struct adl_operand _sym2395_operands[] = { {63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2397[] = { &_sym222,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_mod
static adl_instr_attrs _sym2399 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_mod
static struct adl_operand _sym2398_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2400[] = { &_sym128, &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_sp_1
static adl_instr_attrs _sym2402 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_sp_1
static struct adl_operand _sym2401_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2403[] = { &_sym128, &_sym216,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_sp_2
static adl_instr_attrs _sym2405 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_sp_2
static struct adl_operand _sym2404_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2406[] = { &_sym128, &_sym222,  (struct enum_fields *) -1,};

// Instruction mv_cc_sp_gX_1
static adl_instr_attrs _sym2408 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_sp_gX_1
static struct adl_operand _sym2407_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2409[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction mv_cc_sp_gX_2
static adl_instr_attrs _sym2411 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_sp_gX_2
static struct adl_operand _sym2410_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2412[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction mv_cc_sp_sp
static adl_instr_attrs _sym2414 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_sp_sp
static struct adl_operand _sym2413_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2415[] = { &_sym128,  (struct enum_fields *) -1,};

// Instruction mv_s_gX_Is16_0
static adl_instr_attrs _sym2417 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_s_gX_Is16_0
static struct adl_operand _sym2416_operands[] = { {61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2418[] = { &_sym216, 0,  (struct enum_fields *) -1,};

// Instruction mv_s_gX_Is16_0_mv
static adl_instr_attrs _sym2420 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mv_s_gX_Is16_0_mv -> mv_s_gX_Is16_0;
static struct adl_operand _sym2421_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_s_gX_Is16_0_mv
static struct adl_operand _sym2419_operands[] = { {251, 0, ADL_REGISTER, 0, 24, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2422[] = {
  // mv_s_gX_Is16_0    (0)
  { "mv_s_gX_Is16_0", 3, 25, 64,  0x1, { 0x0,0x68000000,},0, "", 0, 2, 2, 0, 0, _sym2421_operands,0,0,0, 0,&_sym2420,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2423[] = { &_sym216, 0,  (struct enum_fields *) -1,};

// Instruction mv_s_gX_Is16_1
static adl_instr_attrs _sym2425 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_s_gX_Is16_1
static struct adl_operand _sym2424_operands[] = { {63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2426[] = { &_sym222, 0,  (struct enum_fields *) -1,};

// Instruction mv_s_gX_Is16_1_mv
static adl_instr_attrs _sym2428 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mv_s_gX_Is16_1_mv -> mv_s_gX_Is16_1;
static struct adl_operand _sym2429_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_s_gX_Is16_1_mv
static struct adl_operand _sym2427_operands[] = { {252, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2430[] = {
  // mv_s_gX_Is16_1    (0)
  { "mv_s_gX_Is16_1", 3, 25, 64,  0x1, { 0x0,0x68000400,},0, "", 0, 2, 2, 0, 0, _sym2429_operands,0,0,0, 0,&_sym2428,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2431[] = { &_sym222, 0,  (struct enum_fields *) -1,};

// Instruction mv_sp_Iu17_opS_HI
static adl_instr_attrs _sym2433 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_HI_mv_sp_Iu17)) , 0 };

// Instruction mv_sp_Iu17_opS_HI
static struct adl_operand _sym2432_operands[] = { {81, 0, ADL_ABSOLUTE, 0, 8, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2434[] = { 0,  (struct enum_fields *) -1,};

// Instruction mv_sp_aX
static adl_instr_attrs _sym2436 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_sp_aX
static struct adl_operand _sym2435_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2437[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction mv_z_gX_Iu16_0
static adl_instr_attrs _sym2439 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_z_gX_Iu16_0
static struct adl_operand _sym2438_operands[] = { {61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2440[] = { &_sym216, 0,  (struct enum_fields *) -1,};

// Instruction mv_z_gX_Iu16_0_mv
static adl_instr_attrs _sym2442 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mv_z_gX_Iu16_0_mv -> mv_z_gX_Iu16_0;
static struct adl_operand _sym2443_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_z_gX_Iu16_0_mv
static struct adl_operand _sym2441_operands[] = { {251, 0, ADL_REGISTER, 0, 24, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2444[] = {
  // mv_z_gX_Iu16_0    (0)
  { "mv_z_gX_Iu16_0", 3, 25, 64,  0x1, { 0x0,0x60000000,},0, "", 0, 2, 2, 0, 0, _sym2443_operands,0,0,0, 0,&_sym2442,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2445[] = { &_sym216, 0,  (struct enum_fields *) -1,};

// Instruction mv_z_gX_Iu16_1
static adl_instr_attrs _sym2447 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_z_gX_Iu16_1
static struct adl_operand _sym2446_operands[] = { {63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2448[] = { &_sym222, 0,  (struct enum_fields *) -1,};

// Instruction mv_z_gX_Iu16_1_mv
static adl_instr_attrs _sym2450 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mv_z_gX_Iu16_1_mv -> mv_z_gX_Iu16_1;
static struct adl_operand _sym2451_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_z_gX_Iu16_1_mv
static struct adl_operand _sym2449_operands[] = { {252, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2452[] = {
  // mv_z_gX_Iu16_1    (0)
  { "mv_z_gX_Iu16_1", 3, 25, 64,  0x1, { 0x0,0x60000400,},0, "", 0, 2, 2, 0, 0, _sym2451_operands,0,0,0, 0,&_sym2450,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2453[] = { &_sym222, 0,  (struct enum_fields *) -1,};

// Instruction nop
static adl_instr_attrs _sym2455 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction nop
static struct adl_operand _sym2454_operands[] = {  0 };
static struct enum_fields *_sym2456[] = {  (struct enum_fields *) -1,};

// Instruction not_cc_gY_gX
static adl_instr_attrs _sym2458 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction not_cc_gY_gX
static struct adl_operand _sym2457_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2459[] = { &_sym128, &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction null
static adl_instr_attrs _sym2461 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_null)) , 0 };

// Instruction null
static struct adl_operand _sym2460_operands[] = {  0 };
static struct enum_fields *_sym2462[] = {  (struct enum_fields *) -1,};

// Instruction opS_nop
static adl_instr_attrs _sym2464 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction opS_nop
static struct adl_operand _sym2463_operands[] = {  0 };
static struct enum_fields *_sym2465[] = {  (struct enum_fields *) -1,};

// Instruction or_H
static adl_instr_attrs _sym2467 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction or_H
static struct adl_operand _sym2466_operands[] = {  0 };
static struct enum_fields *_sym2468[] = {  (struct enum_fields *) -1,};

// Instruction or_cc_gZ_gY_gX
static adl_instr_attrs _sym2470 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction or_cc_gZ_gY_gX
static struct adl_operand _sym2469_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2471[] = { &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction or_gX_Iu16
static adl_instr_attrs _sym2473 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction or_gX_Iu16
static struct adl_operand _sym2472_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{75, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2474[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction or_gX_gX_Iu16
static adl_instr_attrs _sym2476 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  or_gX_gX_Iu16 -> or_gX_Iu16;
static struct adl_operand _sym2477_operands[] = { {75, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction or_gX_gX_Iu16
static struct adl_operand _sym2475_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{270, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2478[] = {
  // or_gX_Iu16    (0)
  { "or_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x20000000,},0, "", 0, 2, 2, 0, 0, _sym2477_operands,0,0,0, 0,&_sym2476,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2479_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2480[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction pop_gX
static adl_instr_attrs _sym2482 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  pop_gX -> ld_u_gX_sp_Is;

static bfd_uint64_t _sym2484_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - 1; }
static struct adl_operand _sym2483_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym2484_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction pop_gX
static struct adl_operand _sym2481_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2485[] = {
  // ld_u_gX_sp_Is    (0)
  { "ld_u_gX_sp_Is", 3, 25, 64,  0x1, { 0x0,0x2200000,},0, "", 0, 2, 2, 0, 0, _sym2483_operands,0,0,0, 0,&_sym2482,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2486[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction popm_as
static adl_instr_attrs _sym2488 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_var)) , 0 };

// Instruction popm_as
static struct adl_operand _sym2487_operands[] = { {10, 0, 0, 0, 24, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{17, 1, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{18, 2, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{19, 3, 0, 0, 21, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{20, 4, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{21, 5, 0, 0, 19, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{22, 6, 0, 0, 18, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{23, 7, 0, 0, 17, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{24, 8, 0, 0, 16, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{25, 9, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{11, 10, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{12, 11, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{13, 12, 0, 0, 12, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{14, 13, 0, 0, 11, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{15, 14, 0, 0, 10, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{16, 15, 0, 0, 9, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2489[] = { &_sym32, &_sym36, &_sym64, &_sym68, &_sym72, &_sym76, &_sym80, &_sym84, &_sym88, &_sym92, &_sym38, &_sym42, &_sym46, &_sym50, &_sym54, &_sym58,  (struct enum_fields *) -1,};

// Instruction popm_g
static adl_instr_attrs _sym2491 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_var)) , 0 };

// Instruction popm_g
static struct adl_operand _sym2490_operands[] = { {41, 0, 0, 0, 24, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{44, 1, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{45, 2, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{46, 3, 0, 0, 21, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{47, 4, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{48, 5, 0, 0, 19, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{49, 6, 0, 0, 18, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{50, 7, 0, 0, 17, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{51, 8, 0, 0, 16, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{52, 9, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{42, 10, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{43, 11, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2492[] = { &_sym138, &_sym142, &_sym154, &_sym158, &_sym162, &_sym166, &_sym170, &_sym174, &_sym178, &_sym182, &_sym144, &_sym148,  (struct enum_fields *) -1,};

// Instruction pushm_as
static adl_instr_attrs _sym2494 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_var)) , 0 };

// Instruction pushm_as
static struct adl_operand _sym2493_operands[] = { {10, 0, 0, 0, 24, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{17, 1, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{18, 2, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{19, 3, 0, 0, 21, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{20, 4, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{21, 5, 0, 0, 19, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{22, 6, 0, 0, 18, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{23, 7, 0, 0, 17, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{24, 8, 0, 0, 16, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{25, 9, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{11, 10, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{12, 11, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{13, 12, 0, 0, 12, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{14, 13, 0, 0, 11, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{15, 14, 0, 0, 10, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{16, 15, 0, 0, 9, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2495[] = { &_sym32, &_sym36, &_sym64, &_sym68, &_sym72, &_sym76, &_sym80, &_sym84, &_sym88, &_sym92, &_sym38, &_sym42, &_sym46, &_sym50, &_sym54, &_sym58,  (struct enum_fields *) -1,};

// Instruction pushm_g
static adl_instr_attrs _sym2497 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_var)) , 0 };

// Instruction pushm_g
static struct adl_operand _sym2496_operands[] = { {41, 0, 0, 0, 24, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{44, 1, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{45, 2, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{46, 3, 0, 0, 21, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{47, 4, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{48, 5, 0, 0, 19, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{49, 6, 0, 0, 18, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{50, 7, 0, 0, 17, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{51, 8, 0, 0, 16, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{52, 9, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{42, 10, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{43, 11, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2498[] = { &_sym138, &_sym142, &_sym154, &_sym158, &_sym162, &_sym166, &_sym170, &_sym174, &_sym178, &_sym182, &_sym144, &_sym148,  (struct enum_fields *) -1,};

// Instruction rdiv_s_gX_Is16
static adl_instr_attrs _sym2500 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rdiv_s_gX_Is16
static struct adl_operand _sym2499_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2501[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_s_gX_Is16_gX
static adl_instr_attrs _sym2503 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_s_gX_Is16_gX -> rdiv_s_gX_Is16;
static struct adl_operand _sym2504_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_s_gX_Is16_gX
static struct adl_operand _sym2502_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2505[] = {
  // rdiv_s_gX_Is16    (0)
  { "rdiv_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xd8000000,},0, "", 0, 2, 2, 0, 0, _sym2504_operands,0,0,0, 0,&_sym2503,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2506_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2507[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_s_gX_Is16_gX_rdiv
static adl_instr_attrs _sym2509 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_s_gX_Is16_gX_rdiv -> rdiv_s_gX_Is16;
static struct adl_operand _sym2510_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_s_gX_Is16_gX_rdiv
static struct adl_operand _sym2508_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2511[] = {
  // rdiv_s_gX_Is16    (0)
  { "rdiv_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xd8000000,},0, "", 0, 2, 2, 0, 0, _sym2510_operands,0,0,0, 0,&_sym2509,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2512_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2513[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_s_gX_Is16_rdiv
static adl_instr_attrs _sym2515 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_s_gX_Is16_rdiv -> rdiv_s_gX_Is16;
static struct adl_operand _sym2516_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_s_gX_Is16_rdiv
static struct adl_operand _sym2514_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2517[] = {
  // rdiv_s_gX_Is16    (0)
  { "rdiv_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xd8000000,},0, "", 0, 2, 2, 0, 0, _sym2516_operands,0,0,0, 0,&_sym2515,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2518[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_z_gX_Iu16
static adl_instr_attrs _sym2520 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rdiv_z_gX_Iu16
static struct adl_operand _sym2519_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2521[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_z_gX_Iu16_gX
static adl_instr_attrs _sym2523 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_z_gX_Iu16_gX -> rdiv_z_gX_Iu16;
static struct adl_operand _sym2524_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_z_gX_Iu16_gX
static struct adl_operand _sym2522_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2525[] = {
  // rdiv_z_gX_Iu16    (0)
  { "rdiv_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xd0000000,},0, "", 0, 2, 2, 0, 0, _sym2524_operands,0,0,0, 0,&_sym2523,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2526_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2527[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_z_gX_Iu16_gX_rdiv
static adl_instr_attrs _sym2529 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_z_gX_Iu16_gX_rdiv -> rdiv_z_gX_Iu16;
static struct adl_operand _sym2530_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_z_gX_Iu16_gX_rdiv
static struct adl_operand _sym2528_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2531[] = {
  // rdiv_z_gX_Iu16    (0)
  { "rdiv_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xd0000000,},0, "", 0, 2, 2, 0, 0, _sym2530_operands,0,0,0, 0,&_sym2529,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2532_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2533[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_z_gX_Iu16_rdiv
static adl_instr_attrs _sym2535 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_z_gX_Iu16_rdiv -> rdiv_z_gX_Iu16;
static struct adl_operand _sym2536_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_z_gX_Iu16_rdiv
static struct adl_operand _sym2534_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2537[] = {
  // rdiv_z_gX_Iu16    (0)
  { "rdiv_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xd0000000,},0, "", 0, 2, 2, 0, 0, _sym2536_operands,0,0,0, 0,&_sym2535,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2538[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_s_gX_Is16
static adl_instr_attrs _sym2540 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rmod_s_gX_Is16
static struct adl_operand _sym2539_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2541[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_s_gX_Is16_gX
static adl_instr_attrs _sym2543 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_s_gX_Is16_gX -> rmod_s_gX_Is16;
static struct adl_operand _sym2544_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_s_gX_Is16_gX
static struct adl_operand _sym2542_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2545[] = {
  // rmod_s_gX_Is16    (0)
  { "rmod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xe8000000,},0, "", 0, 2, 2, 0, 0, _sym2544_operands,0,0,0, 0,&_sym2543,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2546_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2547[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_s_gX_Is16_gX_rmod
static adl_instr_attrs _sym2549 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_s_gX_Is16_gX_rmod -> rmod_s_gX_Is16;
static struct adl_operand _sym2550_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_s_gX_Is16_gX_rmod
static struct adl_operand _sym2548_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2551[] = {
  // rmod_s_gX_Is16    (0)
  { "rmod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xe8000000,},0, "", 0, 2, 2, 0, 0, _sym2550_operands,0,0,0, 0,&_sym2549,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2552_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2553[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_s_gX_Is16_rmod
static adl_instr_attrs _sym2555 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_s_gX_Is16_rmod -> rmod_s_gX_Is16;
static struct adl_operand _sym2556_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_s_gX_Is16_rmod
static struct adl_operand _sym2554_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2557[] = {
  // rmod_s_gX_Is16    (0)
  { "rmod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xe8000000,},0, "", 0, 2, 2, 0, 0, _sym2556_operands,0,0,0, 0,&_sym2555,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2558[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_z_gX_Iu16
static adl_instr_attrs _sym2560 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rmod_z_gX_Iu16
static struct adl_operand _sym2559_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2561[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_z_gX_Iu16_gX
static adl_instr_attrs _sym2563 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_z_gX_Iu16_gX -> rmod_z_gX_Iu16;
static struct adl_operand _sym2564_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_z_gX_Iu16_gX
static struct adl_operand _sym2562_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2565[] = {
  // rmod_z_gX_Iu16    (0)
  { "rmod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xe0000000,},0, "", 0, 2, 2, 0, 0, _sym2564_operands,0,0,0, 0,&_sym2563,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2566_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2567[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_z_gX_Iu16_gX_rmod
static adl_instr_attrs _sym2569 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_z_gX_Iu16_gX_rmod -> rmod_z_gX_Iu16;
static struct adl_operand _sym2570_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_z_gX_Iu16_gX_rmod
static struct adl_operand _sym2568_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2571[] = {
  // rmod_z_gX_Iu16    (0)
  { "rmod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xe0000000,},0, "", 0, 2, 2, 0, 0, _sym2570_operands,0,0,0, 0,&_sym2569,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2572_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2573[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_z_gX_Iu16_rmod
static adl_instr_attrs _sym2575 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_z_gX_Iu16_rmod -> rmod_z_gX_Iu16;
static struct adl_operand _sym2576_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_z_gX_Iu16_rmod
static struct adl_operand _sym2574_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2577[] = {
  // rmod_z_gX_Iu16    (0)
  { "rmod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xe0000000,},0, "", 0, 2, 2, 0, 0, _sym2576_operands,0,0,0, 0,&_sym2575,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2578[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16
static adl_instr_attrs _sym2580 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rsub_s_gX_Is16
static struct adl_operand _sym2579_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2581[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_gX
static adl_instr_attrs _sym2583 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_gX -> rsub_s_gX_Is16;
static struct adl_operand _sym2584_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_gX
static struct adl_operand _sym2582_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2585[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000000,},0, "", 0, 2, 2, 0, 0, _sym2584_operands,0,0,0, 0,&_sym2583,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2586_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2587[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_gX_rsub
static adl_instr_attrs _sym2589 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_gX_rsub -> rsub_s_gX_Is16;
static struct adl_operand _sym2590_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_gX_rsub
static struct adl_operand _sym2588_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2591[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000000,},0, "", 0, 2, 2, 0, 0, _sym2590_operands,0,0,0, 0,&_sym2589,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2592_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2593[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_rsub
static adl_instr_attrs _sym2595 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_rsub -> rsub_s_gX_Is16;
static struct adl_operand _sym2596_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_rsub
static struct adl_operand _sym2594_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2597[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000000,},0, "", 0, 2, 2, 0, 0, _sym2596_operands,0,0,0, 0,&_sym2595,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2598[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_sp
static adl_instr_attrs _sym2600 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_sp -> rsub_s_gX_Is16;
static struct adl_operand _sym2601_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_sp
static struct adl_operand _sym2599_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2602[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000700,},0, "", 0, 1, 1, 0, 0, _sym2601_operands,0,0,0, 0,&_sym2600,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2603[] = { 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_sp_rsub
static adl_instr_attrs _sym2605 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_sp_rsub -> rsub_s_gX_Is16;
static struct adl_operand _sym2606_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_sp_rsub
static struct adl_operand _sym2604_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2607[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000700,},0, "", 0, 1, 1, 0, 0, _sym2606_operands,0,0,0, 0,&_sym2605,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2608[] = { 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16
static adl_instr_attrs _sym2610 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rsub_z_gX_Iu16
static struct adl_operand _sym2609_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2611[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_gX
static adl_instr_attrs _sym2613 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_gX -> rsub_z_gX_Iu16;
static struct adl_operand _sym2614_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_gX
static struct adl_operand _sym2612_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2615[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000000,},0, "", 0, 2, 2, 0, 0, _sym2614_operands,0,0,0, 0,&_sym2613,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2616_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2617[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_gX_rsub
static adl_instr_attrs _sym2619 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_gX_rsub -> rsub_z_gX_Iu16;
static struct adl_operand _sym2620_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_gX_rsub
static struct adl_operand _sym2618_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2621[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000000,},0, "", 0, 2, 2, 0, 0, _sym2620_operands,0,0,0, 0,&_sym2619,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2622_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2623[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_rsub
static adl_instr_attrs _sym2625 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_rsub -> rsub_z_gX_Iu16;
static struct adl_operand _sym2626_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_rsub
static struct adl_operand _sym2624_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2627[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000000,},0, "", 0, 2, 2, 0, 0, _sym2626_operands,0,0,0, 0,&_sym2625,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2628[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_sp
static adl_instr_attrs _sym2630 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_sp -> rsub_z_gX_Iu16;
static struct adl_operand _sym2631_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_sp
static struct adl_operand _sym2629_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2632[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000700,},0, "", 0, 1, 1, 0, 0, _sym2631_operands,0,0,0, 0,&_sym2630,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2633[] = { 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_sp_rsub
static adl_instr_attrs _sym2635 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_sp_rsub -> rsub_z_gX_Iu16;
static struct adl_operand _sym2636_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_sp_rsub
static struct adl_operand _sym2634_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2637[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000700,},0, "", 0, 1, 1, 0, 0, _sym2636_operands,0,0,0, 0,&_sym2635,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2638[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_creg_creg_Iu4
static adl_instr_attrs _sym2640 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_creg_creg_Iu4
static struct adl_operand _sym2639_operands[] = { {38, 0, 0, 0, 13, 0ull, 0xffull, 0ull, 0, 0, 0, 0,-1,-1,},{93, 1, 0, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2641[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction sl_cc_gZ_gY_gX
static adl_instr_attrs _sym2643 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sl_cc_gZ_gY_gX
static struct adl_operand _sym2642_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2644[] = { &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction sl_gY_gX_I5
static adl_instr_attrs _sym2646 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sl_gY_gX_I5
static struct adl_operand _sym2645_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{95, 2, 0, 0, 12, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2647[] = { &_sym186, &_sym188, 0,  (struct enum_fields *) -1,};

// Instruction sr_s_cc_gZ_gX_gY
static adl_instr_attrs _sym2649 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sr_s_cc_gZ_gX_gY
static struct adl_operand _sym2648_operands[] = { {139, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{37, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 3, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 4, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2650[] = { &_sym304, &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction sr_s_gY_gX_I
static adl_instr_attrs _sym2652 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sr_s_gY_gX_I
static struct adl_operand _sym2651_operands[] = { {140, 0, 0, 0, 4, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{95, 3, 0, 0, 12, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2653[] = { &_sym304, &_sym186, &_sym188, 0,  (struct enum_fields *) -1,};

// Instruction st_Iu17_H_opS_HI
static adl_instr_attrs _sym2655 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_HI_st_Iu17_H)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_Iu17_H_opS_HI
static struct adl_operand _sym2654_operands[] = { {83, 0, ADL_ABSOLUTE, 0, 4, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2656[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_Iu17_gX_opS_HI
static adl_instr_attrs _sym2658 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_HI_st_Iu17_gX)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_Iu17_gX_opS_HI
static struct adl_operand _sym2657_operands[] = { {83, 0, ADL_ABSOLUTE, 0, 4, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2659[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_Is8_H
static adl_instr_attrs _sym2661 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_Is8_H
static struct adl_operand _sym2660_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2662[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_aY_Is8_H_minus
static adl_instr_attrs _sym2664 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_aY_Is8_H_minus -> st_aY_Is8_H;

static bfd_uint64_t _sym2666_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2665_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2666_modifier, 0, 0,0, -1,-1,},};

// Instruction st_aY_Is8_H_minus
static struct adl_operand _sym2663_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2667[] = {
  // st_aY_Is8_H    (0)
  { "st_aY_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5000600,},0, "", 0, 2, 2, 0, 0, _sym2665_operands,0,0,0, 0,&_sym2664,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2668[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_aY_Is8_H_zero
static adl_instr_attrs _sym2670 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_aY_Is8_H_zero -> st_aY_Is8_H;
static struct adl_operand _sym2671_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_Is8_H_zero
static struct adl_operand _sym2669_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2672[] = {
  // st_aY_Is8_H    (0)
  { "st_aY_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5000600,},0, "", 0, 1, 1, 0, 0, _sym2671_operands,0,0,0, 0,&_sym2670,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2673[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction st_aY_Is8_u_gX
static adl_instr_attrs _sym2675 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_Is8_u_gX
static struct adl_operand _sym2674_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2676[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction st_aY_aZ_H
static adl_instr_attrs _sym2678 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_aZ_H
static struct adl_operand _sym2677_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2679[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_aY_aZ_u_gX
static adl_instr_attrs _sym2681 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_aZ_u_gX
static struct adl_operand _sym2680_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2682[] = { &_sym2, &_sym18, &_sym24, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_H
static adl_instr_attrs _sym2684 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_u_Is8_H
static struct adl_operand _sym2683_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2685[] = { &_sym10, 0,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_gX
static adl_instr_attrs _sym2687 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_u_Is8_gX
static struct adl_operand _sym2686_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2688[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_gX_minus
static adl_instr_attrs _sym2690 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_aY_u_Is8_gX_minus -> st_aY_u_Is8_gX;

static bfd_uint64_t _sym2692_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym2693_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }
static struct adl_operand _sym2691_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2692_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2693_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_gX_minus
static struct adl_operand _sym2689_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 1, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2694[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5000000,},0, "", 0, 4, 4, 0, 0, _sym2691_operands,0,0,0, 0,&_sym2690,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2695[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_gX_plus
static adl_instr_attrs _sym2697 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_aY_u_Is8_gX_plus -> st_aY_u_Is8_gX;

static bfd_uint64_t _sym2699_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym2700_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym2698_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2699_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2700_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_gX_plus
static struct adl_operand _sym2696_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2701[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5000000,},0, "", 0, 4, 4, 0, 0, _sym2698_operands,0,0,0, 0,&_sym2697,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2702[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_gX_zero
static adl_instr_attrs _sym2704 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_aY_u_Is8_gX_zero -> st_aY_u_Is8_gX;
static struct adl_operand _sym2705_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_gX_zero
static struct adl_operand _sym2703_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2706[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5000000,},0, "", 0, 2, 2, 0, 0, _sym2705_operands,0,0,0, 0,&_sym2704,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2707[] = { &_sym2, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_u_gX
static adl_instr_attrs _sym2709 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_u_Is8_u_gX
static struct adl_operand _sym2708_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2710[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_u_gX_minus
static adl_instr_attrs _sym2712 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_aY_u_Is8_u_gX_minus -> st_aY_u_Is8_u_gX;

static bfd_uint64_t _sym2714_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym2715_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }
static struct adl_operand _sym2713_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2714_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2715_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_u_gX_minus
static struct adl_operand _sym2711_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 1, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2716[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5200000,},0, "", 0, 4, 4, 0, 0, _sym2713_operands,0,0,0, 0,&_sym2712,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2717[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_u_gX_plus
static adl_instr_attrs _sym2719 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_aY_u_Is8_u_gX_plus -> st_aY_u_Is8_u_gX;

static bfd_uint64_t _sym2721_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym2722_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym2720_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2721_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2722_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_u_gX_plus
static struct adl_operand _sym2718_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2723[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5200000,},0, "", 0, 4, 4, 0, 0, _sym2720_operands,0,0,0, 0,&_sym2719,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2724[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_u_gX_zero
static adl_instr_attrs _sym2726 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_aY_u_Is8_u_gX_zero -> st_aY_u_Is8_u_gX;
static struct adl_operand _sym2727_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_u_gX_zero
static struct adl_operand _sym2725_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2728[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5200000,},0, "", 0, 2, 2, 0, 0, _sym2727_operands,0,0,0, 0,&_sym2726,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2729[] = { &_sym2, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_line_aY_u_Is8_gX_minus
static adl_instr_attrs _sym2731 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_aY_u_Is8_gX_minus -> st_aY_u_Is8_gX;

static bfd_uint64_t _sym2733_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2732_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2733_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_aY_u_Is8_gX_minus
static struct adl_operand _sym2730_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2734[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5800000,},0, "", 0, 3, 3, 0, 0, _sym2732_operands,0,0,0, 0,&_sym2731,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2735[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_line_aY_u_Is8_gX_plus
static adl_instr_attrs _sym2737 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_aY_u_Is8_gX_plus -> st_aY_u_Is8_gX;
static struct adl_operand _sym2738_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_aY_u_Is8_gX_plus
static struct adl_operand _sym2736_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2739[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5800000,},0, "", 0, 3, 3, 0, 0, _sym2738_operands,0,0,0, 0,&_sym2737,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2740[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_line_aY_u_Is8_u_gX_minus
static adl_instr_attrs _sym2742 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_aY_u_Is8_u_gX_minus -> st_aY_u_Is8_u_gX;

static bfd_uint64_t _sym2744_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2743_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2744_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_aY_u_Is8_u_gX_minus
static struct adl_operand _sym2741_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2745[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5a00000,},0, "", 0, 3, 3, 0, 0, _sym2743_operands,0,0,0, 0,&_sym2742,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2746[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_line_aY_u_Is8_u_gX_plus
static adl_instr_attrs _sym2748 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_aY_u_Is8_u_gX_plus -> st_aY_u_Is8_u_gX;
static struct adl_operand _sym2749_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_aY_u_Is8_u_gX_plus
static struct adl_operand _sym2747_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2750[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5a00000,},0, "", 0, 3, 3, 0, 0, _sym2749_operands,0,0,0, 0,&_sym2748,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2751[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_H
static adl_instr_attrs _sym2753 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_sp_Is10_H
static struct adl_operand _sym2752_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2754[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_H_minus
static adl_instr_attrs _sym2756 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_sp_Is10_H_minus -> st_sp_Is10_H;

static bfd_uint64_t _sym2758_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym2757_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym2758_modifier, 0, 0,0, -1,-1,},};

// Instruction st_sp_Is10_H_minus
static struct adl_operand _sym2755_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2759[] = {
  // st_sp_Is10_H    (0)
  { "st_sp_Is10_H", 3, 25, 64,  0x1, { 0x0,0x3000600,},0, "", 0, 1, 1, 0, 0, _sym2757_operands,0,0,0, 0,&_sym2756,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2760[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_H_zero
static adl_instr_attrs _sym2762 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_sp_Is10_H_zero -> st_sp_Is10_H;
static struct adl_operand _sym2763_operands[] = {  0 };

// Instruction st_sp_Is10_H_zero
static struct adl_operand _sym2761_operands[] = {  0 };
static struct adl_opcode _sym2764[] = {
  // st_sp_Is10_H    (0)
  { "st_sp_Is10_H", 3, 25, 64,  0x1, { 0x0,0x3000600,},0, "", 0, 0, 0, 0, 0, _sym2763_operands,0,0,0, 0,&_sym2762,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2765[] = {  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_gX
static adl_instr_attrs _sym2767 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_sp_Is10_gX
static struct adl_operand _sym2766_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2768[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_gX_minus
static adl_instr_attrs _sym2770 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_sp_Is10_gX_minus -> st_sp_Is10_gX;

static bfd_uint64_t _sym2772_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym2771_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym2772_modifier, 0, 0,0, -1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_sp_Is10_gX_minus
static struct adl_operand _sym2769_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2773[] = {
  // st_sp_Is10_gX    (0)
  { "st_sp_Is10_gX", 3, 25, 64,  0x1, { 0x0,0x3000000,},0, "", 0, 2, 2, 0, 0, _sym2771_operands,0,0,0, 0,&_sym2770,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2774[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_gX_zero
static adl_instr_attrs _sym2776 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_sp_Is10_gX_zero -> st_sp_Is10_gX;
static struct adl_operand _sym2777_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_sp_Is10_gX_zero
static struct adl_operand _sym2775_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2778[] = {
  // st_sp_Is10_gX    (0)
  { "st_sp_Is10_gX", 3, 25, 64,  0x1, { 0x0,0x3000000,},0, "", 0, 1, 1, 0, 0, _sym2777_operands,0,0,0, 0,&_sym2776,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2779[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_H
static adl_instr_attrs _sym2781 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_Is8_H
static struct adl_operand _sym2780_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2782[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_H_minus
static adl_instr_attrs _sym2784 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_Is8_H_minus -> st_u_aY_Is8_H;

static bfd_uint64_t _sym2786_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2785_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2786_modifier, 0, 0,0, -1,-1,},};

// Instruction st_u_aY_Is8_H_minus
static struct adl_operand _sym2783_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2787[] = {
  // st_u_aY_Is8_H    (0)
  { "st_u_aY_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5200600,},0, "", 0, 2, 2, 0, 0, _sym2785_operands,0,0,0, 0,&_sym2784,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2788[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_H_zero
static adl_instr_attrs _sym2790 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_Is8_H_zero -> st_u_aY_Is8_H;
static struct adl_operand _sym2791_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_H_zero
static struct adl_operand _sym2789_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2792[] = {
  // st_u_aY_Is8_H    (0)
  { "st_u_aY_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5200600,},0, "", 0, 1, 1, 0, 0, _sym2791_operands,0,0,0, 0,&_sym2790,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2793[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX
static adl_instr_attrs _sym2795 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_Is8_u_gX
static struct adl_operand _sym2794_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2796[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX_line_minus
static adl_instr_attrs _sym2798 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_Is8_u_gX_line_minus -> st_u_aY_Is8_u_gX;

static bfd_uint64_t _sym2800_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2799_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2800_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_u_gX_line_minus
static struct adl_operand _sym2797_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2801[] = {
  // st_u_aY_Is8_u_gX    (0)
  { "st_u_aY_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5e00000,},0, "", 0, 3, 3, 0, 0, _sym2799_operands,0,0,0, 0,&_sym2798,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2802[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX_line_plus
static adl_instr_attrs _sym2804 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_Is8_u_gX_line_plus -> st_u_aY_Is8_u_gX;
static struct adl_operand _sym2805_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_u_gX_line_plus
static struct adl_operand _sym2803_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2806[] = {
  // st_u_aY_Is8_u_gX    (0)
  { "st_u_aY_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5e00000,},0, "", 0, 3, 3, 0, 0, _sym2805_operands,0,0,0, 0,&_sym2804,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2807[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX_minus
static adl_instr_attrs _sym2809 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_u_aY_Is8_u_gX_minus -> st_u_aY_Is8_u_gX;

static bfd_uint64_t _sym2811_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym2812_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }
static struct adl_operand _sym2810_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2811_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2812_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_u_gX_minus
static struct adl_operand _sym2808_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 1, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2813[] = {
  // st_u_aY_Is8_u_gX    (0)
  { "st_u_aY_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5600000,},0, "", 0, 4, 4, 0, 0, _sym2810_operands,0,0,0, 0,&_sym2809,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2814[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX_plus
static adl_instr_attrs _sym2816 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_u_aY_Is8_u_gX_plus -> st_u_aY_Is8_u_gX;

static bfd_uint64_t _sym2818_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym2819_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym2817_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym2818_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2819_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_u_gX_plus
static struct adl_operand _sym2815_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2820[] = {
  // st_u_aY_Is8_u_gX    (0)
  { "st_u_aY_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5600000,},0, "", 0, 4, 4, 0, 0, _sym2817_operands,0,0,0, 0,&_sym2816,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2821[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_aZ_H
static adl_instr_attrs _sym2823 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_aZ_H
static struct adl_operand _sym2822_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2824[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_u_aY_aZ_u_gX
static adl_instr_attrs _sym2826 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_aZ_u_gX
static struct adl_operand _sym2825_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2827[] = { &_sym2, &_sym18, &_sym24, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_u_Is8_H
static adl_instr_attrs _sym2829 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_u_Is8_H
static struct adl_operand _sym2828_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2830[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_u_aY_u_Is8_H_minus
static adl_instr_attrs _sym2832 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_u_Is8_H_minus -> st_u_aY_u_Is8_H;

static bfd_uint64_t _sym2834_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym2833_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym2834_modifier, 0, 0,0, -1,-1,},};

// Instruction st_u_aY_u_Is8_H_minus
static struct adl_operand _sym2831_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2835[] = {
  // st_u_aY_u_Is8_H    (0)
  { "st_u_aY_u_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5600600,},0, "", 0, 2, 2, 0, 0, _sym2833_operands,0,0,0, 0,&_sym2832,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2836[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_u_aY_u_aZ_H
static adl_instr_attrs _sym2838 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_u_aZ_H
static struct adl_operand _sym2837_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2839[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_u_aY_u_aZ_gX
static adl_instr_attrs _sym2841 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_u_aZ_gX
static struct adl_operand _sym2840_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2842[] = { &_sym2, &_sym18, &_sym24, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_sp_Is10_gX
static adl_instr_attrs _sym2844 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_sp_Is10_gX
static struct adl_operand _sym2843_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2845[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_sp_Is10_gX_minus
static adl_instr_attrs _sym2847 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_sp_Is10_gX_minus -> st_u_sp_Is10_gX;

static bfd_uint64_t _sym2849_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym2848_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym2849_modifier, 0, 0,0, -1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_sp_Is10_gX_minus
static struct adl_operand _sym2846_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2850[] = {
  // st_u_sp_Is10_gX    (0)
  { "st_u_sp_Is10_gX", 3, 25, 64,  0x1, { 0x0,0x3600000,},0, "", 0, 2, 2, 0, 0, _sym2848_operands,0,0,0, 0,&_sym2847,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2851[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_sp_Is10_gX_push_gX
static adl_instr_attrs _sym2853 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_sp_Is10_gX_push_gX -> st_u_sp_Is10_gX;
static struct adl_operand _sym2854_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_sp_Is10_gX_push_gX
static struct adl_operand _sym2852_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2855[] = {
  // st_u_sp_Is10_gX    (0)
  { "st_u_sp_Is10_gX", 3, 25, 64,  0x1, { 0x0,0x3600800,},0, "", 0, 1, 1, 0, 0, _sym2854_operands,0,0,0, 0,&_sym2853,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2856[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_sp_u_Is10_H
static adl_instr_attrs _sym2858 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_sp_u_Is10_H
static struct adl_operand _sym2857_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2859[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_u_sp_u_Is10_H_minus
static adl_instr_attrs _sym2861 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_sp_u_Is10_H_minus -> st_u_sp_u_Is10_H;

static bfd_uint64_t _sym2863_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym2862_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym2863_modifier, 0, 0,0, -1,-1,},};

// Instruction st_u_sp_u_Is10_H_minus
static struct adl_operand _sym2860_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym2864[] = {
  // st_u_sp_u_Is10_H    (0)
  { "st_u_sp_u_Is10_H", 3, 25, 64,  0x1, { 0x0,0x3600600,},0, "", 0, 1, 1, 0, 0, _sym2862_operands,0,0,0, 0,&_sym2861,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2865[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_cc_gX_sp_sp_0
static adl_instr_attrs _sym2867 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gX_sp_sp_0
static struct adl_operand _sym2866_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2868[] = { &_sym128, &_sym216,  (struct enum_fields *) -1,};

// Instruction sub_cc_gX_sp_sp_1
static adl_instr_attrs _sym2870 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gX_sp_sp_1
static struct adl_operand _sym2869_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2871[] = { &_sym128, &_sym222,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_000
static adl_instr_attrs _sym2873 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_000
static struct adl_operand _sym2872_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2874[] = { &_sym128, &_sym216, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_001
static adl_instr_attrs _sym2876 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_001
static struct adl_operand _sym2875_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2877[] = { &_sym128, &_sym216, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_010
static adl_instr_attrs _sym2879 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_010
static struct adl_operand _sym2878_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2880[] = { &_sym128, &_sym216, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_011
static adl_instr_attrs _sym2882 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_011
static struct adl_operand _sym2881_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2883[] = { &_sym128, &_sym216, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_100
static adl_instr_attrs _sym2885 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_100
static struct adl_operand _sym2884_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2886[] = { &_sym128, &_sym222, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_101
static adl_instr_attrs _sym2888 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_101
static struct adl_operand _sym2887_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2889[] = { &_sym128, &_sym222, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_110
static adl_instr_attrs _sym2891 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_110
static struct adl_operand _sym2890_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2892[] = { &_sym128, &_sym222, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_111
static adl_instr_attrs _sym2894 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_111
static struct adl_operand _sym2893_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2895[] = { &_sym128, &_sym222, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gY_sp_00
static adl_instr_attrs _sym2897 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gY_sp_00
static struct adl_operand _sym2896_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2898[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gY_sp_01
static adl_instr_attrs _sym2900 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gY_sp_01
static struct adl_operand _sym2899_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2901[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gY_sp_10
static adl_instr_attrs _sym2903 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gY_sp_10
static struct adl_operand _sym2902_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2904[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gY_sp_11
static adl_instr_attrs _sym2906 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gY_sp_11
static struct adl_operand _sym2905_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2907[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_sp_gX_00
static adl_instr_attrs _sym2909 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_sp_gX_00
static struct adl_operand _sym2908_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2910[] = { &_sym128, &_sym216, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_sp_gX_01
static adl_instr_attrs _sym2912 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_sp_gX_01
static struct adl_operand _sym2911_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2913[] = { &_sym128, &_sym216, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_sp_gX_10
static adl_instr_attrs _sym2915 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_sp_gX_10
static struct adl_operand _sym2914_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2916[] = { &_sym128, &_sym222, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_sp_gX_11
static adl_instr_attrs _sym2918 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_sp_gX_11
static struct adl_operand _sym2917_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2919[] = { &_sym128, &_sym222, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gX_0
static adl_instr_attrs _sym2921 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_cc_sp_gX_0 -> sub_cc_sp_sp_gX_0;
static struct adl_operand _sym2922_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_cc_sp_gX_0
static struct adl_operand _sym2920_operands[] = { {226, 0, 0, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{249, 1, ADL_REGISTER, 0, 24, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2923[] = {
  // sub_cc_sp_sp_gX_0    (0)
  { "sub_cc_sp_sp_gX_0", 3, 25, 64,  0x1, { 0x0,0x35007700,},0, "", 0, 2, 2, 0, 1, _sym2922_operands,0,0,1, 0,&_sym2921,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2924[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gX_1
static adl_instr_attrs _sym2926 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_cc_sp_gX_1 -> sub_cc_sp_sp_gX_1;
static struct adl_operand _sym2927_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_cc_sp_gX_1
static struct adl_operand _sym2925_operands[] = { {226, 0, 0, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{250, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2928[] = {
  // sub_cc_sp_sp_gX_1    (0)
  { "sub_cc_sp_sp_gX_1", 3, 25, 64,  0x1, { 0x0,0x35047700,},0, "", 0, 2, 2, 0, 1, _sym2927_operands,0,0,1, 0,&_sym2926,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2929[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_gX_00
static adl_instr_attrs _sym2931 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_gX_00
static struct adl_operand _sym2930_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2932[] = { &_sym128, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_gX_01
static adl_instr_attrs _sym2934 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_gX_01
static struct adl_operand _sym2933_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2935[] = { &_sym128, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_gX_10
static adl_instr_attrs _sym2937 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_gX_10
static struct adl_operand _sym2936_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2938[] = { &_sym128, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_gX_11
static adl_instr_attrs _sym2940 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_gX_11
static struct adl_operand _sym2939_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2941[] = { &_sym128, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_sp_0
static adl_instr_attrs _sym2943 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_sp_0
static struct adl_operand _sym2942_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2944[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_sp_1
static adl_instr_attrs _sym2946 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_sp_1
static struct adl_operand _sym2945_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2947[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_sp_gX_0
static adl_instr_attrs _sym2949 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_sp_gX_0
static struct adl_operand _sym2948_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2950[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_sp_gX_1
static adl_instr_attrs _sym2952 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_sp_gX_1
static struct adl_operand _sym2951_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2953[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16
static adl_instr_attrs _sym2955 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_s_gX_Is16
static struct adl_operand _sym2954_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2956[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_gX
static adl_instr_attrs _sym2958 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_gX -> sub_s_gX_Is16;
static struct adl_operand _sym2959_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_gX
static struct adl_operand _sym2957_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2960[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000000,},0, "", 0, 2, 2, 0, 0, _sym2959_operands,0,0,0, 0,&_sym2958,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2961_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2962[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_gX_sub
static adl_instr_attrs _sym2964 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_gX_sub -> sub_s_gX_Is16;
static struct adl_operand _sym2965_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_gX_sub
static struct adl_operand _sym2963_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2966[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000000,},0, "", 0, 2, 2, 0, 0, _sym2965_operands,0,0,0, 0,&_sym2964,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym2967_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym2968[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sp
static adl_instr_attrs _sym2970 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sp -> sub_s_gX_Is16;
static struct adl_operand _sym2971_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sp
static struct adl_operand _sym2969_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2972[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000700,},0, "", 0, 1, 1, 0, 0, _sym2971_operands,0,0,0, 0,&_sym2970,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2973[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sp_sp
static adl_instr_attrs _sym2975 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sp_sp -> sub_s_gX_Is16;
static struct adl_operand _sym2976_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sp_sp
static struct adl_operand _sym2974_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2977[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000700,},0, "", 0, 1, 1, 0, 0, _sym2976_operands,0,0,0, 0,&_sym2975,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2978[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sp_sp_sub
static adl_instr_attrs _sym2980 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sp_sp_sub -> sub_s_gX_Is16;
static struct adl_operand _sym2981_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sp_sp_sub
static struct adl_operand _sym2979_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2982[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000700,},0, "", 0, 1, 1, 0, 0, _sym2981_operands,0,0,0, 0,&_sym2980,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2983[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sp_sub
static adl_instr_attrs _sym2985 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sp_sub -> sub_s_gX_Is16;
static struct adl_operand _sym2986_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sp_sub
static struct adl_operand _sym2984_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2987[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000700,},0, "", 0, 1, 1, 0, 0, _sym2986_operands,0,0,0, 0,&_sym2985,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2988[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sub
static adl_instr_attrs _sym2990 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sub -> sub_s_gX_Is16;
static struct adl_operand _sym2991_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sub
static struct adl_operand _sym2989_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym2992[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000000,},0, "", 0, 2, 2, 0, 0, _sym2991_operands,0,0,0, 0,&_sym2990,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym2993[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16
static adl_instr_attrs _sym2995 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_z_gX_Iu16
static struct adl_operand _sym2994_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym2996[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_gX
static adl_instr_attrs _sym2998 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_gX -> sub_z_gX_Iu16;
static struct adl_operand _sym2999_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_gX
static struct adl_operand _sym2997_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3000[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000000,},0, "", 0, 2, 2, 0, 0, _sym2999_operands,0,0,0, 0,&_sym2998,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3001_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3002[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_gX_sub
static adl_instr_attrs _sym3004 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_gX_sub -> sub_z_gX_Iu16;
static struct adl_operand _sym3005_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_gX_sub
static struct adl_operand _sym3003_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3006[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000000,},0, "", 0, 2, 2, 0, 0, _sym3005_operands,0,0,0, 0,&_sym3004,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3007_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3008[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sp
static adl_instr_attrs _sym3010 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sp -> sub_z_gX_Iu16;
static struct adl_operand _sym3011_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sp
static struct adl_operand _sym3009_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3012[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000700,},0, "", 0, 1, 1, 0, 0, _sym3011_operands,0,0,0, 0,&_sym3010,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3013[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sp_sp
static adl_instr_attrs _sym3015 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sp_sp -> sub_z_gX_Iu16;
static struct adl_operand _sym3016_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sp_sp
static struct adl_operand _sym3014_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3017[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000700,},0, "", 0, 1, 1, 0, 0, _sym3016_operands,0,0,0, 0,&_sym3015,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3018[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sp_sp_sub
static adl_instr_attrs _sym3020 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sp_sp_sub -> sub_z_gX_Iu16;
static struct adl_operand _sym3021_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sp_sp_sub
static struct adl_operand _sym3019_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3022[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000700,},0, "", 0, 1, 1, 0, 0, _sym3021_operands,0,0,0, 0,&_sym3020,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3023[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sp_sub
static adl_instr_attrs _sym3025 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sp_sub -> sub_z_gX_Iu16;
static struct adl_operand _sym3026_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sp_sub
static struct adl_operand _sym3024_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3027[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000700,},0, "", 0, 1, 1, 0, 0, _sym3026_operands,0,0,0, 0,&_sym3025,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3028[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sub
static adl_instr_attrs _sym3030 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sub -> sub_z_gX_Iu16;
static struct adl_operand _sym3031_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sub
static struct adl_operand _sym3029_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3032[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000000,},0, "", 0, 2, 2, 0, 0, _sym3031_operands,0,0,0, 0,&_sym3030,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3033[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction xor_cc_gZ_gY_gX
static adl_instr_attrs _sym3035 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction xor_cc_gZ_gY_gX
static struct adl_operand _sym3034_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3036[] = { &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction xor_gX_Iu16
static adl_instr_attrs _sym3038 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction xor_gX_Iu16
static struct adl_operand _sym3037_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{75, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3039[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction xor_gX_gX_Iu16
static adl_instr_attrs _sym3041 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  xor_gX_gX_Iu16 -> xor_gX_Iu16;
static struct adl_operand _sym3042_operands[] = { {75, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction xor_gX_gX_Iu16
static struct adl_operand _sym3040_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{270, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3043[] = {
  // xor_gX_Iu16    (0)
  { "xor_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x28000000,},0, "", 0, 2, 2, 0, 0, _sym3042_operands,0,0,0, 0,&_sym3041,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3044_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3045[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction abs_gY_gX
static adl_instr_attrs _sym3047 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction abs_gY_gX
static struct adl_operand _sym3046_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3048[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction add_cc_gX_sp_sp_0
static adl_instr_attrs _sym3050 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gX_sp_sp_0
static struct adl_operand _sym3049_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3051[] = { &_sym128, &_sym216,  (struct enum_fields *) -1,};

// Instruction add_cc_gX_sp_sp_1
static adl_instr_attrs _sym3053 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gX_sp_sp_1
static struct adl_operand _sym3052_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3054[] = { &_sym128, &_sym222,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_000
static adl_instr_attrs _sym3056 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_000
static struct adl_operand _sym3055_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3057[] = { &_sym128, &_sym216, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_001
static adl_instr_attrs _sym3059 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_001
static struct adl_operand _sym3058_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3060[] = { &_sym128, &_sym216, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_010
static adl_instr_attrs _sym3062 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_010
static struct adl_operand _sym3061_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3063[] = { &_sym128, &_sym216, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_011
static adl_instr_attrs _sym3065 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_011
static struct adl_operand _sym3064_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3066[] = { &_sym128, &_sym216, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_100
static adl_instr_attrs _sym3068 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_100
static struct adl_operand _sym3067_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3069[] = { &_sym128, &_sym222, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_101
static adl_instr_attrs _sym3071 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_101
static struct adl_operand _sym3070_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3072[] = { &_sym128, &_sym222, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_110
static adl_instr_attrs _sym3074 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_110
static struct adl_operand _sym3073_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3075[] = { &_sym128, &_sym222, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gX_gY_111
static adl_instr_attrs _sym3077 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gX_gY_111
static struct adl_operand _sym3076_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3078[] = { &_sym128, &_sym222, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gY_sp_00
static adl_instr_attrs _sym3080 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gY_sp_00
static struct adl_operand _sym3079_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3081[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gY_sp_01
static adl_instr_attrs _sym3083 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gY_sp_01
static struct adl_operand _sym3082_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3084[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gY_sp_10
static adl_instr_attrs _sym3086 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gY_sp_10
static struct adl_operand _sym3085_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3087[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_gY_sp_11
static adl_instr_attrs _sym3089 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_gY_sp_11
static struct adl_operand _sym3088_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3090[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_sp_gX_00
static adl_instr_attrs _sym3092 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_sp_gX_00
static struct adl_operand _sym3091_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3093[] = { &_sym128, &_sym216, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_sp_gX_01
static adl_instr_attrs _sym3095 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_sp_gX_01
static struct adl_operand _sym3094_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3096[] = { &_sym128, &_sym216, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_sp_gX_10
static adl_instr_attrs _sym3098 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_sp_gX_10
static struct adl_operand _sym3097_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3099[] = { &_sym128, &_sym222, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_gZ_sp_gX_11
static adl_instr_attrs _sym3101 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_gZ_sp_gX_11
static struct adl_operand _sym3100_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3102[] = { &_sym128, &_sym222, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gX_0
static adl_instr_attrs _sym3104 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_cc_sp_gX_0 -> add_cc_sp_sp_gX_0;
static struct adl_operand _sym3105_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_cc_sp_gX_0
static struct adl_operand _sym3103_operands[] = { {226, 0, 0, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{249, 1, ADL_REGISTER, 0, 24, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3106[] = {
  // add_cc_sp_sp_gX_0    (0)
  { "add_cc_sp_sp_gX_0", 3, 25, 64,  0x1, { 0x0,0x34007700,},0, "", 0, 2, 2, 0, 1, _sym3105_operands,0,0,1, 0,&_sym3104,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3107[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gX_1
static adl_instr_attrs _sym3109 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_cc_sp_gX_1 -> add_cc_sp_sp_gX_1;
static struct adl_operand _sym3110_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_cc_sp_gX_1
static struct adl_operand _sym3108_operands[] = { {226, 0, 0, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{250, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3111[] = {
  // add_cc_sp_sp_gX_1    (0)
  { "add_cc_sp_sp_gX_1", 3, 25, 64,  0x1, { 0x0,0x34047700,},0, "", 0, 2, 2, 0, 1, _sym3110_operands,0,0,1, 0,&_sym3109,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3112[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_gX_00
static adl_instr_attrs _sym3114 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_gX_00
static struct adl_operand _sym3113_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3115[] = { &_sym128, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_gX_01
static adl_instr_attrs _sym3117 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_gX_01
static struct adl_operand _sym3116_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3118[] = { &_sym128, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_gX_10
static adl_instr_attrs _sym3120 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_gX_10
static struct adl_operand _sym3119_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3121[] = { &_sym128, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_gX_11
static adl_instr_attrs _sym3123 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_gX_11
static struct adl_operand _sym3122_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3124[] = { &_sym128, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_sp_0
static adl_instr_attrs _sym3126 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_sp_0
static struct adl_operand _sym3125_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3127[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_gY_sp_1
static adl_instr_attrs _sym3129 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_gY_sp_1
static struct adl_operand _sym3128_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3130[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_sp_gX_0
static adl_instr_attrs _sym3132 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_sp_gX_0
static struct adl_operand _sym3131_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3133[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_sp_gX_1
static adl_instr_attrs _sym3135 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_sp_gX_1
static struct adl_operand _sym3134_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3136[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_cc_sp_sp_sp
static adl_instr_attrs _sym3138 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_cc_sp_sp_sp
static struct adl_operand _sym3137_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3139[] = { &_sym128,  (struct enum_fields *) -1,};

// Instruction add_gY_H_gX_00
static adl_instr_attrs _sym3141 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_H_gX_00
static struct adl_operand _sym3140_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3142[] = { &_sym128, &_sym216, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_gY_H_gX_01
static adl_instr_attrs _sym3144 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_H_gX_01
static struct adl_operand _sym3143_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3145[] = { &_sym128, &_sym216, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_gY_H_gX_10
static adl_instr_attrs _sym3147 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_H_gX_10
static struct adl_operand _sym3146_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3148[] = { &_sym128, &_sym222, &_sym206,  (struct enum_fields *) -1,};

// Instruction add_gY_H_gX_11
static adl_instr_attrs _sym3150 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_H_gX_11
static struct adl_operand _sym3149_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3151[] = { &_sym128, &_sym222, &_sym210,  (struct enum_fields *) -1,};

// Instruction add_gY_gX_H_00
static adl_instr_attrs _sym3153 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_gX_H_00
static struct adl_operand _sym3152_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3154[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_gY_gX_H_01
static adl_instr_attrs _sym3156 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_gX_H_01
static struct adl_operand _sym3155_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3157[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_gY_gX_H_10
static adl_instr_attrs _sym3159 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_gX_H_10
static struct adl_operand _sym3158_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3160[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction add_gY_gX_H_11
static adl_instr_attrs _sym3162 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_gY_gX_H_11
static struct adl_operand _sym3161_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3163[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16
static adl_instr_attrs _sym3165 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_s_gX_Is16
static struct adl_operand _sym3164_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3166[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_add
static adl_instr_attrs _sym3168 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_add -> add_s_gX_Is16;
static struct adl_operand _sym3169_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_add
static struct adl_operand _sym3167_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3170[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000000,},0, "", 0, 2, 2, 0, 0, _sym3169_operands,0,0,0, 0,&_sym3168,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3171[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_gX
static adl_instr_attrs _sym3173 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_gX -> add_s_gX_Is16;
static struct adl_operand _sym3174_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_gX
static struct adl_operand _sym3172_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3175[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000000,},0, "", 0, 2, 2, 0, 0, _sym3174_operands,0,0,0, 0,&_sym3173,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3176_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3177[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_gX_add
static adl_instr_attrs _sym3179 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_gX_add -> add_s_gX_Is16;
static struct adl_operand _sym3180_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_gX_add
static struct adl_operand _sym3178_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3181[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000000,},0, "", 0, 2, 2, 0, 0, _sym3180_operands,0,0,0, 0,&_sym3179,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3182_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3183[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_sp
static adl_instr_attrs _sym3185 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_sp -> add_s_gX_Is16;
static struct adl_operand _sym3186_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_sp
static struct adl_operand _sym3184_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3187[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000700,},0, "", 0, 1, 1, 0, 0, _sym3186_operands,0,0,0, 0,&_sym3185,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3188[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_sp_add
static adl_instr_attrs _sym3190 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_sp_add -> add_s_gX_Is16;
static struct adl_operand _sym3191_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_sp_add
static struct adl_operand _sym3189_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3192[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000700,},0, "", 0, 1, 1, 0, 0, _sym3191_operands,0,0,0, 0,&_sym3190,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3193[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_sp_sp
static adl_instr_attrs _sym3195 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_sp_sp -> add_s_gX_Is16;
static struct adl_operand _sym3196_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_sp_sp
static struct adl_operand _sym3194_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3197[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000700,},0, "", 0, 1, 1, 0, 0, _sym3196_operands,0,0,0, 0,&_sym3195,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3198[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_s_gX_Is16_sp_sp_add
static adl_instr_attrs _sym3200 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_s_gX_Is16_sp_sp_add -> add_s_gX_Is16;
static struct adl_operand _sym3201_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_s_gX_Is16_sp_sp_add
static struct adl_operand _sym3199_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3202[] = {
  // add_s_gX_Is16    (0)
  { "add_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xb8000700,},0, "", 0, 1, 1, 0, 0, _sym3201_operands,0,0,0, 0,&_sym3200,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3203[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16
static adl_instr_attrs _sym3205 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction add_z_gX_Iu16
static struct adl_operand _sym3204_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3206[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_add
static adl_instr_attrs _sym3208 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_add -> add_z_gX_Iu16;
static struct adl_operand _sym3209_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_add
static struct adl_operand _sym3207_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3210[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000000,},0, "", 0, 2, 2, 0, 0, _sym3209_operands,0,0,0, 0,&_sym3208,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3211[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_gX
static adl_instr_attrs _sym3213 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_gX -> add_z_gX_Iu16;
static struct adl_operand _sym3214_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_gX
static struct adl_operand _sym3212_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3215[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000000,},0, "", 0, 2, 2, 0, 0, _sym3214_operands,0,0,0, 0,&_sym3213,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3216_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3217[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_gX_add
static adl_instr_attrs _sym3219 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_gX_add -> add_z_gX_Iu16;
static struct adl_operand _sym3220_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_gX_add
static struct adl_operand _sym3218_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3221[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000000,},0, "", 0, 2, 2, 0, 0, _sym3220_operands,0,0,0, 0,&_sym3219,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3222_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3223[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_sp
static adl_instr_attrs _sym3225 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_sp -> add_z_gX_Iu16;
static struct adl_operand _sym3226_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_sp
static struct adl_operand _sym3224_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3227[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000700,},0, "", 0, 1, 1, 0, 0, _sym3226_operands,0,0,0, 0,&_sym3225,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3228[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_sp_add
static adl_instr_attrs _sym3230 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_sp_add -> add_z_gX_Iu16;
static struct adl_operand _sym3231_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_sp_add
static struct adl_operand _sym3229_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3232[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000700,},0, "", 0, 1, 1, 0, 0, _sym3231_operands,0,0,0, 0,&_sym3230,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3233[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_sp_sp
static adl_instr_attrs _sym3235 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_sp_sp -> add_z_gX_Iu16;
static struct adl_operand _sym3236_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_sp_sp
static struct adl_operand _sym3234_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3237[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000700,},0, "", 0, 1, 1, 0, 0, _sym3236_operands,0,0,0, 0,&_sym3235,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3238[] = { 0,  (struct enum_fields *) -1,};

// Instruction add_z_gX_Iu16_sp_sp_add
static adl_instr_attrs _sym3240 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  add_z_gX_Iu16_sp_sp_add -> add_z_gX_Iu16;
static struct adl_operand _sym3241_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction add_z_gX_Iu16_sp_sp_add
static struct adl_operand _sym3239_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3242[] = {
  // add_z_gX_Iu16    (0)
  { "add_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xb0000700,},0, "", 0, 1, 1, 0, 0, _sym3241_operands,0,0,0, 0,&_sym3240,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3243[] = { 0,  (struct enum_fields *) -1,};

// Instruction and_H
static adl_instr_attrs _sym3245 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_H
static struct adl_operand _sym3244_operands[] = {  0 };
static struct enum_fields *_sym3246[] = {  (struct enum_fields *) -1,};

// Instruction and_cc_gX_sp_sp_0
static adl_instr_attrs _sym3248 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gX_sp_sp_0
static struct adl_operand _sym3247_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3249[] = { &_sym128, &_sym216,  (struct enum_fields *) -1,};

// Instruction and_cc_gX_sp_sp_1
static adl_instr_attrs _sym3251 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gX_sp_sp_1
static struct adl_operand _sym3250_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3252[] = { &_sym128, &_sym222,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_000
static adl_instr_attrs _sym3254 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_000
static struct adl_operand _sym3253_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3255[] = { &_sym128, &_sym216, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_001
static adl_instr_attrs _sym3257 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_001
static struct adl_operand _sym3256_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3258[] = { &_sym128, &_sym216, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_010
static adl_instr_attrs _sym3260 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_010
static struct adl_operand _sym3259_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3261[] = { &_sym128, &_sym216, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_011
static adl_instr_attrs _sym3263 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_011
static struct adl_operand _sym3262_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3264[] = { &_sym128, &_sym216, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_100
static adl_instr_attrs _sym3266 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_100
static struct adl_operand _sym3265_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3267[] = { &_sym128, &_sym222, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_101
static adl_instr_attrs _sym3269 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_101
static struct adl_operand _sym3268_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3270[] = { &_sym128, &_sym222, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_110
static adl_instr_attrs _sym3272 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_110
static struct adl_operand _sym3271_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3273[] = { &_sym128, &_sym222, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_gY_111
static adl_instr_attrs _sym3275 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_gY_111
static struct adl_operand _sym3274_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3276[] = { &_sym128, &_sym222, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_sp_00
static adl_instr_attrs _sym3278 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_sp_00
static struct adl_operand _sym3277_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3279[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_sp_01
static adl_instr_attrs _sym3281 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_sp_01
static struct adl_operand _sym3280_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3282[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_sp_10
static adl_instr_attrs _sym3284 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_sp_10
static struct adl_operand _sym3283_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3285[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_gX_sp_11
static adl_instr_attrs _sym3287 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_gX_sp_11
static struct adl_operand _sym3286_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3288[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_sp_gX_00
static adl_instr_attrs _sym3290 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_sp_gX_00
static struct adl_operand _sym3289_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3291[] = { &_sym128, &_sym216, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_sp_gX_01
static adl_instr_attrs _sym3293 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_sp_gX_01
static struct adl_operand _sym3292_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3294[] = { &_sym128, &_sym216, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_sp_gX_10
static adl_instr_attrs _sym3296 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_sp_gX_10
static struct adl_operand _sym3295_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3297[] = { &_sym128, &_sym222, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_gZ_sp_gX_11
static adl_instr_attrs _sym3299 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_gZ_sp_gX_11
static struct adl_operand _sym3298_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3300[] = { &_sym128, &_sym222, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gX_sp_0
static adl_instr_attrs _sym3302 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gX_sp_0
static struct adl_operand _sym3301_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3303[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gX_sp_1
static adl_instr_attrs _sym3305 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gX_sp_1
static struct adl_operand _sym3304_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3306[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gY_gX_00
static adl_instr_attrs _sym3308 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gY_gX_00
static struct adl_operand _sym3307_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3309[] = { &_sym128, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gY_gX_01
static adl_instr_attrs _sym3311 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gY_gX_01
static struct adl_operand _sym3310_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3312[] = { &_sym128, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gY_gX_10
static adl_instr_attrs _sym3314 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gY_gX_10
static struct adl_operand _sym3313_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3315[] = { &_sym128, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_gY_gX_11
static adl_instr_attrs _sym3317 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_gY_gX_11
static struct adl_operand _sym3316_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3318[] = { &_sym128, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_sp_gY_0
static adl_instr_attrs _sym3320 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_sp_gY_0
static struct adl_operand _sym3319_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3321[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction and_cc_sp_sp_gY_1
static adl_instr_attrs _sym3323 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_cc_sp_sp_gY_1
static struct adl_operand _sym3322_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3324[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction and_gX_Iu16
static adl_instr_attrs _sym3326 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction and_gX_Iu16
static struct adl_operand _sym3325_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{75, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3327[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction and_gX_gX_Iu16
static adl_instr_attrs _sym3329 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  and_gX_gX_Iu16 -> and_gX_Iu16;
static struct adl_operand _sym3330_operands[] = { {75, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction and_gX_gX_Iu16
static struct adl_operand _sym3328_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{270, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3331[] = {
  // and_gX_Iu16    (0)
  { "and_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x18000000,},0, "", 0, 2, 2, 0, 0, _sym3330_operands,0,0,0, 0,&_sym3329,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3332_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3333[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction and_sp_Iu16
static adl_instr_attrs _sym3335 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  and_sp_Iu16 -> and_gX_Iu16;
static struct adl_operand _sym3336_operands[] = { {75, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction and_sp_Iu16
static struct adl_operand _sym3334_operands[] = { {270, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3337[] = {
  // and_gX_Iu16    (0)
  { "and_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x18000700,},0, "", 0, 1, 1, 0, 0, _sym3336_operands,0,0,0, 0,&_sym3335,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3338[] = { 0,  (struct enum_fields *) -1,};

// Instruction bclr_cc_gZ_gY_gX
static adl_instr_attrs _sym3340 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction bclr_cc_gZ_gY_gX
static struct adl_operand _sym3339_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3341[] = { &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction btst_gX_I
static adl_instr_attrs _sym3343 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction btst_gX_I
static struct adl_operand _sym3342_operands[] = { {69, 0, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{95, 1, 0, 0, 12, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3344[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction clr_VRA_gX_gY
static adl_instr_attrs _sym3346 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction clr_VRA_gX_gY
static struct adl_operand _sym3345_operands[] = { {69, 0, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{55, 1, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3347[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction clr_g_Iu12
static adl_instr_attrs _sym3349 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction clr_g_Iu12
static struct adl_operand _sym3348_operands[] = { {73, 0, 0, 0, 13, 0ull, 0xfffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3350[] = { 0,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gX_gY_00
static adl_instr_attrs _sym3352 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gX_gY_00
static struct adl_operand _sym3351_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3353[] = { &_sym128, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gX_gY_01
static adl_instr_attrs _sym3355 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gX_gY_01
static struct adl_operand _sym3354_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3356[] = { &_sym128, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gX_gY_10
static adl_instr_attrs _sym3358 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gX_gY_10
static struct adl_operand _sym3357_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3359[] = { &_sym128, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gX_gY_11
static adl_instr_attrs _sym3361 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gX_gY_11
static struct adl_operand _sym3360_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3362[] = { &_sym128, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gY_sp_0
static adl_instr_attrs _sym3364 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gY_sp_0
static struct adl_operand _sym3363_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3365[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction cmp_cc_gY_sp_1
static adl_instr_attrs _sym3367 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_gY_sp_1
static struct adl_operand _sym3366_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3368[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction cmp_cc_sp_gX_0
static adl_instr_attrs _sym3370 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_sp_gX_0
static struct adl_operand _sym3369_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3371[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction cmp_cc_sp_gX_1
static adl_instr_attrs _sym3373 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_sp_gX_1
static struct adl_operand _sym3372_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3374[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction cmp_cc_sp_sp
static adl_instr_attrs _sym3376 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_cc_sp_sp
static struct adl_operand _sym3375_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3377[] = { &_sym128,  (struct enum_fields *) -1,};

// Instruction cmp_s_gX_Is16
static adl_instr_attrs _sym3379 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_s_gX_Is16
static struct adl_operand _sym3378_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3380[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction cmp_s_gX_Is16_cmp
static adl_instr_attrs _sym3382 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_s_gX_Is16_cmp -> cmp_s_gX_Is16;
static struct adl_operand _sym3383_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_s_gX_Is16_cmp
static struct adl_operand _sym3381_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3384[] = {
  // cmp_s_gX_Is16    (0)
  { "cmp_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x78000000,},0, "", 0, 2, 2, 0, 0, _sym3383_operands,0,0,0, 0,&_sym3382,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3385[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction cmp_s_gX_Is16_sp
static adl_instr_attrs _sym3387 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_s_gX_Is16_sp -> cmp_s_gX_Is16;
static struct adl_operand _sym3388_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_s_gX_Is16_sp
static struct adl_operand _sym3386_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3389[] = {
  // cmp_s_gX_Is16    (0)
  { "cmp_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x78000700,},0, "", 0, 1, 1, 0, 0, _sym3388_operands,0,0,0, 0,&_sym3387,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3390[] = { 0,  (struct enum_fields *) -1,};

// Instruction cmp_s_gX_Is16_sp_cmp
static adl_instr_attrs _sym3392 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_s_gX_Is16_sp_cmp -> cmp_s_gX_Is16;
static struct adl_operand _sym3393_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_s_gX_Is16_sp_cmp
static struct adl_operand _sym3391_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3394[] = {
  // cmp_s_gX_Is16    (0)
  { "cmp_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x78000700,},0, "", 0, 1, 1, 0, 0, _sym3393_operands,0,0,0, 0,&_sym3392,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3395[] = { 0,  (struct enum_fields *) -1,};

// Instruction cmp_z_gX_Iu16
static adl_instr_attrs _sym3397 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction cmp_z_gX_Iu16
static struct adl_operand _sym3396_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3398[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction cmp_z_gX_Iu16_cmp
static adl_instr_attrs _sym3400 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_z_gX_Iu16_cmp -> cmp_z_gX_Iu16;
static struct adl_operand _sym3401_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_z_gX_Iu16_cmp
static struct adl_operand _sym3399_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3402[] = {
  // cmp_z_gX_Iu16    (0)
  { "cmp_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x70000000,},0, "", 0, 2, 2, 0, 0, _sym3401_operands,0,0,0, 0,&_sym3400,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3403[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction cmp_z_gX_Iu16_sp
static adl_instr_attrs _sym3405 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_z_gX_Iu16_sp -> cmp_z_gX_Iu16;
static struct adl_operand _sym3406_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_z_gX_Iu16_sp
static struct adl_operand _sym3404_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3407[] = {
  // cmp_z_gX_Iu16    (0)
  { "cmp_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x70000700,},0, "", 0, 1, 1, 0, 0, _sym3406_operands,0,0,0, 0,&_sym3405,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3408[] = { 0,  (struct enum_fields *) -1,};

// Instruction cmp_z_gX_Iu16_sp_cmp
static adl_instr_attrs _sym3410 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  cmp_z_gX_Iu16_sp_cmp -> cmp_z_gX_Iu16;
static struct adl_operand _sym3411_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction cmp_z_gX_Iu16_sp_cmp
static struct adl_operand _sym3409_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3412[] = {
  // cmp_z_gX_Iu16    (0)
  { "cmp_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x70000700,},0, "", 0, 1, 1, 0, 0, _sym3411_operands,0,0,0, 0,&_sym3410,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3413[] = { 0,  (struct enum_fields *) -1,};

// Instruction div_s_cc_gZ_gX_gY
static adl_instr_attrs _sym3415 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction div_s_cc_gZ_gX_gY
static struct adl_operand _sym3414_operands[] = { {139, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{37, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 3, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 4, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3416[] = { &_sym308, &_sym130, &_sym214, &_sym202, &_sym232,  (struct enum_fields *) -1,};

// Instruction div_s_cc_gZ_gX_gY_cond
static adl_instr_attrs _sym3418 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_cc_gZ_gX_gY_cond -> div_s_cc_gZ_gX_gY;

static bfd_uint64_t _sym3420_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (operands[0].X_add_number) >> 4; }
static struct adl_operand _sym3419_operands[] = { {139, 0, 0, 0, 0, 0, 0, 0, _sym3420_modifier, 0, 0,0, -1,-1,},{37, 0, 0, 0, 9, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_cc_gZ_gX_gY_cond
static struct adl_operand _sym3417_operands[] = { {350, 0, 0, 0, 24, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 3, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3421[] = {
  // div_s_cc_gZ_gX_gY    (0)
  { "div_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x31000000,},0, "", 0, 5, 5, 0, 1, _sym3419_operands,0,0,0, 0,&_sym3418,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3422[] = { &_sym306, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction div_s_cc_gZ_gX_gY_signed
static adl_instr_attrs _sym3424 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_cc_gZ_gX_gY_signed -> div_s_cc_gZ_gX_gY;
static struct adl_operand _sym3425_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_cc_gZ_gX_gY_signed
static struct adl_operand _sym3423_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3426[] = {
  // div_s_cc_gZ_gX_gY    (0)
  { "div_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x31800000,},0, "", 0, 3, 3, 0, 0, _sym3425_operands,0,0,0, 0,&_sym3424,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3427[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction div_s_cc_gZ_gX_gY_unsigned
static adl_instr_attrs _sym3429 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_cc_gZ_gX_gY_unsigned -> div_s_cc_gZ_gX_gY;
static struct adl_operand _sym3430_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_cc_gZ_gX_gY_unsigned
static struct adl_operand _sym3428_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3431[] = {
  // div_s_cc_gZ_gX_gY    (0)
  { "div_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x31000000,},0, "", 0, 3, 3, 0, 0, _sym3430_operands,0,0,0, 0,&_sym3429,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3432[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction div_s_gX_Is16
static adl_instr_attrs _sym3434 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction div_s_gX_Is16
static struct adl_operand _sym3433_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3435[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_s_gX_Is16_div
static adl_instr_attrs _sym3437 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_gX_Is16_div -> div_s_gX_Is16;
static struct adl_operand _sym3438_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_gX_Is16_div
static struct adl_operand _sym3436_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3439[] = {
  // div_s_gX_Is16    (0)
  { "div_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x88000000,},0, "", 0, 2, 2, 0, 0, _sym3438_operands,0,0,0, 0,&_sym3437,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3440[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_s_gX_Is16_gX
static adl_instr_attrs _sym3442 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_gX_Is16_gX -> div_s_gX_Is16;
static struct adl_operand _sym3443_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_gX_Is16_gX
static struct adl_operand _sym3441_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3444[] = {
  // div_s_gX_Is16    (0)
  { "div_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x88000000,},0, "", 0, 2, 2, 0, 0, _sym3443_operands,0,0,0, 0,&_sym3442,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3445_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3446[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_s_gX_Is16_gX_div
static adl_instr_attrs _sym3448 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_s_gX_Is16_gX_div -> div_s_gX_Is16;
static struct adl_operand _sym3449_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_s_gX_Is16_gX_div
static struct adl_operand _sym3447_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3450[] = {
  // div_s_gX_Is16    (0)
  { "div_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x88000000,},0, "", 0, 2, 2, 0, 0, _sym3449_operands,0,0,0, 0,&_sym3448,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3451_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3452[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_z_gX_Iu16
static adl_instr_attrs _sym3454 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction div_z_gX_Iu16
static struct adl_operand _sym3453_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3455[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_z_gX_Iu16_div
static adl_instr_attrs _sym3457 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_z_gX_Iu16_div -> div_z_gX_Iu16;
static struct adl_operand _sym3458_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_z_gX_Iu16_div
static struct adl_operand _sym3456_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3459[] = {
  // div_z_gX_Iu16    (0)
  { "div_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x80000000,},0, "", 0, 2, 2, 0, 0, _sym3458_operands,0,0,0, 0,&_sym3457,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3460[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_z_gX_Iu16_gX
static adl_instr_attrs _sym3462 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_z_gX_Iu16_gX -> div_z_gX_Iu16;
static struct adl_operand _sym3463_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_z_gX_Iu16_gX
static struct adl_operand _sym3461_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3464[] = {
  // div_z_gX_Iu16    (0)
  { "div_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x80000000,},0, "", 0, 2, 2, 0, 0, _sym3463_operands,0,0,0, 0,&_sym3462,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3465_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3466[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction div_z_gX_Iu16_gX_div
static adl_instr_attrs _sym3468 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  div_z_gX_Iu16_gX_div -> div_z_gX_Iu16;
static struct adl_operand _sym3469_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction div_z_gX_Iu16_gX_div
static struct adl_operand _sym3467_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3470[] = {
  // div_z_gX_Iu16    (0)
  { "div_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x80000000,},0, "", 0, 2, 2, 0, 0, _sym3469_operands,0,0,0, 0,&_sym3468,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3471_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3472[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ff0to1_gY_gX
static adl_instr_attrs _sym3474 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction ff0to1_gY_gX
static struct adl_operand _sym3473_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3475[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction ff1_gY_gX
static adl_instr_attrs _sym3477 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction ff1_gY_gX
static struct adl_operand _sym3476_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3478[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction ff1to0_gY_gX
static adl_instr_attrs _sym3480 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction ff1to0_gY_gX
static struct adl_operand _sym3479_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3481[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction fns_gY_gX
static adl_instr_attrs _sym3483 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction fns_gY_gX
static struct adl_operand _sym3482_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3484[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction ld_H_Iu17_opS_LO
static adl_instr_attrs _sym3486 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_LO_ld_H_Iu17)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_H_Iu17_opS_LO
static struct adl_operand _sym3485_operands[] = { {82, 0, ADL_ABSOLUTE, 0, 4, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3487[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_Is8
static adl_instr_attrs _sym3489 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_H_aX_Is8
static struct adl_operand _sym3488_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3490[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_Is8_minus
static adl_instr_attrs _sym3492 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_H_aX_Is8_minus -> ld_H_aX_Is8;

static bfd_uint64_t _sym3494_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym3493_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3494_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_H_aX_Is8_minus
static struct adl_operand _sym3491_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3495[] = {
  // ld_H_aX_Is8    (0)
  { "ld_H_aX_Is8", 3, 25, 64,  0x1, { 0x0,0x4000600,},0, "", 0, 2, 2, 0, 0, _sym3493_operands,0,0,0, 0,&_sym3492,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3496[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_Is8_zero
static adl_instr_attrs _sym3498 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_H_aX_Is8_zero -> ld_H_aX_Is8;
static struct adl_operand _sym3499_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_H_aX_Is8_zero
static struct adl_operand _sym3497_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3500[] = {
  // ld_H_aX_Is8    (0)
  { "ld_H_aX_Is8", 3, 25, 64,  0x1, { 0x0,0x4000600,},0, "", 0, 1, 1, 0, 0, _sym3499_operands,0,0,0, 0,&_sym3498,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3501[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_aY
static adl_instr_attrs _sym3503 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_H_aX_aY
static struct adl_operand _sym3502_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3504[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_H_aX_u_Is8
static adl_instr_attrs _sym3506 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_H_aX_u_Is8
static struct adl_operand _sym3505_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3507[] = { &_sym10, 0,  (struct enum_fields *) -1,};

// Instruction ld_H_sp_Is10
static adl_instr_attrs _sym3509 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_H_sp_Is10
static struct adl_operand _sym3508_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3510[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_H_sp_Is10_minus
static adl_instr_attrs _sym3512 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_H_sp_Is10_minus -> ld_H_sp_Is10;

static bfd_uint64_t _sym3514_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym3513_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym3514_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_H_sp_Is10_minus
static struct adl_operand _sym3511_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3515[] = {
  // ld_H_sp_Is10    (0)
  { "ld_H_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2000600,},0, "", 0, 1, 1, 0, 0, _sym3513_operands,0,0,0, 0,&_sym3512,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3516[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_H_sp_Is10_zero
static adl_instr_attrs _sym3518 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_H_sp_Is10_zero -> ld_H_sp_Is10;
static struct adl_operand _sym3519_operands[] = {  0 };

// Instruction ld_H_sp_Is10_zero
static struct adl_operand _sym3517_operands[] = {  0 };
static struct adl_opcode _sym3520[] = {
  // ld_H_sp_Is10    (0)
  { "ld_H_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2000600,},0, "", 0, 0, 0, 0, 0, _sym3519_operands,0,0,0, 0,&_sym3518,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3521[] = {  (struct enum_fields *) -1,};

// Instruction ld_gX_Iu17_opS_LO
static adl_instr_attrs _sym3523 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_LO_ld_gX_Iu17)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gX_Iu17_opS_LO
static struct adl_operand _sym3522_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{82, 1, ADL_ABSOLUTE, 0, 4, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3524[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_gX_sp_Is10
static adl_instr_attrs _sym3526 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gX_sp_Is10
static struct adl_operand _sym3525_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{71, 1, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3527[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_gX_sp_Is10_minus
static adl_instr_attrs _sym3529 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_gX_sp_Is10_minus -> ld_gX_sp_Is10;

static bfd_uint64_t _sym3531_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym3530_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym3531_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gX_sp_Is10_minus
static struct adl_operand _sym3528_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{255, 1, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3532[] = {
  // ld_gX_sp_Is10    (0)
  { "ld_gX_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2000000,},0, "", 0, 2, 2, 0, 0, _sym3530_operands,0,0,0, 0,&_sym3529,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3533[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_gX_sp_Is10_zero
static adl_instr_attrs _sym3535 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_gX_sp_Is10_zero -> ld_gX_sp_Is10;
static struct adl_operand _sym3536_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gX_sp_Is10_zero
static struct adl_operand _sym3534_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3537[] = {
  // ld_gX_sp_Is10    (0)
  { "ld_gX_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2000000,},0, "", 0, 1, 1, 0, 0, _sym3536_operands,0,0,0, 0,&_sym3535,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3538[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_Is8_u
static adl_instr_attrs _sym3540 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gY_aX_Is8_u
static struct adl_operand _sym3539_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3541[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8
static adl_instr_attrs _sym3543 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gY_aX_u_Is8
static struct adl_operand _sym3542_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3544[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_minus
static adl_instr_attrs _sym3546 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_minus -> ld_gY_aX_u_Is8;

static bfd_uint64_t _sym3548_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym3549_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }
static struct adl_operand _sym3547_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym3548_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3549_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_minus
static struct adl_operand _sym3545_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 2, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3550[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4000000,},0, "", 0, 4, 4, 0, 0, _sym3547_operands,0,0,0, 0,&_sym3546,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3551[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_plus
static adl_instr_attrs _sym3553 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_plus -> ld_gY_aX_u_Is8;

static bfd_uint64_t _sym3555_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }

static bfd_uint64_t _sym3556_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }
static struct adl_operand _sym3554_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym3555_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3556_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_plus
static struct adl_operand _sym3552_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 2, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3557[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4000000,},0, "", 0, 4, 4, 0, 0, _sym3554_operands,0,0,0, 0,&_sym3553,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3558[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_u
static adl_instr_attrs _sym3560 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_gY_aX_u_Is8_u
static struct adl_operand _sym3559_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3561[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_u_minus
static adl_instr_attrs _sym3563 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_u_minus -> ld_gY_aX_u_Is8_u;

static bfd_uint64_t _sym3565_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym3566_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }
static struct adl_operand _sym3564_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym3565_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3566_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_u_minus
static struct adl_operand _sym3562_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 2, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3567[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4200000,},0, "", 0, 4, 4, 0, 0, _sym3564_operands,0,0,0, 0,&_sym3563,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3568[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_u_plus
static adl_instr_attrs _sym3570 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_u_plus -> ld_gY_aX_u_Is8_u;

static bfd_uint64_t _sym3572_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }

static bfd_uint64_t _sym3573_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }
static struct adl_operand _sym3571_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym3572_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3573_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_u_plus
static struct adl_operand _sym3569_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 2, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3574[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4200000,},0, "", 0, 4, 4, 0, 0, _sym3571_operands,0,0,0, 0,&_sym3570,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3575[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_u_zero
static adl_instr_attrs _sym3577 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_u_zero -> ld_gY_aX_u_Is8_u;
static struct adl_operand _sym3578_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_u_zero
static struct adl_operand _sym3576_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3579[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4200000,},0, "", 0, 2, 2, 0, 0, _sym3578_operands,0,0,0, 0,&_sym3577,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3580[] = { &_sym186, &_sym2,  (struct enum_fields *) -1,};

// Instruction ld_gY_aX_u_Is8_zero
static adl_instr_attrs _sym3582 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_gY_aX_u_Is8_zero -> ld_gY_aX_u_Is8;
static struct adl_operand _sym3583_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_gY_aX_u_Is8_zero
static struct adl_operand _sym3581_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3584[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4000000,},0, "", 0, 2, 2, 0, 0, _sym3583_operands,0,0,0, 0,&_sym3582,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3585[] = { &_sym186, &_sym2,  (struct enum_fields *) -1,};

// Instruction ld_gZ_aX_aY
static adl_instr_attrs _sym3587 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_gZ_aX_aY
static struct adl_operand _sym3586_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 2, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 3, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3588[] = { &_sym186, &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_line_gY_aX_u_Is8_minus
static adl_instr_attrs _sym3590 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_gY_aX_u_Is8_minus -> ld_gY_aX_u_Is8;

static bfd_uint64_t _sym3592_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[2].X_add_number),FALSE)); }
static struct adl_operand _sym3591_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3592_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_line_gY_aX_u_Is8_minus
static struct adl_operand _sym3589_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 2, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3593[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4800000,},0, "", 0, 3, 3, 0, 0, _sym3591_operands,0,0,0, 0,&_sym3590,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3594[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_line_gY_aX_u_Is8_plus
static adl_instr_attrs _sym3596 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_gY_aX_u_Is8_plus -> ld_gY_aX_u_Is8;
static struct adl_operand _sym3597_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_line_gY_aX_u_Is8_plus
static struct adl_operand _sym3595_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 2, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3598[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4800000,},0, "", 0, 3, 3, 0, 0, _sym3597_operands,0,0,0, 0,&_sym3596,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3599[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_line_gY_aX_u_Is8_u_minus
static adl_instr_attrs _sym3601 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_gY_aX_u_Is8_u_minus -> ld_gY_aX_u_Is8_u;

static bfd_uint64_t _sym3603_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[2].X_add_number),FALSE)); }
static struct adl_operand _sym3602_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3603_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_line_gY_aX_u_Is8_u_minus
static struct adl_operand _sym3600_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 2, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3604[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4a00000,},0, "", 0, 3, 3, 0, 0, _sym3602_operands,0,0,0, 0,&_sym3601,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3605[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_line_gY_aX_u_Is8_u_plus
static adl_instr_attrs _sym3607 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_line_gY_aX_u_Is8_u_plus -> ld_gY_aX_u_Is8_u;
static struct adl_operand _sym3608_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_line_gY_aX_u_Is8_u_plus
static struct adl_operand _sym3606_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 2, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3609[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4a00000,},0, "", 0, 3, 3, 0, 0, _sym3608_operands,0,0,0, 0,&_sym3607,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3610[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_Is8
static adl_instr_attrs _sym3612 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_H_aX_Is8
static struct adl_operand _sym3611_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3613[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_Is8_minus
static adl_instr_attrs _sym3615 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_aX_Is8_minus -> ld_u_H_aX_Is8;

static bfd_uint64_t _sym3617_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym3616_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3617_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_u_H_aX_Is8_minus
static struct adl_operand _sym3614_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3618[] = {
  // ld_u_H_aX_Is8    (0)
  { "ld_u_H_aX_Is8", 3, 25, 64,  0x1, { 0x0,0x4200600,},0, "", 0, 2, 2, 0, 0, _sym3616_operands,0,0,0, 0,&_sym3615,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3619[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_Is8_zero
static adl_instr_attrs _sym3621 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_aX_Is8_zero -> ld_u_H_aX_Is8;
static struct adl_operand _sym3622_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_H_aX_Is8_zero
static struct adl_operand _sym3620_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3623[] = {
  // ld_u_H_aX_Is8    (0)
  { "ld_u_H_aX_Is8", 3, 25, 64,  0x1, { 0x0,0x4200600,},0, "", 0, 1, 1, 0, 0, _sym3622_operands,0,0,0, 0,&_sym3621,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3624[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_aY
static adl_instr_attrs _sym3626 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_u_H_aX_aY
static struct adl_operand _sym3625_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3627[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_u_Is8
static adl_instr_attrs _sym3629 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_H_aX_u_Is8
static struct adl_operand _sym3628_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3630[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_u_Is8_minus
static adl_instr_attrs _sym3632 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_aX_u_Is8_minus -> ld_u_H_aX_u_Is8;

static bfd_uint64_t _sym3634_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym3633_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3634_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_u_H_aX_u_Is8_minus
static struct adl_operand _sym3631_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3635[] = {
  // ld_u_H_aX_u_Is8    (0)
  { "ld_u_H_aX_u_Is8", 3, 25, 64,  0x1, { 0x0,0x4600600,},0, "", 0, 2, 2, 0, 0, _sym3633_operands,0,0,0, 0,&_sym3632,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3636[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_aX_u_aY
static adl_instr_attrs _sym3638 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_u_H_aX_u_aY
static struct adl_operand _sym3637_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3639[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_u_H_sp_Is10
static adl_instr_attrs _sym3641 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_H_sp_Is10
static struct adl_operand _sym3640_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3642[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_sp_Is10_minus
static adl_instr_attrs _sym3644 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_sp_Is10_minus -> ld_u_H_sp_Is10;

static bfd_uint64_t _sym3646_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym3645_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym3646_modifier, 0, 0,0, -1,-1,},};

// Instruction ld_u_H_sp_Is10_minus
static struct adl_operand _sym3643_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3647[] = {
  // ld_u_H_sp_Is10    (0)
  { "ld_u_H_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2200600,},0, "", 0, 1, 1, 0, 0, _sym3645_operands,0,0,0, 0,&_sym3644,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3648[] = { 0,  (struct enum_fields *) -1,};

// Instruction ld_u_H_sp_Is10_zero
static adl_instr_attrs _sym3650 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_H_sp_Is10_zero -> ld_u_H_sp_Is10;
static struct adl_operand _sym3651_operands[] = {  0 };

// Instruction ld_u_H_sp_Is10_zero
static struct adl_operand _sym3649_operands[] = {  0 };
static struct adl_opcode _sym3652[] = {
  // ld_u_H_sp_Is10    (0)
  { "ld_u_H_sp_Is10", 3, 25, 64,  0x1, { 0x0,0x2200600,},0, "", 0, 0, 0, 0, 0, _sym3651_operands,0,0,0, 0,&_sym3650,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3653[] = {  (struct enum_fields *) -1,};

// Instruction ld_u_gX_sp_Is
static adl_instr_attrs _sym3655 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_gX_sp_Is
static struct adl_operand _sym3654_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{71, 1, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3656[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gX_sp_Is_minus
static adl_instr_attrs _sym3658 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_gX_sp_Is_minus -> ld_u_gX_sp_Is;

static bfd_uint64_t _sym3660_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym3659_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym3660_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gX_sp_Is_minus
static struct adl_operand _sym3657_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{255, 1, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3661[] = {
  // ld_u_gX_sp_Is    (0)
  { "ld_u_gX_sp_Is", 3, 25, 64,  0x1, { 0x0,0x2200000,},0, "", 0, 2, 2, 0, 0, _sym3659_operands,0,0,0, 0,&_sym3658,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3662[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gX_sp_Is_zero
static adl_instr_attrs _sym3664 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_gX_sp_Is_zero -> ld_u_gX_sp_Is;
static struct adl_operand _sym3665_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gX_sp_Is_zero
static struct adl_operand _sym3663_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3666[] = {
  // ld_u_gX_sp_Is    (0)
  { "ld_u_gX_sp_Is", 3, 25, 64,  0x1, { 0x0,0x2200000,},0, "", 0, 1, 1, 0, 0, _sym3665_operands,0,0,0, 0,&_sym3664,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3667[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u
static adl_instr_attrs _sym3669 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Instruction ld_u_gY_aX_Is8_u
static struct adl_operand _sym3668_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3670[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u_line_minus
static adl_instr_attrs _sym3672 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_gY_aX_Is8_u_line_minus -> ld_u_gY_aX_Is8_u;

static bfd_uint64_t _sym3674_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[2].X_add_number),FALSE)); }
static struct adl_operand _sym3673_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3674_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gY_aX_Is8_u_line_minus
static struct adl_operand _sym3671_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 2, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3675[] = {
  // ld_u_gY_aX_Is8_u    (0)
  { "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4e00000,},0, "", 0, 3, 3, 0, 0, _sym3673_operands,0,0,0, 0,&_sym3672,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3676[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u_line_plus
static adl_instr_attrs _sym3678 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  ld_u_gY_aX_Is8_u_line_plus -> ld_u_gY_aX_Is8_u;
static struct adl_operand _sym3679_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gY_aX_Is8_u_line_plus
static struct adl_operand _sym3677_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 2, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3680[] = {
  // ld_u_gY_aX_Is8_u    (0)
  { "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4e00000,},0, "", 0, 3, 3, 0, 0, _sym3679_operands,0,0,0, 0,&_sym3678,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3681[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u_minus
static adl_instr_attrs _sym3683 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_u_gY_aX_Is8_u_minus -> ld_u_gY_aX_Is8_u;

static bfd_uint64_t _sym3685_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym3686_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[2].X_add_number),FALSE)) ); }
static struct adl_operand _sym3684_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym3685_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3686_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gY_aX_Is8_u_minus
static struct adl_operand _sym3682_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 2, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},};
static struct adl_opcode _sym3687[] = {
  // ld_u_gY_aX_Is8_u    (0)
  { "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4600000,},0, "", 0, 4, 4, 0, 0, _sym3684_operands,0,0,0, 0,&_sym3683,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3688[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gY_aX_Is8_u_plus
static adl_instr_attrs _sym3690 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  ld_u_gY_aX_Is8_u_plus -> ld_u_gY_aX_Is8_u;

static bfd_uint64_t _sym3692_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }

static bfd_uint64_t _sym3693_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[2].X_add_number) & (1 << 14)) ? ((operands[2].X_add_number)- (1 << 15)):(operands[2].X_add_number))) ); }
static struct adl_operand _sym3691_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym3692_modifier, 0, 0,0, -1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym3693_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction ld_u_gY_aX_Is8_u_plus
static struct adl_operand _sym3689_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 2, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3694[] = {
  // ld_u_gY_aX_Is8_u    (0)
  { "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x1, { 0x0,0x4600000,},0, "", 0, 4, 4, 0, 0, _sym3691_operands,0,0,0, 0,&_sym3690,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3695[] = { &_sym186, &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction ld_u_gZ_aX_aY_u
static adl_instr_attrs _sym3697 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_u_gZ_aX_aY_u
static struct adl_operand _sym3696_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 2, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 3, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3698[] = { &_sym186, &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction ld_u_gZ_aX_u_aY
static adl_instr_attrs _sym3700 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_no_comp)) , 0 };

// Instruction ld_u_gZ_aX_u_aY
static struct adl_operand _sym3699_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 2, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 3, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3701[] = { &_sym186, &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction log2_gY_gX
static adl_instr_attrs _sym3703 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction log2_gY_gX
static struct adl_operand _sym3702_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3704[] = { &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction mod_s_cc_gZ_gX_gY
static adl_instr_attrs _sym3706 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mod_s_cc_gZ_gX_gY
static struct adl_operand _sym3705_operands[] = { {139, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{37, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 3, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 4, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3707[] = { &_sym308, &_sym130, &_sym214, &_sym202, &_sym232,  (struct enum_fields *) -1,};

// Instruction mod_s_cc_gZ_gX_gY_cond
static adl_instr_attrs _sym3709 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_cc_gZ_gX_gY_cond -> mod_s_cc_gZ_gX_gY;

static bfd_uint64_t _sym3711_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (operands[0].X_add_number) >> 4; }
static struct adl_operand _sym3710_operands[] = { {139, 0, 0, 0, 0, 0, 0, 0, _sym3711_modifier, 0, 0,0, -1,-1,},{37, 0, 0, 0, 9, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_cc_gZ_gX_gY_cond
static struct adl_operand _sym3708_operands[] = { {350, 0, 0, 0, 24, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 3, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3712[] = {
  // mod_s_cc_gZ_gX_gY    (0)
  { "mod_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x32000000,},0, "", 0, 5, 5, 0, 1, _sym3710_operands,0,0,0, 0,&_sym3709,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3713[] = { &_sym306, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mod_s_cc_gZ_gX_gY_signed
static adl_instr_attrs _sym3715 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_cc_gZ_gX_gY_signed -> mod_s_cc_gZ_gX_gY;
static struct adl_operand _sym3716_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_cc_gZ_gX_gY_signed
static struct adl_operand _sym3714_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3717[] = {
  // mod_s_cc_gZ_gX_gY    (0)
  { "mod_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x32800000,},0, "", 0, 3, 3, 0, 0, _sym3716_operands,0,0,0, 0,&_sym3715,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3718[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mod_s_cc_gZ_gX_gY_unsigned
static adl_instr_attrs _sym3720 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_cc_gZ_gX_gY_unsigned -> mod_s_cc_gZ_gX_gY;
static struct adl_operand _sym3721_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_cc_gZ_gX_gY_unsigned
static struct adl_operand _sym3719_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3722[] = {
  // mod_s_cc_gZ_gX_gY    (0)
  { "mod_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x32000000,},0, "", 0, 3, 3, 0, 0, _sym3721_operands,0,0,0, 0,&_sym3720,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3723[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mod_s_gX_Is16
static adl_instr_attrs _sym3725 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mod_s_gX_Is16
static struct adl_operand _sym3724_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3726[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_s_gX_Is16_gX
static adl_instr_attrs _sym3728 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_gX_Is16_gX -> mod_s_gX_Is16;
static struct adl_operand _sym3729_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_gX_Is16_gX
static struct adl_operand _sym3727_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3730[] = {
  // mod_s_gX_Is16    (0)
  { "mod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x98000000,},0, "", 0, 2, 2, 0, 0, _sym3729_operands,0,0,0, 0,&_sym3728,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3731_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3732[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_s_gX_Is16_gX_mod
static adl_instr_attrs _sym3734 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_gX_Is16_gX_mod -> mod_s_gX_Is16;
static struct adl_operand _sym3735_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_gX_Is16_gX_mod
static struct adl_operand _sym3733_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3736[] = {
  // mod_s_gX_Is16    (0)
  { "mod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x98000000,},0, "", 0, 2, 2, 0, 0, _sym3735_operands,0,0,0, 0,&_sym3734,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3737_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3738[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_s_gX_Is16_mod
static adl_instr_attrs _sym3740 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_s_gX_Is16_mod -> mod_s_gX_Is16;
static struct adl_operand _sym3741_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_s_gX_Is16_mod
static struct adl_operand _sym3739_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3742[] = {
  // mod_s_gX_Is16    (0)
  { "mod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0x98000000,},0, "", 0, 2, 2, 0, 0, _sym3741_operands,0,0,0, 0,&_sym3740,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3743[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_z_gX_Iu16
static adl_instr_attrs _sym3745 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mod_z_gX_Iu16
static struct adl_operand _sym3744_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3746[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_z_gX_Iu16_gX
static adl_instr_attrs _sym3748 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_z_gX_Iu16_gX -> mod_z_gX_Iu16;
static struct adl_operand _sym3749_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_z_gX_Iu16_gX
static struct adl_operand _sym3747_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3750[] = {
  // mod_z_gX_Iu16    (0)
  { "mod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x90000000,},0, "", 0, 2, 2, 0, 0, _sym3749_operands,0,0,0, 0,&_sym3748,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3751_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3752[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_z_gX_Iu16_gX_mod
static adl_instr_attrs _sym3754 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_z_gX_Iu16_gX_mod -> mod_z_gX_Iu16;
static struct adl_operand _sym3755_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_z_gX_Iu16_gX_mod
static struct adl_operand _sym3753_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3756[] = {
  // mod_z_gX_Iu16    (0)
  { "mod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x90000000,},0, "", 0, 2, 2, 0, 0, _sym3755_operands,0,0,0, 0,&_sym3754,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3757_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3758[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mod_z_gX_Iu16_mod
static adl_instr_attrs _sym3760 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mod_z_gX_Iu16_mod -> mod_z_gX_Iu16;
static struct adl_operand _sym3761_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mod_z_gX_Iu16_mod
static struct adl_operand _sym3759_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3762[] = {
  // mod_z_gX_Iu16    (0)
  { "mod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x90000000,},0, "", 0, 2, 2, 0, 0, _sym3761_operands,0,0,0, 0,&_sym3760,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3763[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_s_cc_gZ_gX_gY
static adl_instr_attrs _sym3765 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mpy_s_cc_gZ_gX_gY
static struct adl_operand _sym3764_operands[] = { {139, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{37, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 3, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 4, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3766[] = { &_sym308, &_sym130, &_sym214, &_sym202, &_sym232,  (struct enum_fields *) -1,};

// Instruction mpy_s_cc_gZ_gX_gY_cond
static adl_instr_attrs _sym3768 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_cc_gZ_gX_gY_cond -> mpy_s_cc_gZ_gX_gY;

static bfd_uint64_t _sym3770_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return (operands[0].X_add_number) >> 4; }
static struct adl_operand _sym3769_operands[] = { {139, 0, 0, 0, 0, 0, 0, 0, _sym3770_modifier, 0, 0,0, -1,-1,},{37, 0, 0, 0, 9, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_cc_gZ_gX_gY_cond
static struct adl_operand _sym3767_operands[] = { {350, 0, 0, 0, 24, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 3, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3771[] = {
  // mpy_s_cc_gZ_gX_gY    (0)
  { "mpy_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x30000000,},0, "", 0, 5, 5, 0, 1, _sym3769_operands,0,0,0, 0,&_sym3768,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3772[] = { &_sym306, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mpy_s_cc_gZ_gX_gY_signed
static adl_instr_attrs _sym3774 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_cc_gZ_gX_gY_signed -> mpy_s_cc_gZ_gX_gY;
static struct adl_operand _sym3775_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_cc_gZ_gX_gY_signed
static struct adl_operand _sym3773_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3776[] = {
  // mpy_s_cc_gZ_gX_gY    (0)
  { "mpy_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x30800000,},0, "", 0, 3, 3, 0, 0, _sym3775_operands,0,0,0, 0,&_sym3774,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3777[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mpy_s_cc_gZ_gX_gY_unsigned
static adl_instr_attrs _sym3779 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_cc_gZ_gX_gY_unsigned -> mpy_s_cc_gZ_gX_gY;
static struct adl_operand _sym3780_operands[] = { {60, 2, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_cc_gZ_gX_gY_unsigned
static struct adl_operand _sym3778_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{245, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{248, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3781[] = {
  // mpy_s_cc_gZ_gX_gY    (0)
  { "mpy_s_cc_gZ_gX_gY", 3, 25, 64,  0x1, { 0x0,0x30000000,},0, "", 0, 3, 3, 0, 0, _sym3780_operands,0,0,0, 0,&_sym3779,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3782[] = { &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction mpy_s_gX_Is16
static adl_instr_attrs _sym3784 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mpy_s_gX_Is16
static struct adl_operand _sym3783_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3785[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_s_gX_Is16_gX
static adl_instr_attrs _sym3787 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_gX_Is16_gX -> mpy_s_gX_Is16;
static struct adl_operand _sym3788_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_gX_Is16_gX
static struct adl_operand _sym3786_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3789[] = {
  // mpy_s_gX_Is16    (0)
  { "mpy_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xa8000000,},0, "", 0, 2, 2, 0, 0, _sym3788_operands,0,0,0, 0,&_sym3787,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3790_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3791[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_s_gX_Is16_gX_mpy
static adl_instr_attrs _sym3793 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_gX_Is16_gX_mpy -> mpy_s_gX_Is16;
static struct adl_operand _sym3794_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_gX_Is16_gX_mpy
static struct adl_operand _sym3792_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3795[] = {
  // mpy_s_gX_Is16    (0)
  { "mpy_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xa8000000,},0, "", 0, 2, 2, 0, 0, _sym3794_operands,0,0,0, 0,&_sym3793,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3796_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3797[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_s_gX_Is16_mpy
static adl_instr_attrs _sym3799 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_s_gX_Is16_mpy -> mpy_s_gX_Is16;
static struct adl_operand _sym3800_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_s_gX_Is16_mpy
static struct adl_operand _sym3798_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3801[] = {
  // mpy_s_gX_Is16    (0)
  { "mpy_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xa8000000,},0, "", 0, 2, 2, 0, 0, _sym3800_operands,0,0,0, 0,&_sym3799,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3802[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_z_gX_Iu16
static adl_instr_attrs _sym3804 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mpy_z_gX_Iu16
static struct adl_operand _sym3803_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3805[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_z_gX_Iu16_gX
static adl_instr_attrs _sym3807 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_z_gX_Iu16_gX -> mpy_z_gX_Iu16;
static struct adl_operand _sym3808_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_z_gX_Iu16_gX
static struct adl_operand _sym3806_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3809[] = {
  // mpy_z_gX_Iu16    (0)
  { "mpy_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xa0000000,},0, "", 0, 2, 2, 0, 0, _sym3808_operands,0,0,0, 0,&_sym3807,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3810_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3811[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_z_gX_Iu16_gX_mpy
static adl_instr_attrs _sym3813 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_z_gX_Iu16_gX_mpy -> mpy_z_gX_Iu16;
static struct adl_operand _sym3814_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_z_gX_Iu16_gX_mpy
static struct adl_operand _sym3812_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3815[] = {
  // mpy_z_gX_Iu16    (0)
  { "mpy_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xa0000000,},0, "", 0, 2, 2, 0, 0, _sym3814_operands,0,0,0, 0,&_sym3813,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3816_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3817[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mpy_z_gX_Iu16_mpy
static adl_instr_attrs _sym3819 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mpy_z_gX_Iu16_mpy -> mpy_z_gX_Iu16;
static struct adl_operand _sym3820_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mpy_z_gX_Iu16_mpy
static struct adl_operand _sym3818_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3821[] = {
  // mpy_z_gX_Iu16    (0)
  { "mpy_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xa0000000,},0, "", 0, 2, 2, 0, 0, _sym3820_operands,0,0,0, 0,&_sym3819,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3822[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mvS_aY_asX_opS
static adl_instr_attrs _sym3824 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mvS_aY_asX_opS
static struct adl_operand _sym3823_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{28, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3825[] = { &_sym2, &_sym30,  (struct enum_fields *) -1,};

// Instruction mvS_aY_asX_opS_mv
adl_instr_attr_val _sym3827[] = { { ((uint64_t)(1ULL << instr_opBS)),  0, 0 }, { ((uint64_t)(1ULL << instr_opS)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "mvB_aY_asX_opB_mv" }, { 0, 0, 0 } };
static adl_instr_attrs _sym3828 = { ((uint64_t)(1ULL << instr_opBS)) | ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_inst)) , _sym3827 };

// Shorthand:  mvS_aY_asX_opS_mv -> mvS_aY_asX_opS;
static struct adl_operand _sym3829_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{28, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mvS_aY_asX_opS_mv
static struct adl_operand _sym3826_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{199, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3830[] = {
  // mvS_aY_asX_opS    (0)
  { "mvS_aY_asX_opS", 3, 25, 64,  0x1, { 0x0,0x6000000,},0, "", 0, 2, 2, 0, 0, _sym3829_operands,0,0,0, 0,&_sym3828,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3831[] = { &_sym2, &_sym30,  (struct enum_fields *) -1,};

// Instruction mvS_asY_aX_opS
static adl_instr_attrs _sym3833 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mvS_asY_aX_opS
static struct adl_operand _sym3832_operands[] = { {28, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3834[] = { &_sym30, &_sym2,  (struct enum_fields *) -1,};

// Instruction mvS_asY_aX_opS_mv
adl_instr_attr_val _sym3836[] = { { ((uint64_t)(1ULL << instr_opBS)),  0, 0 }, { ((uint64_t)(1ULL << instr_opS)),  0, 0 }, { ((uint64_t)(1ULL << instr_inst)),  0, "mvB_asY_aX_opB_mv" }, { 0, 0, 0 } };
static adl_instr_attrs _sym3837 = { ((uint64_t)(1ULL << instr_opBS)) | ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_inst)) , _sym3836 };

// Shorthand:  mvS_asY_aX_opS_mv -> mvS_asY_aX_opS;
static struct adl_operand _sym3838_operands[] = { {2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{28, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mvS_asY_aX_opS_mv
static struct adl_operand _sym3835_operands[] = { {199, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{195, 1, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3839[] = {
  // mvS_asY_aX_opS    (0)
  { "mvS_asY_aX_opS", 3, 25, 64,  0x1, { 0x0,0x6200000,},0, "", 0, 2, 2, 0, 0, _sym3838_operands,0,0,0, 0,&_sym3837,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3840[] = { &_sym30, &_sym2,  (struct enum_fields *) -1,};

// Instruction mv_aX_sp
static adl_instr_attrs _sym3842 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_aX_sp
static struct adl_operand _sym3841_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3843[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction mv_cc_Iu4
static adl_instr_attrs _sym3845 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_Iu4
static struct adl_operand _sym3844_operands[] = { {94, 0, 0, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3846[] = { 0,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_div
static adl_instr_attrs _sym3848 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_div
static struct adl_operand _sym3847_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3849[] = { &_sym128, &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_00
static adl_instr_attrs _sym3851 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_00
static struct adl_operand _sym3850_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3852[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_01
static adl_instr_attrs _sym3854 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_01
static struct adl_operand _sym3853_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3855[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_10
static adl_instr_attrs _sym3857 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_10
static struct adl_operand _sym3856_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3858[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_11
static adl_instr_attrs _sym3860 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_11
static struct adl_operand _sym3859_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3861[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_mv_cc_gX_1
static adl_instr_attrs _sym3863 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_mv_cc_gX_1
static struct adl_operand _sym3862_operands[] = { {53, 0, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3864[] = { &_sym190,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_mv_cc_gX_2
static adl_instr_attrs _sym3866 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_mv_cc_gX_2
static struct adl_operand _sym3865_operands[] = { {54, 0, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3867[] = { &_sym194,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_mv_gX_cc_1
static adl_instr_attrs _sym3869 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_mv_gX_cc_1
static struct adl_operand _sym3868_operands[] = { {61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3870[] = { &_sym216,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_gX_mv_gX_cc_2
static adl_instr_attrs _sym3872 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_gX_mv_gX_cc_2
static struct adl_operand _sym3871_operands[] = { {63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3873[] = { &_sym222,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_mod
static adl_instr_attrs _sym3875 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_mod
static struct adl_operand _sym3874_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3876[] = { &_sym128, &_sym186,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_sp_1
static adl_instr_attrs _sym3878 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_sp_1
static struct adl_operand _sym3877_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3879[] = { &_sym128, &_sym216,  (struct enum_fields *) -1,};

// Instruction mv_cc_gY_sp_2
static adl_instr_attrs _sym3881 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_gY_sp_2
static struct adl_operand _sym3880_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3882[] = { &_sym128, &_sym222,  (struct enum_fields *) -1,};

// Instruction mv_cc_sp_gX_1
static adl_instr_attrs _sym3884 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_sp_gX_1
static struct adl_operand _sym3883_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3885[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction mv_cc_sp_gX_2
static adl_instr_attrs _sym3887 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_sp_gX_2
static struct adl_operand _sym3886_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3888[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction mv_cc_sp_sp
static adl_instr_attrs _sym3890 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_cc_sp_sp
static struct adl_operand _sym3889_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3891[] = { &_sym128,  (struct enum_fields *) -1,};

// Instruction mv_s_gX_Is16_0
static adl_instr_attrs _sym3893 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_s_gX_Is16_0
static struct adl_operand _sym3892_operands[] = { {61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3894[] = { &_sym216, 0,  (struct enum_fields *) -1,};

// Instruction mv_s_gX_Is16_0_mv
static adl_instr_attrs _sym3896 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mv_s_gX_Is16_0_mv -> mv_s_gX_Is16_0;
static struct adl_operand _sym3897_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_s_gX_Is16_0_mv
static struct adl_operand _sym3895_operands[] = { {251, 0, ADL_REGISTER, 0, 24, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3898[] = {
  // mv_s_gX_Is16_0    (0)
  { "mv_s_gX_Is16_0", 3, 25, 64,  0x1, { 0x0,0x68000000,},0, "", 0, 2, 2, 0, 0, _sym3897_operands,0,0,0, 0,&_sym3896,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3899[] = { &_sym216, 0,  (struct enum_fields *) -1,};

// Instruction mv_s_gX_Is16_1
static adl_instr_attrs _sym3901 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_s_gX_Is16_1
static struct adl_operand _sym3900_operands[] = { {63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3902[] = { &_sym222, 0,  (struct enum_fields *) -1,};

// Instruction mv_s_gX_Is16_1_mv
static adl_instr_attrs _sym3904 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mv_s_gX_Is16_1_mv -> mv_s_gX_Is16_1;
static struct adl_operand _sym3905_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_s_gX_Is16_1_mv
static struct adl_operand _sym3903_operands[] = { {252, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3906[] = {
  // mv_s_gX_Is16_1    (0)
  { "mv_s_gX_Is16_1", 3, 25, 64,  0x1, { 0x0,0x68000400,},0, "", 0, 2, 2, 0, 0, _sym3905_operands,0,0,0, 0,&_sym3904,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3907[] = { &_sym222, 0,  (struct enum_fields *) -1,};

// Instruction mv_sp_Iu17_opS_LO
static adl_instr_attrs _sym3909 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_LO_mv_sp_Iu17)) , 0 };

// Instruction mv_sp_Iu17_opS_LO
static struct adl_operand _sym3908_operands[] = { {80, 0, ADL_ABSOLUTE, 0, 8, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3910[] = { 0,  (struct enum_fields *) -1,};

// Instruction mv_sp_aX
static adl_instr_attrs _sym3912 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_sp_aX
static struct adl_operand _sym3911_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3913[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction mv_z_gX_Iu16_0
static adl_instr_attrs _sym3915 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_z_gX_Iu16_0
static struct adl_operand _sym3914_operands[] = { {61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3916[] = { &_sym216, 0,  (struct enum_fields *) -1,};

// Instruction mv_z_gX_Iu16_0_mv
static adl_instr_attrs _sym3918 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mv_z_gX_Iu16_0_mv -> mv_z_gX_Iu16_0;
static struct adl_operand _sym3919_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 0, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_z_gX_Iu16_0_mv
static struct adl_operand _sym3917_operands[] = { {251, 0, ADL_REGISTER, 0, 24, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3920[] = {
  // mv_z_gX_Iu16_0    (0)
  { "mv_z_gX_Iu16_0", 3, 25, 64,  0x1, { 0x0,0x60000000,},0, "", 0, 2, 2, 0, 0, _sym3919_operands,0,0,0, 0,&_sym3918,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3921[] = { &_sym216, 0,  (struct enum_fields *) -1,};

// Instruction mv_z_gX_Iu16_1
static adl_instr_attrs _sym3923 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction mv_z_gX_Iu16_1
static struct adl_operand _sym3922_operands[] = { {63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3924[] = { &_sym222, 0,  (struct enum_fields *) -1,};

// Instruction mv_z_gX_Iu16_1_mv
static adl_instr_attrs _sym3926 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  mv_z_gX_Iu16_1_mv -> mv_z_gX_Iu16_1;
static struct adl_operand _sym3927_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 0, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction mv_z_gX_Iu16_1_mv
static struct adl_operand _sym3925_operands[] = { {252, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3928[] = {
  // mv_z_gX_Iu16_1    (0)
  { "mv_z_gX_Iu16_1", 3, 25, 64,  0x1, { 0x0,0x60000400,},0, "", 0, 2, 2, 0, 0, _sym3927_operands,0,0,0, 0,&_sym3926,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3929[] = { &_sym222, 0,  (struct enum_fields *) -1,};

// Instruction nop
static adl_instr_attrs _sym3931 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction nop
static struct adl_operand _sym3930_operands[] = {  0 };
static struct enum_fields *_sym3932[] = {  (struct enum_fields *) -1,};

// Instruction not_cc_gY_gX
static adl_instr_attrs _sym3934 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction not_cc_gY_gX
static struct adl_operand _sym3933_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3935[] = { &_sym128, &_sym186, &_sym188,  (struct enum_fields *) -1,};

// Instruction null
static adl_instr_attrs _sym3937 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_null)) , 0 };

// Instruction null
static struct adl_operand _sym3936_operands[] = {  0 };
static struct enum_fields *_sym3938[] = {  (struct enum_fields *) -1,};

// Instruction opS_nop
static adl_instr_attrs _sym3940 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction opS_nop
static struct adl_operand _sym3939_operands[] = {  0 };
static struct enum_fields *_sym3941[] = {  (struct enum_fields *) -1,};

// Instruction or_H
static adl_instr_attrs _sym3943 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction or_H
static struct adl_operand _sym3942_operands[] = {  0 };
static struct enum_fields *_sym3944[] = {  (struct enum_fields *) -1,};

// Instruction or_cc_gZ_gY_gX
static adl_instr_attrs _sym3946 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction or_cc_gZ_gY_gX
static struct adl_operand _sym3945_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3947[] = { &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction or_gX_Iu16
static adl_instr_attrs _sym3949 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction or_gX_Iu16
static struct adl_operand _sym3948_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{75, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3950[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction or_gX_gX_Iu16
static adl_instr_attrs _sym3952 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  or_gX_gX_Iu16 -> or_gX_Iu16;
static struct adl_operand _sym3953_operands[] = { {75, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction or_gX_gX_Iu16
static struct adl_operand _sym3951_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{270, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3954[] = {
  // or_gX_Iu16    (0)
  { "or_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x20000000,},0, "", 0, 2, 2, 0, 0, _sym3953_operands,0,0,0, 0,&_sym3952,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3955_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3956[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction pop_gX
static adl_instr_attrs _sym3958 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) , 0 };

// Shorthand:  pop_gX -> ld_u_gX_sp_Is;

static bfd_uint64_t _sym3960_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - 1; }
static struct adl_operand _sym3959_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym3960_modifier, 0, 0,0, -1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction pop_gX
static struct adl_operand _sym3957_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3961[] = {
  // ld_u_gX_sp_Is    (0)
  { "ld_u_gX_sp_Is", 3, 25, 64,  0x1, { 0x0,0x2200000,},0, "", 0, 2, 2, 0, 0, _sym3959_operands,0,0,0, 0,&_sym3958,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3962[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction popm_as
static adl_instr_attrs _sym3964 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_var)) , 0 };

// Instruction popm_as
static struct adl_operand _sym3963_operands[] = { {10, 0, 0, 0, 24, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{17, 1, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{18, 2, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{19, 3, 0, 0, 21, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{20, 4, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{21, 5, 0, 0, 19, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{22, 6, 0, 0, 18, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{23, 7, 0, 0, 17, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{24, 8, 0, 0, 16, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{25, 9, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{11, 10, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{12, 11, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{13, 12, 0, 0, 12, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{14, 13, 0, 0, 11, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{15, 14, 0, 0, 10, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{16, 15, 0, 0, 9, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3965[] = { &_sym32, &_sym36, &_sym64, &_sym68, &_sym72, &_sym76, &_sym80, &_sym84, &_sym88, &_sym92, &_sym38, &_sym42, &_sym46, &_sym50, &_sym54, &_sym58,  (struct enum_fields *) -1,};

// Instruction popm_g
static adl_instr_attrs _sym3967 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_load)) | ((uint64_t)(1ULL << instr_var)) , 0 };

// Instruction popm_g
static struct adl_operand _sym3966_operands[] = { {41, 0, 0, 0, 24, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{44, 1, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{45, 2, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{46, 3, 0, 0, 21, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{47, 4, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{48, 5, 0, 0, 19, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{49, 6, 0, 0, 18, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{50, 7, 0, 0, 17, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{51, 8, 0, 0, 16, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{52, 9, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{42, 10, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{43, 11, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3968[] = { &_sym138, &_sym142, &_sym154, &_sym158, &_sym162, &_sym166, &_sym170, &_sym174, &_sym178, &_sym182, &_sym144, &_sym148,  (struct enum_fields *) -1,};

// Instruction pushm_as
static adl_instr_attrs _sym3970 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_var)) , 0 };

// Instruction pushm_as
static struct adl_operand _sym3969_operands[] = { {10, 0, 0, 0, 24, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{17, 1, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{18, 2, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{19, 3, 0, 0, 21, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{20, 4, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{21, 5, 0, 0, 19, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{22, 6, 0, 0, 18, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{23, 7, 0, 0, 17, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{24, 8, 0, 0, 16, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{25, 9, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{11, 10, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{12, 11, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{13, 12, 0, 0, 12, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{14, 13, 0, 0, 11, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{15, 14, 0, 0, 10, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{16, 15, 0, 0, 9, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3971[] = { &_sym32, &_sym36, &_sym64, &_sym68, &_sym72, &_sym76, &_sym80, &_sym84, &_sym88, &_sym92, &_sym38, &_sym42, &_sym46, &_sym50, &_sym54, &_sym58,  (struct enum_fields *) -1,};

// Instruction pushm_g
static adl_instr_attrs _sym3973 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_var)) , 0 };

// Instruction pushm_g
static struct adl_operand _sym3972_operands[] = { {41, 0, 0, 0, 24, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{44, 1, 0, 0, 23, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{45, 2, 0, 0, 22, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{46, 3, 0, 0, 21, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{47, 4, 0, 0, 20, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{48, 5, 0, 0, 19, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{49, 6, 0, 0, 18, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{50, 7, 0, 0, 17, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{51, 8, 0, 0, 16, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{52, 9, 0, 0, 15, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{42, 10, 0, 0, 14, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{43, 11, 0, 0, 13, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3974[] = { &_sym138, &_sym142, &_sym154, &_sym158, &_sym162, &_sym166, &_sym170, &_sym174, &_sym178, &_sym182, &_sym144, &_sym148,  (struct enum_fields *) -1,};

// Instruction rdiv_s_gX_Is16
static adl_instr_attrs _sym3976 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rdiv_s_gX_Is16
static struct adl_operand _sym3975_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3977[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_s_gX_Is16_gX
static adl_instr_attrs _sym3979 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_s_gX_Is16_gX -> rdiv_s_gX_Is16;
static struct adl_operand _sym3980_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_s_gX_Is16_gX
static struct adl_operand _sym3978_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3981[] = {
  // rdiv_s_gX_Is16    (0)
  { "rdiv_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xd8000000,},0, "", 0, 2, 2, 0, 0, _sym3980_operands,0,0,0, 0,&_sym3979,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3982_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3983[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_s_gX_Is16_gX_rdiv
static adl_instr_attrs _sym3985 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_s_gX_Is16_gX_rdiv -> rdiv_s_gX_Is16;
static struct adl_operand _sym3986_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_s_gX_Is16_gX_rdiv
static struct adl_operand _sym3984_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3987[] = {
  // rdiv_s_gX_Is16    (0)
  { "rdiv_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xd8000000,},0, "", 0, 2, 2, 0, 0, _sym3986_operands,0,0,0, 0,&_sym3985,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym3988_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym3989[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_s_gX_Is16_rdiv
static adl_instr_attrs _sym3991 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_s_gX_Is16_rdiv -> rdiv_s_gX_Is16;
static struct adl_operand _sym3992_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_s_gX_Is16_rdiv
static struct adl_operand _sym3990_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym3993[] = {
  // rdiv_s_gX_Is16    (0)
  { "rdiv_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xd8000000,},0, "", 0, 2, 2, 0, 0, _sym3992_operands,0,0,0, 0,&_sym3991,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym3994[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_z_gX_Iu16
static adl_instr_attrs _sym3996 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rdiv_z_gX_Iu16
static struct adl_operand _sym3995_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym3997[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_z_gX_Iu16_gX
static adl_instr_attrs _sym3999 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_z_gX_Iu16_gX -> rdiv_z_gX_Iu16;
static struct adl_operand _sym4000_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_z_gX_Iu16_gX
static struct adl_operand _sym3998_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4001[] = {
  // rdiv_z_gX_Iu16    (0)
  { "rdiv_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xd0000000,},0, "", 0, 2, 2, 0, 0, _sym4000_operands,0,0,0, 0,&_sym3999,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4002_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4003[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_z_gX_Iu16_gX_rdiv
static adl_instr_attrs _sym4005 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_z_gX_Iu16_gX_rdiv -> rdiv_z_gX_Iu16;
static struct adl_operand _sym4006_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_z_gX_Iu16_gX_rdiv
static struct adl_operand _sym4004_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4007[] = {
  // rdiv_z_gX_Iu16    (0)
  { "rdiv_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xd0000000,},0, "", 0, 2, 2, 0, 0, _sym4006_operands,0,0,0, 0,&_sym4005,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4008_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4009[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rdiv_z_gX_Iu16_rdiv
static adl_instr_attrs _sym4011 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rdiv_z_gX_Iu16_rdiv -> rdiv_z_gX_Iu16;
static struct adl_operand _sym4012_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rdiv_z_gX_Iu16_rdiv
static struct adl_operand _sym4010_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4013[] = {
  // rdiv_z_gX_Iu16    (0)
  { "rdiv_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xd0000000,},0, "", 0, 2, 2, 0, 0, _sym4012_operands,0,0,0, 0,&_sym4011,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4014[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_s_gX_Is16
static adl_instr_attrs _sym4016 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rmod_s_gX_Is16
static struct adl_operand _sym4015_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4017[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_s_gX_Is16_gX
static adl_instr_attrs _sym4019 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_s_gX_Is16_gX -> rmod_s_gX_Is16;
static struct adl_operand _sym4020_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_s_gX_Is16_gX
static struct adl_operand _sym4018_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4021[] = {
  // rmod_s_gX_Is16    (0)
  { "rmod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xe8000000,},0, "", 0, 2, 2, 0, 0, _sym4020_operands,0,0,0, 0,&_sym4019,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4022_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4023[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_s_gX_Is16_gX_rmod
static adl_instr_attrs _sym4025 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_s_gX_Is16_gX_rmod -> rmod_s_gX_Is16;
static struct adl_operand _sym4026_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_s_gX_Is16_gX_rmod
static struct adl_operand _sym4024_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4027[] = {
  // rmod_s_gX_Is16    (0)
  { "rmod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xe8000000,},0, "", 0, 2, 2, 0, 0, _sym4026_operands,0,0,0, 0,&_sym4025,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4028_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4029[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_s_gX_Is16_rmod
static adl_instr_attrs _sym4031 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_s_gX_Is16_rmod -> rmod_s_gX_Is16;
static struct adl_operand _sym4032_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_s_gX_Is16_rmod
static struct adl_operand _sym4030_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4033[] = {
  // rmod_s_gX_Is16    (0)
  { "rmod_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xe8000000,},0, "", 0, 2, 2, 0, 0, _sym4032_operands,0,0,0, 0,&_sym4031,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4034[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_z_gX_Iu16
static adl_instr_attrs _sym4036 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rmod_z_gX_Iu16
static struct adl_operand _sym4035_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4037[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_z_gX_Iu16_gX
static adl_instr_attrs _sym4039 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_z_gX_Iu16_gX -> rmod_z_gX_Iu16;
static struct adl_operand _sym4040_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_z_gX_Iu16_gX
static struct adl_operand _sym4038_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4041[] = {
  // rmod_z_gX_Iu16    (0)
  { "rmod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xe0000000,},0, "", 0, 2, 2, 0, 0, _sym4040_operands,0,0,0, 0,&_sym4039,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4042_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4043[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_z_gX_Iu16_gX_rmod
static adl_instr_attrs _sym4045 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_z_gX_Iu16_gX_rmod -> rmod_z_gX_Iu16;
static struct adl_operand _sym4046_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_z_gX_Iu16_gX_rmod
static struct adl_operand _sym4044_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4047[] = {
  // rmod_z_gX_Iu16    (0)
  { "rmod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xe0000000,},0, "", 0, 2, 2, 0, 0, _sym4046_operands,0,0,0, 0,&_sym4045,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4048_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4049[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rmod_z_gX_Iu16_rmod
static adl_instr_attrs _sym4051 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rmod_z_gX_Iu16_rmod -> rmod_z_gX_Iu16;
static struct adl_operand _sym4052_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rmod_z_gX_Iu16_rmod
static struct adl_operand _sym4050_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4053[] = {
  // rmod_z_gX_Iu16    (0)
  { "rmod_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xe0000000,},0, "", 0, 2, 2, 0, 0, _sym4052_operands,0,0,0, 0,&_sym4051,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4054[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16
static adl_instr_attrs _sym4056 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rsub_s_gX_Is16
static struct adl_operand _sym4055_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4057[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_gX
static adl_instr_attrs _sym4059 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_gX -> rsub_s_gX_Is16;
static struct adl_operand _sym4060_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_gX
static struct adl_operand _sym4058_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4061[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000000,},0, "", 0, 2, 2, 0, 0, _sym4060_operands,0,0,0, 0,&_sym4059,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4062_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4063[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_gX_rsub
static adl_instr_attrs _sym4065 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_gX_rsub -> rsub_s_gX_Is16;
static struct adl_operand _sym4066_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_gX_rsub
static struct adl_operand _sym4064_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4067[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000000,},0, "", 0, 2, 2, 0, 0, _sym4066_operands,0,0,0, 0,&_sym4065,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4068_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4069[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_rsub
static adl_instr_attrs _sym4071 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_rsub -> rsub_s_gX_Is16;
static struct adl_operand _sym4072_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_rsub
static struct adl_operand _sym4070_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4073[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000000,},0, "", 0, 2, 2, 0, 0, _sym4072_operands,0,0,0, 0,&_sym4071,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4074[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_sp
static adl_instr_attrs _sym4076 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_sp -> rsub_s_gX_Is16;
static struct adl_operand _sym4077_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_sp
static struct adl_operand _sym4075_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4078[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000700,},0, "", 0, 1, 1, 0, 0, _sym4077_operands,0,0,0, 0,&_sym4076,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4079[] = { 0,  (struct enum_fields *) -1,};

// Instruction rsub_s_gX_Is16_sp_rsub
static adl_instr_attrs _sym4081 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_s_gX_Is16_sp_rsub -> rsub_s_gX_Is16;
static struct adl_operand _sym4082_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_s_gX_Is16_sp_rsub
static struct adl_operand _sym4080_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4083[] = {
  // rsub_s_gX_Is16    (0)
  { "rsub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xf8000700,},0, "", 0, 1, 1, 0, 0, _sym4082_operands,0,0,0, 0,&_sym4081,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4084[] = { 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16
static adl_instr_attrs _sym4086 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction rsub_z_gX_Iu16
static struct adl_operand _sym4085_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4087[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_gX
static adl_instr_attrs _sym4089 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_gX -> rsub_z_gX_Iu16;
static struct adl_operand _sym4090_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_gX
static struct adl_operand _sym4088_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4091[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000000,},0, "", 0, 2, 2, 0, 0, _sym4090_operands,0,0,0, 0,&_sym4089,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4092_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4093[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_gX_rsub
static adl_instr_attrs _sym4095 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_gX_rsub -> rsub_z_gX_Iu16;
static struct adl_operand _sym4096_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_gX_rsub
static struct adl_operand _sym4094_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4097[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000000,},0, "", 0, 2, 2, 0, 0, _sym4096_operands,0,0,0, 0,&_sym4095,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4098_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4099[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_rsub
static adl_instr_attrs _sym4101 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_rsub -> rsub_z_gX_Iu16;
static struct adl_operand _sym4102_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_rsub
static struct adl_operand _sym4100_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4103[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000000,},0, "", 0, 2, 2, 0, 0, _sym4102_operands,0,0,0, 0,&_sym4101,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4104[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_sp
static adl_instr_attrs _sym4106 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_sp -> rsub_z_gX_Iu16;
static struct adl_operand _sym4107_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_sp
static struct adl_operand _sym4105_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4108[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000700,},0, "", 0, 1, 1, 0, 0, _sym4107_operands,0,0,0, 0,&_sym4106,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4109[] = { 0,  (struct enum_fields *) -1,};

// Instruction rsub_z_gX_Iu16_sp_rsub
static adl_instr_attrs _sym4111 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  rsub_z_gX_Iu16_sp_rsub -> rsub_z_gX_Iu16;
static struct adl_operand _sym4112_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction rsub_z_gX_Iu16_sp_rsub
static struct adl_operand _sym4110_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4113[] = {
  // rsub_z_gX_Iu16    (0)
  { "rsub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xf0000700,},0, "", 0, 1, 1, 0, 0, _sym4112_operands,0,0,0, 0,&_sym4111,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4114[] = { 0,  (struct enum_fields *) -1,};

// Instruction set_creg_creg_Iu4
static adl_instr_attrs _sym4116 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_ctrl)) , 0 };

// Instruction set_creg_creg_Iu4
static struct adl_operand _sym4115_operands[] = { {38, 0, 0, 0, 13, 0ull, 0xffull, 0ull, 0, 0, 0, 0,-1,-1,},{93, 1, 0, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4117[] = { 0, 0,  (struct enum_fields *) -1,};

// Instruction sl_cc_gZ_gY_gX
static adl_instr_attrs _sym4119 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sl_cc_gZ_gY_gX
static struct adl_operand _sym4118_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4120[] = { &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction sl_gY_gX_I5
static adl_instr_attrs _sym4122 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sl_gY_gX_I5
static struct adl_operand _sym4121_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 1, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{95, 2, 0, 0, 12, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4123[] = { &_sym186, &_sym188, 0,  (struct enum_fields *) -1,};

// Instruction sr_s_cc_gZ_gX_gY
static adl_instr_attrs _sym4125 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sr_s_cc_gZ_gX_gY
static struct adl_operand _sym4124_operands[] = { {139, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{37, 1, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 3, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 4, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4126[] = { &_sym304, &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction sr_s_gY_gX_I
static adl_instr_attrs _sym4128 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sr_s_gY_gX_I
static struct adl_operand _sym4127_operands[] = { {140, 0, 0, 0, 4, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{95, 3, 0, 0, 12, 0ull, 0x1full, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4129[] = { &_sym304, &_sym186, &_sym188, 0,  (struct enum_fields *) -1,};

// Instruction st_Iu17_H_opS_LO
static adl_instr_attrs _sym4131 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_LO_st_Iu17_H)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_Iu17_H_opS_LO
static struct adl_operand _sym4130_operands[] = { {82, 0, ADL_ABSOLUTE, 0, 4, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4132[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_Iu17_gX_opS_LO
static adl_instr_attrs _sym4134 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_opS_LO_st_Iu17_gX)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_Iu17_gX_opS_LO
static struct adl_operand _sym4133_operands[] = { {82, 0, ADL_ABSOLUTE, 0, 4, 0ull, 0x1ffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4135[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_Is8_H
static adl_instr_attrs _sym4137 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_Is8_H
static struct adl_operand _sym4136_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4138[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_aY_Is8_H_minus
static adl_instr_attrs _sym4140 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_aY_Is8_H_minus -> st_aY_Is8_H;

static bfd_uint64_t _sym4142_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym4141_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4142_modifier, 0, 0,0, -1,-1,},};

// Instruction st_aY_Is8_H_minus
static struct adl_operand _sym4139_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym4143[] = {
  // st_aY_Is8_H    (0)
  { "st_aY_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5000600,},0, "", 0, 2, 2, 0, 0, _sym4141_operands,0,0,0, 0,&_sym4140,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4144[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_aY_Is8_H_zero
static adl_instr_attrs _sym4146 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_aY_Is8_H_zero -> st_aY_Is8_H;
static struct adl_operand _sym4147_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_Is8_H_zero
static struct adl_operand _sym4145_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4148[] = {
  // st_aY_Is8_H    (0)
  { "st_aY_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5000600,},0, "", 0, 1, 1, 0, 0, _sym4147_operands,0,0,0, 0,&_sym4146,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4149[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction st_aY_Is8_u_gX
static adl_instr_attrs _sym4151 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_Is8_u_gX
static struct adl_operand _sym4150_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4152[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction st_aY_aZ_H
static adl_instr_attrs _sym4154 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_aZ_H
static struct adl_operand _sym4153_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4155[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_aY_aZ_u_gX
static adl_instr_attrs _sym4157 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_aZ_u_gX
static struct adl_operand _sym4156_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4158[] = { &_sym2, &_sym18, &_sym24, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_H
static adl_instr_attrs _sym4160 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_u_Is8_H
static struct adl_operand _sym4159_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4161[] = { &_sym10, 0,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_gX
static adl_instr_attrs _sym4163 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_u_Is8_gX
static struct adl_operand _sym4162_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4164[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_gX_minus
static adl_instr_attrs _sym4166 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_aY_u_Is8_gX_minus -> st_aY_u_Is8_gX;

static bfd_uint64_t _sym4168_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym4169_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }
static struct adl_operand _sym4167_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym4168_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4169_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_gX_minus
static struct adl_operand _sym4165_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 1, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4170[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5000000,},0, "", 0, 4, 4, 0, 0, _sym4167_operands,0,0,0, 0,&_sym4166,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4171[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_gX_plus
static adl_instr_attrs _sym4173 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_aY_u_Is8_gX_plus -> st_aY_u_Is8_gX;

static bfd_uint64_t _sym4175_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym4176_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym4174_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym4175_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4176_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_gX_plus
static struct adl_operand _sym4172_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4177[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5000000,},0, "", 0, 4, 4, 0, 0, _sym4174_operands,0,0,0, 0,&_sym4173,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4178[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_gX_zero
static adl_instr_attrs _sym4180 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_aY_u_Is8_gX_zero -> st_aY_u_Is8_gX;
static struct adl_operand _sym4181_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_gX_zero
static struct adl_operand _sym4179_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4182[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5000000,},0, "", 0, 2, 2, 0, 0, _sym4181_operands,0,0,0, 0,&_sym4180,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4183[] = { &_sym2, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_u_gX
static adl_instr_attrs _sym4185 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_aY_u_Is8_u_gX
static struct adl_operand _sym4184_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4186[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_u_gX_minus
static adl_instr_attrs _sym4188 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_aY_u_Is8_u_gX_minus -> st_aY_u_Is8_u_gX;

static bfd_uint64_t _sym4190_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym4191_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }
static struct adl_operand _sym4189_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym4190_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4191_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_u_gX_minus
static struct adl_operand _sym4187_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 1, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4192[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5200000,},0, "", 0, 4, 4, 0, 0, _sym4189_operands,0,0,0, 0,&_sym4188,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4193[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_u_gX_plus
static adl_instr_attrs _sym4195 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_aY_u_Is8_u_gX_plus -> st_aY_u_Is8_u_gX;

static bfd_uint64_t _sym4197_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym4198_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym4196_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym4197_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4198_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_u_gX_plus
static struct adl_operand _sym4194_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4199[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5200000,},0, "", 0, 4, 4, 0, 0, _sym4196_operands,0,0,0, 0,&_sym4195,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4200[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_aY_u_Is8_u_gX_zero
static adl_instr_attrs _sym4202 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_aY_u_Is8_u_gX_zero -> st_aY_u_Is8_u_gX;
static struct adl_operand _sym4203_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_aY_u_Is8_u_gX_zero
static struct adl_operand _sym4201_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4204[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5200000,},0, "", 0, 2, 2, 0, 0, _sym4203_operands,0,0,0, 0,&_sym4202,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4205[] = { &_sym2, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_line_aY_u_Is8_gX_minus
static adl_instr_attrs _sym4207 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_aY_u_Is8_gX_minus -> st_aY_u_Is8_gX;

static bfd_uint64_t _sym4209_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym4208_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4209_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_aY_u_Is8_gX_minus
static struct adl_operand _sym4206_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4210[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5800000,},0, "", 0, 3, 3, 0, 0, _sym4208_operands,0,0,0, 0,&_sym4207,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4211[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_line_aY_u_Is8_gX_plus
static adl_instr_attrs _sym4213 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_aY_u_Is8_gX_plus -> st_aY_u_Is8_gX;
static struct adl_operand _sym4214_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_aY_u_Is8_gX_plus
static struct adl_operand _sym4212_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4215[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x1, { 0x0,0x5800000,},0, "", 0, 3, 3, 0, 0, _sym4214_operands,0,0,0, 0,&_sym4213,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4216[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_line_aY_u_Is8_u_gX_minus
static adl_instr_attrs _sym4218 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_aY_u_Is8_u_gX_minus -> st_aY_u_Is8_u_gX;

static bfd_uint64_t _sym4220_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym4219_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4220_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_aY_u_Is8_u_gX_minus
static struct adl_operand _sym4217_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4221[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5a00000,},0, "", 0, 3, 3, 0, 0, _sym4219_operands,0,0,0, 0,&_sym4218,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4222[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_line_aY_u_Is8_u_gX_plus
static adl_instr_attrs _sym4224 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_line_aY_u_Is8_u_gX_plus -> st_aY_u_Is8_u_gX;
static struct adl_operand _sym4225_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_line_aY_u_Is8_u_gX_plus
static struct adl_operand _sym4223_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4226[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5a00000,},0, "", 0, 3, 3, 0, 0, _sym4225_operands,0,0,0, 0,&_sym4224,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4227[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_H
static adl_instr_attrs _sym4229 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_sp_Is10_H
static struct adl_operand _sym4228_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4230[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_H_minus
static adl_instr_attrs _sym4232 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_sp_Is10_H_minus -> st_sp_Is10_H;

static bfd_uint64_t _sym4234_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym4233_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym4234_modifier, 0, 0,0, -1,-1,},};

// Instruction st_sp_Is10_H_minus
static struct adl_operand _sym4231_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym4235[] = {
  // st_sp_Is10_H    (0)
  { "st_sp_Is10_H", 3, 25, 64,  0x1, { 0x0,0x3000600,},0, "", 0, 1, 1, 0, 0, _sym4233_operands,0,0,0, 0,&_sym4232,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4236[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_H_zero
static adl_instr_attrs _sym4238 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_sp_Is10_H_zero -> st_sp_Is10_H;
static struct adl_operand _sym4239_operands[] = {  0 };

// Instruction st_sp_Is10_H_zero
static struct adl_operand _sym4237_operands[] = {  0 };
static struct adl_opcode _sym4240[] = {
  // st_sp_Is10_H    (0)
  { "st_sp_Is10_H", 3, 25, 64,  0x1, { 0x0,0x3000600,},0, "", 0, 0, 0, 0, 0, _sym4239_operands,0,0,0, 0,&_sym4238,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4241[] = {  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_gX
static adl_instr_attrs _sym4243 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_sp_Is10_gX
static struct adl_operand _sym4242_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4244[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_gX_minus
static adl_instr_attrs _sym4246 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_sp_Is10_gX_minus -> st_sp_Is10_gX;

static bfd_uint64_t _sym4248_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym4247_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym4248_modifier, 0, 0,0, -1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_sp_Is10_gX_minus
static struct adl_operand _sym4245_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4249[] = {
  // st_sp_Is10_gX    (0)
  { "st_sp_Is10_gX", 3, 25, 64,  0x1, { 0x0,0x3000000,},0, "", 0, 2, 2, 0, 0, _sym4247_operands,0,0,0, 0,&_sym4246,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4250[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_sp_Is10_gX_zero
static adl_instr_attrs _sym4252 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_sp_Is10_gX_zero -> st_sp_Is10_gX;
static struct adl_operand _sym4253_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_sp_Is10_gX_zero
static struct adl_operand _sym4251_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4254[] = {
  // st_sp_Is10_gX    (0)
  { "st_sp_Is10_gX", 3, 25, 64,  0x1, { 0x0,0x3000000,},0, "", 0, 1, 1, 0, 0, _sym4253_operands,0,0,0, 0,&_sym4252,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4255[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_H
static adl_instr_attrs _sym4257 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_Is8_H
static struct adl_operand _sym4256_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4258[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_H_minus
static adl_instr_attrs _sym4260 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_Is8_H_minus -> st_u_aY_Is8_H;

static bfd_uint64_t _sym4262_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym4261_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4262_modifier, 0, 0,0, -1,-1,},};

// Instruction st_u_aY_Is8_H_minus
static struct adl_operand _sym4259_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym4263[] = {
  // st_u_aY_Is8_H    (0)
  { "st_u_aY_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5200600,},0, "", 0, 2, 2, 0, 0, _sym4261_operands,0,0,0, 0,&_sym4260,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4264[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_H_zero
static adl_instr_attrs _sym4266 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_Is8_H_zero -> st_u_aY_Is8_H;
static struct adl_operand _sym4267_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_H_zero
static struct adl_operand _sym4265_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4268[] = {
  // st_u_aY_Is8_H    (0)
  { "st_u_aY_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5200600,},0, "", 0, 1, 1, 0, 0, _sym4267_operands,0,0,0, 0,&_sym4266,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4269[] = { &_sym2,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX
static adl_instr_attrs _sym4271 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_Is8_u_gX
static struct adl_operand _sym4270_operands[] = { {115, 0, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{2, 1, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 2, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4272[] = { 0, &_sym10, 0, &_sym232,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX_line_minus
static adl_instr_attrs _sym4274 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_Is8_u_gX_line_minus -> st_u_aY_Is8_u_gX;

static bfd_uint64_t _sym4276_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym4275_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4276_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_u_gX_line_minus
static struct adl_operand _sym4273_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4277[] = {
  // st_u_aY_Is8_u_gX    (0)
  { "st_u_aY_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5e00000,},0, "", 0, 3, 3, 0, 0, _sym4275_operands,0,0,0, 0,&_sym4274,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4278[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX_line_plus
static adl_instr_attrs _sym4280 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_Is8_u_gX_line_plus -> st_u_aY_Is8_u_gX;
static struct adl_operand _sym4281_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_u_gX_line_plus
static struct adl_operand _sym4279_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{307, 1, ADL_EXT_SIGNED, 0, 24, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4282[] = {
  // st_u_aY_Is8_u_gX    (0)
  { "st_u_aY_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5e00000,},0, "", 0, 3, 3, 0, 0, _sym4281_operands,0,0,0, 0,&_sym4280,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4283[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX_minus
static adl_instr_attrs _sym4285 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_u_aY_Is8_u_gX_minus -> st_u_aY_Is8_u_gX;

static bfd_uint64_t _sym4287_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15n2line ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }

static bfd_uint64_t _sym4288_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - im15n2im8n ( (IM15n_checker((operands[1].X_add_number),FALSE)) ); }
static struct adl_operand _sym4286_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym4287_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4288_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_u_gX_minus
static struct adl_operand _sym4284_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{268, 1, 0, 0, 24, 0ull, 0x7fffull, 0ull, 0, 0,IM15n_checker, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4289[] = {
  // st_u_aY_Is8_u_gX    (0)
  { "st_u_aY_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5600000,},0, "", 0, 4, 4, 0, 0, _sym4286_operands,0,0,0, 0,&_sym4285,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4290[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_Is8_u_gX_plus
static adl_instr_attrs _sym4292 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) | ((uint64_t)(1ULL << instr_wide_imm)) , 0 };

// Shorthand:  st_u_aY_Is8_u_gX_plus -> st_u_aY_Is8_u_gX;

static bfd_uint64_t _sym4294_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2line ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }

static bfd_uint64_t _sym4295_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return im15s2im8s ( ((int)(((operands[1].X_add_number) & (1 << 14)) ? ((operands[1].X_add_number)- (1 << 15)):(operands[1].X_add_number))) ); }
static struct adl_operand _sym4293_operands[] = { {115, 0, 0, 0, 0, 0, 0, 0, _sym4294_modifier, 0, 0,0, -1,-1,},{2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4295_modifier, 0, 0,0, -1,-1,},{68, 2, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_aY_Is8_u_gX_plus
static struct adl_operand _sym4291_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{269, 1, ADL_SIGNED, 0, 24, 18446744073709535233ull-1, 16383ull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 2, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4296[] = {
  // st_u_aY_Is8_u_gX    (0)
  { "st_u_aY_Is8_u_gX", 3, 25, 64,  0x1, { 0x0,0x5600000,},0, "", 0, 4, 4, 0, 0, _sym4293_operands,0,0,0, 0,&_sym4292,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4297[] = { &_sym2, 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_aZ_H
static adl_instr_attrs _sym4299 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_aZ_H
static struct adl_operand _sym4298_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4300[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_u_aY_aZ_u_gX
static adl_instr_attrs _sym4302 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_aZ_u_gX
static struct adl_operand _sym4301_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4303[] = { &_sym2, &_sym18, &_sym24, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_aY_u_Is8_H
static adl_instr_attrs _sym4305 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_u_Is8_H
static struct adl_operand _sym4304_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 1, ADL_EXT_SIGNED, 0, 13, 18446744073709551489ull-1, 255ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4306[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_u_aY_u_Is8_H_minus
static adl_instr_attrs _sym4308 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_aY_u_Is8_H_minus -> st_u_aY_u_Is8_H;

static bfd_uint64_t _sym4310_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM8n_checker((operands[1].X_add_number),FALSE)); }
static struct adl_operand _sym4309_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{96, 0, 0, 0, 0, 0, 0, 0, _sym4310_modifier, 0, 0,0, -1,-1,},};

// Instruction st_u_aY_u_Is8_H_minus
static struct adl_operand _sym4307_operands[] = { {195, 0, ADL_REGISTER, 0, 24, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{306, 1, 0, 0, 24, 0ull, 0xffull, 0ull, 0, 0,IM8n_checker, 0,-1,-1,},};
static struct adl_opcode _sym4311[] = {
  // st_u_aY_u_Is8_H    (0)
  { "st_u_aY_u_Is8_H", 3, 25, 64,  0x1, { 0x0,0x5600600,},0, "", 0, 2, 2, 0, 0, _sym4309_operands,0,0,0, 0,&_sym4308,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4312[] = { &_sym2, 0,  (struct enum_fields *) -1,};

// Instruction st_u_aY_u_aZ_H
static adl_instr_attrs _sym4314 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_u_aZ_H
static struct adl_operand _sym4313_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4315[] = { &_sym2, &_sym18, &_sym24,  (struct enum_fields *) -1,};

// Instruction st_u_aY_u_aZ_gX
static adl_instr_attrs _sym4317 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_aY_u_aZ_gX
static struct adl_operand _sym4316_operands[] = { {2, 0, ADL_REGISTER, 0, 11, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{6, 1, 0, 0, 8, 0ull, 0x1ull, 0ull, 0, 0, 0, 0,-1,-1,},{9, 2, ADL_REGISTER, 0, 19, 0ull, 0x3ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 3, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4318[] = { &_sym2, &_sym18, &_sym24, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_sp_Is10_gX
static adl_instr_attrs _sym4320 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_sp_Is10_gX
static struct adl_operand _sym4319_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4321[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_sp_Is10_gX_minus
static adl_instr_attrs _sym4323 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_sp_Is10_gX_minus -> st_u_sp_Is10_gX;

static bfd_uint64_t _sym4325_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym4324_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym4325_modifier, 0, 0,0, -1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_sp_Is10_gX_minus
static struct adl_operand _sym4322_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4326[] = {
  // st_u_sp_Is10_gX    (0)
  { "st_u_sp_Is10_gX", 3, 25, 64,  0x1, { 0x0,0x3600000,},0, "", 0, 2, 2, 0, 0, _sym4324_operands,0,0,0, 0,&_sym4323,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4327[] = { 0, &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_sp_Is10_gX_push_gX
static adl_instr_attrs _sym4329 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_sp_Is10_gX_push_gX -> st_u_sp_Is10_gX;
static struct adl_operand _sym4330_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction st_u_sp_Is10_gX_push_gX
static struct adl_operand _sym4328_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4331[] = {
  // st_u_sp_Is10_gX    (0)
  { "st_u_sp_Is10_gX", 3, 25, 64,  0x1, { 0x0,0x3600800,},0, "", 0, 1, 1, 0, 0, _sym4330_operands,0,0,0, 0,&_sym4329,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4332[] = { &_sym186,  (struct enum_fields *) -1,};

// Instruction st_u_sp_u_Is10_H
static adl_instr_attrs _sym4334 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Instruction st_u_sp_u_Is10_H
static struct adl_operand _sym4333_operands[] = { {71, 0, ADL_EXT_SIGNED, 0, 11, 18446744073709551105ull-1, 1023ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4335[] = { 0,  (struct enum_fields *) -1,};

// Instruction st_u_sp_u_Is10_H_minus
static adl_instr_attrs _sym4337 = { ((uint64_t)(1ULL << instr_opS)) | ((uint64_t)(1ULL << instr_store)) , 0 };

// Shorthand:  st_u_sp_u_Is10_H_minus -> st_u_sp_u_Is10_H;

static bfd_uint64_t _sym4339_modifier (const expressionS *operands, unsigned __cia ATTRIBUTE_UNUSED) { return - (IM10n_checker((operands[0].X_add_number),FALSE)); }
static struct adl_operand _sym4338_operands[] = { {71, 0, 0, 0, 0, 0, 0, 0, _sym4339_modifier, 0, 0,0, -1,-1,},};

// Instruction st_u_sp_u_Is10_H_minus
static struct adl_operand _sym4336_operands[] = { {255, 0, 0, 0, 24, 0ull, 0x3ffull, 0ull, 0, 0,IM10n_checker, 0,-1,-1,},};
static struct adl_opcode _sym4340[] = {
  // st_u_sp_u_Is10_H    (0)
  { "st_u_sp_u_Is10_H", 3, 25, 64,  0x1, { 0x0,0x3600600,},0, "", 0, 1, 1, 0, 0, _sym4338_operands,0,0,0, 0,&_sym4337,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4341[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_cc_gX_sp_sp_0
static adl_instr_attrs _sym4343 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gX_sp_sp_0
static struct adl_operand _sym4342_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4344[] = { &_sym128, &_sym216,  (struct enum_fields *) -1,};

// Instruction sub_cc_gX_sp_sp_1
static adl_instr_attrs _sym4346 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gX_sp_sp_1
static struct adl_operand _sym4345_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4347[] = { &_sym128, &_sym222,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_000
static adl_instr_attrs _sym4349 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_000
static struct adl_operand _sym4348_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4350[] = { &_sym128, &_sym216, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_001
static adl_instr_attrs _sym4352 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_001
static struct adl_operand _sym4351_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4353[] = { &_sym128, &_sym216, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_010
static adl_instr_attrs _sym4355 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_010
static struct adl_operand _sym4354_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4356[] = { &_sym128, &_sym216, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_011
static adl_instr_attrs _sym4358 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_011
static struct adl_operand _sym4357_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4359[] = { &_sym128, &_sym216, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_100
static adl_instr_attrs _sym4361 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_100
static struct adl_operand _sym4360_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4362[] = { &_sym128, &_sym222, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_101
static adl_instr_attrs _sym4364 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_101
static struct adl_operand _sym4363_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4365[] = { &_sym128, &_sym222, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_110
static adl_instr_attrs _sym4367 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_110
static struct adl_operand _sym4366_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 3, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4368[] = { &_sym128, &_sym222, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gX_gY_111
static adl_instr_attrs _sym4370 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gX_gY_111
static struct adl_operand _sym4369_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 3, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4371[] = { &_sym128, &_sym222, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gY_sp_00
static adl_instr_attrs _sym4373 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gY_sp_00
static struct adl_operand _sym4372_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4374[] = { &_sym128, &_sym216, &_sym190,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gY_sp_01
static adl_instr_attrs _sym4376 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gY_sp_01
static struct adl_operand _sym4375_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4377[] = { &_sym128, &_sym216, &_sym194,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gY_sp_10
static adl_instr_attrs _sym4379 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gY_sp_10
static struct adl_operand _sym4378_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 2, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4380[] = { &_sym128, &_sym222, &_sym190,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_gY_sp_11
static adl_instr_attrs _sym4382 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_gY_sp_11
static struct adl_operand _sym4381_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 2, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4383[] = { &_sym128, &_sym222, &_sym194,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_sp_gX_00
static adl_instr_attrs _sym4385 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_sp_gX_00
static struct adl_operand _sym4384_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4386[] = { &_sym128, &_sym216, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_sp_gX_01
static adl_instr_attrs _sym4388 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_sp_gX_01
static struct adl_operand _sym4387_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{61, 1, ADL_REGISTER, 0, 22, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4389[] = { &_sym128, &_sym216, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_sp_gX_10
static adl_instr_attrs _sym4391 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_sp_gX_10
static struct adl_operand _sym4390_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4392[] = { &_sym128, &_sym222, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_gZ_sp_gX_11
static adl_instr_attrs _sym4394 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_gZ_sp_gX_11
static struct adl_operand _sym4393_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{63, 1, ADL_REGISTER, 0, 23, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4395[] = { &_sym128, &_sym222, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gX_0
static adl_instr_attrs _sym4397 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_cc_sp_gX_0 -> sub_cc_sp_sp_gX_0;
static struct adl_operand _sym4398_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_cc_sp_gX_0
static struct adl_operand _sym4396_operands[] = { {226, 0, 0, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{249, 1, ADL_REGISTER, 0, 24, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4399[] = {
  // sub_cc_sp_sp_gX_0    (0)
  { "sub_cc_sp_sp_gX_0", 3, 25, 64,  0x1, { 0x0,0x35007700,},0, "", 0, 2, 2, 0, 1, _sym4398_operands,0,0,1, 0,&_sym4397,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4400[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gX_1
static adl_instr_attrs _sym4402 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_cc_sp_gX_1 -> sub_cc_sp_sp_gX_1;
static struct adl_operand _sym4403_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_cc_sp_gX_1
static struct adl_operand _sym4401_operands[] = { {226, 0, 0, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{250, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4404[] = {
  // sub_cc_sp_sp_gX_1    (0)
  { "sub_cc_sp_sp_gX_1", 3, 25, 64,  0x1, { 0x0,0x35047700,},0, "", 0, 2, 2, 0, 1, _sym4403_operands,0,0,1, 0,&_sym4402,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4405[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_gX_00
static adl_instr_attrs _sym4407 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_gX_00
static struct adl_operand _sym4406_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4408[] = { &_sym128, &_sym190, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_gX_01
static adl_instr_attrs _sym4410 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_gX_01
static struct adl_operand _sym4409_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4411[] = { &_sym128, &_sym190, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_gX_10
static adl_instr_attrs _sym4413 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_gX_10
static struct adl_operand _sym4412_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 2, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4414[] = { &_sym128, &_sym194, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_gX_11
static adl_instr_attrs _sym4416 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_gX_11
static struct adl_operand _sym4415_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 2, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4417[] = { &_sym128, &_sym194, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_sp_0
static adl_instr_attrs _sym4419 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_sp_0
static struct adl_operand _sym4418_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{53, 1, ADL_REGISTER, 0, 18, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4420[] = { &_sym128, &_sym190,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_gY_sp_1
static adl_instr_attrs _sym4422 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_gY_sp_1
static struct adl_operand _sym4421_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{54, 1, ADL_REGISTER, 0, 19, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4423[] = { &_sym128, &_sym194,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_sp_gX_0
static adl_instr_attrs _sym4425 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_sp_gX_0
static struct adl_operand _sym4424_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{58, 1, ADL_REGISTER, 0, 14, 0ull, 0x7ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4426[] = { &_sym128, &_sym206,  (struct enum_fields *) -1,};

// Instruction sub_cc_sp_sp_gX_1
static adl_instr_attrs _sym4428 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_cc_sp_sp_gX_1
static struct adl_operand _sym4427_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{59, 1, ADL_REGISTER, 0, 15, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4429[] = { &_sym128, &_sym210,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16
static adl_instr_attrs _sym4431 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_s_gX_Is16
static struct adl_operand _sym4430_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4432[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_gX
static adl_instr_attrs _sym4434 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_gX -> sub_s_gX_Is16;
static struct adl_operand _sym4435_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_gX
static struct adl_operand _sym4433_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4436[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000000,},0, "", 0, 2, 2, 0, 0, _sym4435_operands,0,0,0, 0,&_sym4434,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4437_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4438[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_gX_sub
static adl_instr_attrs _sym4440 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_gX_sub -> sub_s_gX_Is16;
static struct adl_operand _sym4441_operands[] = { {110, 2, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_gX_sub
static struct adl_operand _sym4439_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 2, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4442[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000000,},0, "", 0, 2, 2, 0, 0, _sym4441_operands,0,0,0, 0,&_sym4440,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4443_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4444[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sp
static adl_instr_attrs _sym4446 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sp -> sub_s_gX_Is16;
static struct adl_operand _sym4447_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sp
static struct adl_operand _sym4445_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4448[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000700,},0, "", 0, 1, 1, 0, 0, _sym4447_operands,0,0,0, 0,&_sym4446,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4449[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sp_sp
static adl_instr_attrs _sym4451 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sp_sp -> sub_s_gX_Is16;
static struct adl_operand _sym4452_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sp_sp
static struct adl_operand _sym4450_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4453[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000700,},0, "", 0, 1, 1, 0, 0, _sym4452_operands,0,0,0, 0,&_sym4451,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4454[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sp_sp_sub
static adl_instr_attrs _sym4456 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sp_sp_sub -> sub_s_gX_Is16;
static struct adl_operand _sym4457_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sp_sp_sub
static struct adl_operand _sym4455_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4458[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000700,},0, "", 0, 1, 1, 0, 0, _sym4457_operands,0,0,0, 0,&_sym4456,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4459[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sp_sub
static adl_instr_attrs _sym4461 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sp_sub -> sub_s_gX_Is16;
static struct adl_operand _sym4462_operands[] = { {110, 0, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sp_sub
static struct adl_operand _sym4460_operands[] = { {318, 0, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4463[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000700,},0, "", 0, 1, 1, 0, 0, _sym4462_operands,0,0,0, 0,&_sym4461,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4464[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_s_gX_Is16_sub
static adl_instr_attrs _sym4466 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_s_gX_Is16_sub -> sub_s_gX_Is16;
static struct adl_operand _sym4467_operands[] = { {110, 1, ADL_SIGNED, 0, 5, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_s_gX_Is16_sub
static struct adl_operand _sym4465_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{318, 1, ADL_SIGNED, 0, 24, 18446744073709518849ull-1, 32767ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4468[] = {
  // sub_s_gX_Is16    (0)
  { "sub_s_gX_Is16", 3, 25, 64,  0x1, { 0x0,0xc8000000,},0, "", 0, 2, 2, 0, 0, _sym4467_operands,0,0,0, 0,&_sym4466,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4469[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16
static adl_instr_attrs _sym4471 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction sub_z_gX_Iu16
static struct adl_operand _sym4470_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4472[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_gX
static adl_instr_attrs _sym4474 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_gX -> sub_z_gX_Iu16;
static struct adl_operand _sym4475_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_gX
static struct adl_operand _sym4473_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4476[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000000,},0, "", 0, 2, 2, 0, 0, _sym4475_operands,0,0,0, 0,&_sym4474,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4477_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4478[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_gX_sub
static adl_instr_attrs _sym4480 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_gX_sub -> sub_z_gX_Iu16;
static struct adl_operand _sym4481_operands[] = { {111, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_gX_sub
static struct adl_operand _sym4479_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4482[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000000,},0, "", 0, 2, 2, 0, 0, _sym4481_operands,0,0,0, 0,&_sym4480,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4483_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4484[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sp
static adl_instr_attrs _sym4486 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sp -> sub_z_gX_Iu16;
static struct adl_operand _sym4487_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sp
static struct adl_operand _sym4485_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4488[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000700,},0, "", 0, 1, 1, 0, 0, _sym4487_operands,0,0,0, 0,&_sym4486,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4489[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sp_sp
static adl_instr_attrs _sym4491 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sp_sp -> sub_z_gX_Iu16;
static struct adl_operand _sym4492_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sp_sp
static struct adl_operand _sym4490_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4493[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000700,},0, "", 0, 1, 1, 0, 0, _sym4492_operands,0,0,0, 0,&_sym4491,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4494[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sp_sp_sub
static adl_instr_attrs _sym4496 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sp_sp_sub -> sub_z_gX_Iu16;
static struct adl_operand _sym4497_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sp_sp_sub
static struct adl_operand _sym4495_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4498[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000700,},0, "", 0, 1, 1, 0, 0, _sym4497_operands,0,0,0, 0,&_sym4496,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4499[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sp_sub
static adl_instr_attrs _sym4501 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sp_sub -> sub_z_gX_Iu16;
static struct adl_operand _sym4502_operands[] = { {111, 0, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sp_sub
static struct adl_operand _sym4500_operands[] = { {319, 0, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4503[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000700,},0, "", 0, 1, 1, 0, 0, _sym4502_operands,0,0,0, 0,&_sym4501,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4504[] = { 0,  (struct enum_fields *) -1,};

// Instruction sub_z_gX_Iu16_sub
static adl_instr_attrs _sym4506 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  sub_z_gX_Iu16_sub -> sub_z_gX_Iu16;
static struct adl_operand _sym4507_operands[] = { {111, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction sub_z_gX_Iu16_sub
static struct adl_operand _sym4505_operands[] = { {244, 0, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{319, 1, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4508[] = {
  // sub_z_gX_Iu16    (0)
  { "sub_z_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0xc0000000,},0, "", 0, 2, 2, 0, 0, _sym4507_operands,0,0,0, 0,&_sym4506,0,{}, 0,0,0,0,0,-1, },
};

static struct enum_fields *_sym4509[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction xor_cc_gZ_gY_gX
static adl_instr_attrs _sym4511 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction xor_cc_gZ_gY_gX
static struct adl_operand _sym4510_operands[] = { {37, 0, 0, 0, 9, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{57, 2, ADL_REGISTER, 0, 17, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{60, 3, ADL_REGISTER, 0, 13, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4512[] = { &_sym128, &_sym186, &_sym188, &_sym204,  (struct enum_fields *) -1,};

// Instruction xor_gX_Iu16
static adl_instr_attrs _sym4514 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Instruction xor_gX_Iu16
static struct adl_operand _sym4513_operands[] = { {68, 0, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{75, 1, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4515[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction xor_gX_gX_Iu16
static adl_instr_attrs _sym4517 = { ((uint64_t)(1ULL << instr_opS)) , 0 };

// Shorthand:  xor_gX_gX_Iu16 -> xor_gX_Iu16;
static struct adl_operand _sym4518_operands[] = { {75, 2, 0, 0, 5, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},{68, 1, ADL_REGISTER, 0, 21, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},};

// Instruction xor_gX_gX_Iu16
static struct adl_operand _sym4516_operands[] = { {244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{244, 1, ADL_REGISTER, 0, 24, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{270, 2, 0, 0, 24, 0ull, 0xffffull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct adl_opcode _sym4519[] = {
  // xor_gX_Iu16    (0)
  { "xor_gX_Iu16", 3, 25, 64,  0x1, { 0x0,0x28000000,},0, "", 0, 2, 2, 0, 0, _sym4518_operands,0,0,0, 0,&_sym4517,0,{}, 0,0,0,0,0,-1, },
};

static bool _sym4520_argchecker (const expressionS *operands) {
  if (!((operands[0].X_add_number == operands[1].X_add_number))) return false;
  return true;
}

static struct enum_fields *_sym4521[] = { &_sym186, &_sym186, 0,  (struct enum_fields *) -1,};

// Instruction mv_ocram_gX_I32
static adl_instr_attrs _sym4523 = { ((uint64_t)(1ULL << instr_opD)) , 0 };

// Instruction mv_ocram_gX_I32
static struct adl_operand _sym4522_operands[] = { {66, 0, ADL_REGISTER, 0, 26, 0ull, 0xfull, 0ull, 0, 0, 0, 0,-1,-1,},{89, 1, ADL_ABSOLUTE | ADL_EXT_SIGNED, 0, 30, 18446744071562067969ull-1, 4294967295ull, 0ull, 0, 0, 0, 0,-1,-1,},};
static struct enum_fields *_sym4524[] = { &_sym186, 0,  (struct enum_fields *) -1,};

// Instructions named 'abs'.
static struct adl_opcode _sym4525[] = {
  // abs_gY_gX    (0)
  { "abs_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3c000000,},_sym1572, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym1570_operands,0,0,0, 0,&_sym1571,0,{}, 0,0,0,0,0,-1, },
  // abs_gY_gX    (1)
  { "abs_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3c000000,},_sym3048, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym3046_operands,0,0,0, 0,&_sym3047,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'add'.
static struct adl_opcode _sym4526[] = {
  // add_cc_gZ_gX_gY_110    (0)
  { "add_cc_gZ_gX_gY_110", 3, 25, 64,  0x0, { 0x0,0x34004400,},_sym1599, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym1597_operands,0,0,1, 0,&_sym1598,0,{}, 0,0,0,0,0,8, },
  // add_cc_gZ_gX_gY_100    (1)
  { "add_cc_gZ_gX_gY_100", 3, 25, 64,  0x0, { 0x0,0x34000400,},_sym1593, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym1591_operands,0,0,1, 0,&_sym1592,0,{}, 0,0,0,0,0,11, },
  // add_cc_gZ_gX_gY_011    (2)
  { "add_cc_gZ_gX_gY_011", 3, 25, 64,  0x0, { 0x0,0x34044000,},_sym1590, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1588_operands,0,0,1, 0,&_sym1589,0,{}, 0,0,0,0,0,12, },
  // add_cc_gZ_gX_gY_010    (3)
  { "add_cc_gZ_gX_gY_010", 3, 25, 64,  0x0, { 0x0,0x34004000,},_sym1587, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym1585_operands,0,0,1, 0,&_sym1586,0,{}, 0,0,0,0,0,13, },
  // add_cc_gZ_gX_gY_001    (4)
  { "add_cc_gZ_gX_gY_001", 3, 25, 64,  0x0, { 0x0,0x34040000,},_sym1584, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1582_operands,0,0,1, 0,&_sym1583,0,{}, 0,0,0,0,0,14, },
  // add_cc_gZ_gX_gY_000    (5)
  { "add_cc_gZ_gX_gY_000", 3, 25, 64,  0x0, { 0x0,0x34000000,},_sym1581, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym1579_operands,0,0,1, 0,&_sym1580,0,{}, 0,0,0,0,0,15, },
  // add_cc_gZ_gX_gY_101    (6)
  { "add_cc_gZ_gX_gY_101", 3, 25, 64,  0x0, { 0x0,0x34040400,},_sym1596, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1594_operands,0,0,1, 0,&_sym1595,0,{}, 0,0,0,0,0,10, },
  // add_cc_gZ_gX_gY_111    (7)
  { "add_cc_gZ_gX_gY_111", 3, 25, 64,  0x0, { 0x0,0x34044400,},_sym3078, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3076_operands,0,0,1, 0,&_sym3077,0,{}, 0,0,0,0,0,9, },
  // add_cc_gZ_gX_gY_110    (8)
  { "add_cc_gZ_gX_gY_110", 3, 25, 64,  0x0, { 0x0,0x34004400,},_sym3075, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym3073_operands,0,0,1, 0,&_sym3074,0,{}, 0,0,0,0,0,8, },
  // add_cc_gZ_gX_gY_111    (9)
  { "add_cc_gZ_gX_gY_111", 3, 25, 64,  0x0, { 0x0,0x34044400,},_sym1602, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1600_operands,0,0,1, 0,&_sym1601,0,{}, 0,0,0,0,0,9, },
  // add_cc_gZ_gX_gY_101    (10)
  { "add_cc_gZ_gX_gY_101", 3, 25, 64,  0x0, { 0x0,0x34040400,},_sym3072, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3070_operands,0,0,1, 0,&_sym3071,0,{}, 0,0,0,0,0,10, },
  // add_cc_gZ_gX_gY_100    (11)
  { "add_cc_gZ_gX_gY_100", 3, 25, 64,  0x0, { 0x0,0x34000400,},_sym3069, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym3067_operands,0,0,1, 0,&_sym3068,0,{}, 0,0,0,0,0,11, },
  // add_cc_gZ_gX_gY_011    (12)
  { "add_cc_gZ_gX_gY_011", 3, 25, 64,  0x0, { 0x0,0x34044000,},_sym3066, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3064_operands,0,0,1, 0,&_sym3065,0,{}, 0,0,0,0,0,12, },
  // add_cc_gZ_gX_gY_010    (13)
  { "add_cc_gZ_gX_gY_010", 3, 25, 64,  0x0, { 0x0,0x34004000,},_sym3063, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym3061_operands,0,0,1, 0,&_sym3062,0,{}, 0,0,0,0,0,13, },
  // add_cc_gZ_gX_gY_001    (14)
  { "add_cc_gZ_gX_gY_001", 3, 25, 64,  0x0, { 0x0,0x34040000,},_sym3060, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3058_operands,0,0,1, 0,&_sym3059,0,{}, 0,0,0,0,0,14, },
  // add_cc_gZ_gX_gY_000    (15)
  { "add_cc_gZ_gX_gY_000", 3, 25, 64,  0x0, { 0x0,0x34000000,},_sym3057, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym3055_operands,0,0,1, 0,&_sym3056,0,{}, 0,0,0,0,0,15, },
  // add_cc_sp_gY_gX_10    (16)
  { "add_cc_sp_gY_gX_10", 3, 25, 64,  0x0, { 0x0,0x34004700,},_sym1645, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1643_operands,0,0,1, 0,&_sym1644,0,{}, 0,0,0,0,0,25, },
  // add_cc_gZ_sp_gX_11    (17)
  { "add_cc_gZ_sp_gX_11", 3, 25, 64,  0x0, { 0x0,0x34047400,},_sym1626, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1624_operands,0,0,1, 0,&_sym1625,0,{}, 0,0,0,0,0,39, },
  // add_cc_sp_gY_gX_01    (18)
  { "add_cc_sp_gY_gX_01", 3, 25, 64,  0x0, { 0x0,0x34040700,},_sym1642, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1640_operands,0,0,1, 0,&_sym1641,0,{}, 0,0,0,0,0,26, },
  // add_cc_sp_gY_gX_00    (19)
  { "add_cc_sp_gY_gX_00", 3, 25, 64,  0x0, { 0x0,0x34000700,},_sym1639, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1637_operands,0,0,1, 0,&_sym1638,0,{}, 0,0,0,0,0,37, },
  // add_cc_gZ_gY_sp_10    (20)
  { "add_cc_gZ_gY_sp_10", 3, 25, 64,  0x0, { 0x0,0x34070400,},_sym3087, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym3085_operands,0,0,1, 0,&_sym3086,0,{}, 0,0,0,0,0,32, },
  // add_cc_gZ_gY_sp_11    (21)
  { "add_cc_gZ_gY_sp_11", 3, 25, 64,  0x0, { 0x0,0x34074400,},_sym3090, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym3088_operands,0,0,1, 0,&_sym3089,0,{}, 0,0,0,0,0,31, },
  // add_cc_sp_gY_gX_11    (22)
  { "add_cc_sp_gY_gX_11", 3, 25, 64,  0x0, { 0x0,0x34044700,},_sym1648, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1646_operands,0,0,1, 0,&_sym1647,0,{}, 0,0,0,0,0,27, },
  // add_cc_gZ_gY_sp_01    (23)
  { "add_cc_gZ_gY_sp_01", 3, 25, 64,  0x0, { 0x0,0x34074000,},_sym3084, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym3082_operands,0,0,1, 0,&_sym3083,0,{}, 0,0,0,0,0,33, },
  // add_cc_gZ_gY_sp_00    (24)
  { "add_cc_gZ_gY_sp_00", 3, 25, 64,  0x0, { 0x0,0x34070000,},_sym3081, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym3079_operands,0,0,1, 0,&_sym3080,0,{}, 0,0,0,0,0,34, },
  // add_cc_sp_gY_gX_10    (25)
  { "add_cc_sp_gY_gX_10", 3, 25, 64,  0x0, { 0x0,0x34004700,},_sym3121, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3119_operands,0,0,1, 0,&_sym3120,0,{}, 0,0,0,0,0,25, },
  // add_cc_sp_gY_gX_01    (26)
  { "add_cc_sp_gY_gX_01", 3, 25, 64,  0x0, { 0x0,0x34040700,},_sym3118, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3116_operands,0,0,1, 0,&_sym3117,0,{}, 0,0,0,0,0,26, },
  // add_cc_sp_gY_gX_11    (27)
  { "add_cc_sp_gY_gX_11", 3, 25, 64,  0x0, { 0x0,0x34044700,},_sym3124, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3122_operands,0,0,1, 0,&_sym3123,0,{}, 0,0,0,0,0,27, },
  // add_cc_gZ_sp_gX_10    (28)
  { "add_cc_gZ_sp_gX_10", 3, 25, 64,  0x0, { 0x0,0x34007400,},_sym1623, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1621_operands,0,0,1, 0,&_sym1622,0,{}, 0,0,0,0,0,38, },
  // add_cc_gZ_sp_gX_01    (29)
  { "add_cc_gZ_sp_gX_01", 3, 25, 64,  0x0, { 0x0,0x34047000,},_sym1620, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1618_operands,0,0,1, 0,&_sym1619,0,{}, 0,0,0,0,0,36, },
  // add_cc_gZ_sp_gX_00    (30)
  { "add_cc_gZ_sp_gX_00", 3, 25, 64,  0x0, { 0x0,0x34007000,},_sym1617, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1615_operands,0,0,1, 0,&_sym1616,0,{}, 0,0,0,0,0,35, },
  // add_cc_gZ_gY_sp_11    (31)
  { "add_cc_gZ_gY_sp_11", 3, 25, 64,  0x0, { 0x0,0x34074400,},_sym1614, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym1612_operands,0,0,1, 0,&_sym1613,0,{}, 0,0,0,0,0,31, },
  // add_cc_gZ_gY_sp_10    (32)
  { "add_cc_gZ_gY_sp_10", 3, 25, 64,  0x0, { 0x0,0x34070400,},_sym1611, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym1609_operands,0,0,1, 0,&_sym1610,0,{}, 0,0,0,0,0,32, },
  // add_cc_gZ_gY_sp_01    (33)
  { "add_cc_gZ_gY_sp_01", 3, 25, 64,  0x0, { 0x0,0x34074000,},_sym1608, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym1606_operands,0,0,1, 0,&_sym1607,0,{}, 0,0,0,0,0,33, },
  // add_cc_gZ_gY_sp_00    (34)
  { "add_cc_gZ_gY_sp_00", 3, 25, 64,  0x0, { 0x0,0x34070000,},_sym1605, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym1603_operands,0,0,1, 0,&_sym1604,0,{}, 0,0,0,0,0,34, },
  // add_cc_gZ_sp_gX_00    (35)
  { "add_cc_gZ_sp_gX_00", 3, 25, 64,  0x0, { 0x0,0x34007000,},_sym3093, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3091_operands,0,0,1, 0,&_sym3092,0,{}, 0,0,0,0,0,35, },
  // add_cc_gZ_sp_gX_01    (36)
  { "add_cc_gZ_sp_gX_01", 3, 25, 64,  0x0, { 0x0,0x34047000,},_sym3096, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3094_operands,0,0,1, 0,&_sym3095,0,{}, 0,0,0,0,0,36, },
  // add_cc_sp_gY_gX_00    (37)
  { "add_cc_sp_gY_gX_00", 3, 25, 64,  0x0, { 0x0,0x34000700,},_sym3115, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3113_operands,0,0,1, 0,&_sym3114,0,{}, 0,0,0,0,0,37, },
  // add_cc_gZ_sp_gX_10    (38)
  { "add_cc_gZ_sp_gX_10", 3, 25, 64,  0x0, { 0x0,0x34007400,},_sym3099, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3097_operands,0,0,1, 0,&_sym3098,0,{}, 0,0,0,0,0,38, },
  // add_cc_gZ_sp_gX_11    (39)
  { "add_cc_gZ_sp_gX_11", 3, 25, 64,  0x0, { 0x0,0x34047400,},_sym3102, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3100_operands,0,0,1, 0,&_sym3101,0,{}, 0,0,0,0,0,39, },
  // add_gY_H_gX_01    (40)
  { "add_gY_H_gX_01", 3, 25, 64,  0x0, { 0x0,0x34046000,},_sym3145, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),h,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3143_operands,0,0,1, 0,&_sym3144,0,{}, 0,0,0,0,0,53, },
  // add_gY_gX_H_11    (41)
  { "add_gY_gX_H_11", 3, 25, 64,  0x0, { 0x0,0x34064400,},_sym3163, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),h$", 0, 3, 3, 0, 1, _sym3161_operands,0,0,1, 0,&_sym3162,0,{}, 0,0,0,0,0,47, },
  // add_gY_H_gX_00    (42)
  { "add_gY_H_gX_00", 3, 25, 64,  0x0, { 0x0,0x34006000,},_sym3142, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),h,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3140_operands,0,0,1, 0,&_sym3141,0,{}, 0,0,0,0,0,54, },
  // add_gY_H_gX_11    (43)
  { "add_gY_H_gX_11", 3, 25, 64,  0x0, { 0x0,0x34046400,},_sym3151, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),h,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3149_operands,0,0,1, 0,&_sym3150,0,{}, 0,0,0,0,0,51, },
  // add_gY_gX_H_00    (44)
  { "add_gY_gX_H_00", 3, 25, 64,  0x0, { 0x0,0x34060000,},_sym3154, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),h$", 0, 3, 3, 0, 1, _sym3152_operands,0,0,1, 0,&_sym3153,0,{}, 0,0,0,0,0,50, },
  // add_gY_gX_H_01    (45)
  { "add_gY_gX_H_01", 3, 25, 64,  0x0, { 0x0,0x34064000,},_sym3157, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),h$", 0, 3, 3, 0, 1, _sym3155_operands,0,0,1, 0,&_sym3156,0,{}, 0,0,0,0,0,49, },
  // add_gY_gX_H_10    (46)
  { "add_gY_gX_H_10", 3, 25, 64,  0x0, { 0x0,0x34060400,},_sym3160, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),h$", 0, 3, 3, 0, 1, _sym3158_operands,0,0,1, 0,&_sym3159,0,{}, 0,0,0,0,0,48, },
  // add_gY_gX_H_11    (47)
  { "add_gY_gX_H_11", 3, 25, 64,  0x0, { 0x0,0x34064400,},_sym1687, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),h$", 0, 3, 3, 0, 1, _sym1685_operands,0,0,1, 0,&_sym1686,0,{}, 0,0,0,0,0,47, },
  // add_gY_gX_H_10    (48)
  { "add_gY_gX_H_10", 3, 25, 64,  0x0, { 0x0,0x34060400,},_sym1684, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),h$", 0, 3, 3, 0, 1, _sym1682_operands,0,0,1, 0,&_sym1683,0,{}, 0,0,0,0,0,48, },
  // add_gY_gX_H_01    (49)
  { "add_gY_gX_H_01", 3, 25, 64,  0x0, { 0x0,0x34064000,},_sym1681, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),h$", 0, 3, 3, 0, 1, _sym1679_operands,0,0,1, 0,&_sym1680,0,{}, 0,0,0,0,0,49, },
  // add_gY_gX_H_00    (50)
  { "add_gY_gX_H_00", 3, 25, 64,  0x0, { 0x0,0x34060000,},_sym1678, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),h$", 0, 3, 3, 0, 1, _sym1676_operands,0,0,1, 0,&_sym1677,0,{}, 0,0,0,0,0,50, },
  // add_gY_H_gX_11    (51)
  { "add_gY_H_gX_11", 3, 25, 64,  0x0, { 0x0,0x34046400,},_sym1675, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),h,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1673_operands,0,0,1, 0,&_sym1674,0,{}, 0,0,0,0,0,51, },
  // add_gY_H_gX_10    (52)
  { "add_gY_H_gX_10", 3, 25, 64,  0x0, { 0x0,0x34006400,},_sym1672, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),h,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1670_operands,0,0,1, 0,&_sym1671,0,{}, 0,0,0,0,0,55, },
  // add_gY_H_gX_01    (53)
  { "add_gY_H_gX_01", 3, 25, 64,  0x0, { 0x0,0x34046000,},_sym1669, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),h,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1667_operands,0,0,1, 0,&_sym1668,0,{}, 0,0,0,0,0,53, },
  // add_gY_H_gX_00    (54)
  { "add_gY_H_gX_00", 3, 25, 64,  0x0, { 0x0,0x34006000,},_sym1666, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),h,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1664_operands,0,0,1, 0,&_sym1665,0,{}, 0,0,0,0,0,54, },
  // add_gY_H_gX_10    (55)
  { "add_gY_H_gX_10", 3, 25, 64,  0x0, { 0x0,0x34006400,},_sym3148, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),h,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3146_operands,0,0,1, 0,&_sym3147,0,{}, 0,0,0,0,0,55, },
  // add_asZ_aX_aY    (56)
  { "add_asZ_aX_aY", 1, 15, 64,  0x0, { 0x0,0x82000000,},_sym802, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(a0|a1|a2|a3),(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym800_operands,0,0,0, 0,&_sym801,0,{}, 0,0,0,0,0,-1, },
  // add_cc_sp_sp_gX_1    (57)
  { "add_cc_sp_sp_gX_1", 3, 25, 64,  0x0, { 0x0,0x34047700,},_sym1660, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym1658_operands,0,0,1, 0,&_sym1659,0,{}, 0,0,0,0,0,64, },
  // add_cc_gX_sp_sp_1    (58)
  { "add_cc_gX_sp_sp_1", 3, 25, 64,  0x0, { 0x0,0x34077400,},_sym3054, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,sp$", 0, 2, 2, 0, 1, _sym3052_operands,0,0,1, 0,&_sym3053,0,{}, 0,0,0,0,0,60, },
  // add_cc_gX_sp_sp_0    (59)
  { "add_cc_gX_sp_sp_0", 3, 25, 64,  0x0, { 0x0,0x34077000,},_sym1575, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,sp$", 0, 2, 2, 0, 1, _sym1573_operands,0,0,1, 0,&_sym1574,0,{}, 0,0,0,0,0,68, },
  // add_cc_gX_sp_sp_1    (60)
  { "add_cc_gX_sp_sp_1", 3, 25, 64,  0x0, { 0x0,0x34077400,},_sym1578, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,sp$", 0, 2, 2, 0, 1, _sym1576_operands,0,0,1, 0,&_sym1577,0,{}, 0,0,0,0,0,60, },
  // add_cc_sp_gY_sp_0    (61)
  { "add_cc_sp_gY_sp_0", 3, 25, 64,  0x0, { 0x0,0x34070700,},_sym1651, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym1649_operands,0,0,1, 0,&_sym1650,0,{}, 0,0,0,0,0,67, },
  // add_cc_sp_gY_sp_1    (62)
  { "add_cc_sp_gY_sp_1", 3, 25, 64,  0x0, { 0x0,0x34074700,},_sym1654, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym1652_operands,0,0,1, 0,&_sym1653,0,{}, 0,0,0,0,0,66, },
  // add_cc_sp_sp_gX_0    (63)
  { "add_cc_sp_sp_gX_0", 3, 25, 64,  0x0, { 0x0,0x34007700,},_sym1657, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym1655_operands,0,0,1, 0,&_sym1656,0,{}, 0,0,0,0,0,65, },
  // add_cc_sp_sp_gX_1    (64)
  { "add_cc_sp_sp_gX_1", 3, 25, 64,  0x0, { 0x0,0x34047700,},_sym3136, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym3134_operands,0,0,1, 0,&_sym3135,0,{}, 0,0,0,0,0,64, },
  // add_cc_sp_sp_gX_0    (65)
  { "add_cc_sp_sp_gX_0", 3, 25, 64,  0x0, { 0x0,0x34007700,},_sym3133, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym3131_operands,0,0,1, 0,&_sym3132,0,{}, 0,0,0,0,0,65, },
  // add_cc_sp_gY_sp_1    (66)
  { "add_cc_sp_gY_sp_1", 3, 25, 64,  0x0, { 0x0,0x34074700,},_sym3130, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym3128_operands,0,0,1, 0,&_sym3129,0,{}, 0,0,0,0,0,66, },
  // add_cc_sp_gY_sp_0    (67)
  { "add_cc_sp_gY_sp_0", 3, 25, 64,  0x0, { 0x0,0x34070700,},_sym3127, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym3125_operands,0,0,1, 0,&_sym3126,0,{}, 0,0,0,0,0,67, },
  // add_cc_gX_sp_sp_0    (68)
  { "add_cc_gX_sp_sp_0", 3, 25, 64,  0x0, { 0x0,0x34077000,},_sym3051, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,sp$", 0, 2, 2, 0, 1, _sym3049_operands,0,0,1, 0,&_sym3050,0,{}, 0,0,0,0,0,68, },
  // add_cc_sp_gX_1    (69)
  { "add_cc_sp_gX_1", 0, 25, 64,  0x0, { 0 },_sym1636, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym1632_operands,_sym1635,1,1, 0,&_sym1633,0,{}, 0,0,0,0,0,72, },
  // add_cc_sp_gX_0    (70)
  { "add_cc_sp_gX_0", 0, 25, 64,  0x0, { 0 },_sym1631, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym1627_operands,_sym1630,1,1, 0,&_sym1628,0,{}, 0,0,0,0,0,71, },
  // add_cc_sp_gX_0    (71)
  { "add_cc_sp_gX_0", 0, 25, 64,  0x0, { 0 },_sym3107, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym3103_operands,_sym3106,1,1, 0,&_sym3104,0,{}, 0,0,0,0,0,71, },
  // add_cc_sp_gX_1    (72)
  { "add_cc_sp_gX_1", 0, 25, 64,  0x0, { 0 },_sym3112, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym3108_operands,_sym3111,1,1, 0,&_sym3109,0,{}, 0,0,0,0,0,72, },
  // add_aX_aY_add_aX_aX_aY    (73)
  { "add_aX_aY_add_aX_aX_aY", 0, 15, 64,  0x0, { 0 },_sym799, "^ *(a0|a1|a2|a3),(a0|a1|a2|a3),(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym794_operands,_sym797,1,0, 0,&_sym795,0,{}, 0,0,_sym798_argchecker,0,0,-1, },
  // add_asY_aX_Is17_2_opC    (74)
  { "add_asY_aX_Is17_2_opC", 8, 64, 64,  0x0, { 0x0,0x8c400,},_sym326, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(a0|a1|a2|a3),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym324_operands,0,0,0, 0,&_sym325,0,{}, 0,0,0,0,0,74, },
// add_aX_aY    (75)
{ "add_aX_aY", 1, 15, 64,  0x0, { 0x0,0x80000000,},_sym793, "^ *(a0|a1|a2|a3),(a0|a1|a2|a3)$", 0, 2, 2, 0, 0, _sym791_operands,0,0,0, 0,&_sym792,0,{}, 0,0,0,0,0,-1, },
// add_cc_sp_sp_sp    (76)
{ "add_cc_sp_sp_sp", 3, 25, 64,  0x0, { 0x0,0x34077700,},_sym1663, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,sp$", 0, 1, 1, 0, 1, _sym1661_operands,0,0,1, 0,&_sym1662,0,{}, 0,0,0,0,0,77, },
// add_cc_sp_sp_sp    (77)
{ "add_cc_sp_sp_sp", 3, 25, 64,  0x0, { 0x0,0x34077700,},_sym3139, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,sp$", 0, 1, 1, 0, 1, _sym3137_operands,0,0,1, 0,&_sym3138,0,{}, 0,0,0,0,0,77, },
// add_s_gX_Is16_gX_add    (78)
{ "add_s_gX_Is16_gX_add", 0, 25, 64,  0x0, { 0 },_sym3183, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3178_operands,_sym3181,1,0, 0,&_sym3179,0,{}, 0,0,_sym3182_argchecker,0,0,83, },
// add_z_gX_Iu16_gX_add    (79)
{ "add_z_gX_Iu16_gX_add", 0, 25, 64,  0x0, { 0 },_sym1747, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym1742_operands,_sym1745,1,0, 0,&_sym1743,0,{}, 0,0,_sym1746_argchecker,0,0,80, },
// add_z_gX_Iu16_gX_add    (80)
{ "add_z_gX_Iu16_gX_add", 0, 25, 64,  0x0, { 0 },_sym3223, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3218_operands,_sym3221,1,0, 0,&_sym3219,0,{}, 0,0,_sym3222_argchecker,0,0,80, },
// add_s_gX_Is16_gX_add    (81)
{ "add_s_gX_Is16_gX_add", 0, 25, 64,  0x0, { 0 },_sym1707, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym1702_operands,_sym1705,1,0, 0,&_sym1703,0,{}, 0,0,_sym1706_argchecker,0,0,83, },
// addA_aX_aX_Is8_add    (82)
{ "addA_aX_aX_Is8_add", 0, 15, 64,  0x0, { 0 },_sym768, "^ *(a0|a1|a2|a3),(a0|a1|a2|a3),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym761_operands,_sym766,1,0, 0,&_sym762,0,{}, 0,0,_sym767_argchecker,0,0,84, },
// add_gX_I32_add_gX_gX_I32    (83)
{ "add_gX_I32_add_gX_gX_I32", 0, 64, 64,  0x0, { 0 },_sym335, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym330_operands,_sym333,1,0, 0,&_sym331,0,{}, 0,0,_sym334_argchecker,0,0,83, },
// add_aX_Is17_add_aX_aX_Is17    (84)
{ "add_aX_Is17_add_aX_aX_Is17", 0, 64, 64,  0x0, { 0 },_sym323, "^ *(a0|a1|a2|a3),(a0|a1|a2|a3),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym318_operands,_sym321,1,0, 0,&_sym319,0,{}, 0,0,_sym322_argchecker,0,0,84, },
// add_z_gX_Iu16_add    (85)
{ "add_z_gX_Iu16_add", 0, 25, 64,  0x0, { 0 },_sym3211, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3207_operands,_sym3210,1,0, 0,&_sym3208,0,{}, 0,0,0,0,0,91, },
// add_z_gX_Iu16_add    (86)
{ "add_z_gX_Iu16_add", 0, 25, 64,  0x0, { 0 },_sym1735, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1731_operands,_sym1734,1,0, 0,&_sym1732,0,{}, 0,0,0,0,0,91, },
// add_aX_Is17    (87)
{ "add_aX_Is17", 8, 64, 64,  0x0, { 0x0,0x8c000,},_sym317, "^ *(a0|a1|a2|a3),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym315_operands,0,0,0, 0,&_sym316,0,{}, 0,0,0,0,0,87, },
// add_s_gX_Is16_add    (88)
{ "add_s_gX_Is16_add", 0, 25, 64,  0x0, { 0 },_sym1695, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1691_operands,_sym1694,1,0, 0,&_sym1692,0,{}, 0,0,0,0,0,90, },
// addA_aX_Is8_alias_add    (89)
{ "addA_aX_Is8_alias_add", 0, 15, 64,  0x0, { 0 },_sym752, "^ *(a0|a1|a2|a3),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym746_operands,_sym751,1,0, 0,&_sym747,0,{}, 0,0,0,0,0,87, },
// add_s_gX_Is16_add    (90)
{ "add_s_gX_Is16_add", 0, 25, 64,  0x0, { 0 },_sym3171, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3167_operands,_sym3170,1,0, 0,&_sym3168,0,{}, 0,0,0,0,0,90, },
// add_gX_I32    (91)
{ "add_gX_I32", 8, 64, 64,  0x0, { 0x0,0xc4200,},_sym329, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym327_operands,0,0,0, 0,&_sym328,0,{}, 0,0,0,0,0,91, },
// add_nco_k_Is10    (92)
{ "add_nco_k_Is10", 1, 15, 64,  0x0, { 0x0,0xe8000000,},_sym1110, "^ *nco_k,([^},[_, ]+)$", 0, 1, 1, 0, 0, _sym1108_operands,0,0,0, 0,&_sym1109,0,{}, 0,0,0,0,0,92, },
// add_s_gX_Is16_sp_sp_add    (93)
{ "add_s_gX_Is16_sp_sp_add", 0, 25, 64,  0x0, { 0 },_sym3203, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym3199_operands,_sym3202,1,0, 0,&_sym3200,0,{}, 0,0,0,0,0,96, },
// add_z_gX_Iu16_sp_sp_add    (94)
{ "add_z_gX_Iu16_sp_sp_add", 0, 25, 64,  0x0, { 0 },_sym3243, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym3239_operands,_sym3242,1,0, 0,&_sym3240,0,{}, 0,0,0,0,0,95, },
// add_z_gX_Iu16_sp_sp_add    (95)
{ "add_z_gX_Iu16_sp_sp_add", 0, 25, 64,  0x0, { 0 },_sym1767, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym1763_operands,_sym1766,1,0, 0,&_sym1764,0,{}, 0,0,0,0,0,95, },
// add_s_gX_Is16_sp_sp_add    (96)
{ "add_s_gX_Is16_sp_sp_add", 0, 25, 64,  0x0, { 0 },_sym1727, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym1723_operands,_sym1726,1,0, 0,&_sym1724,0,{}, 0,0,0,0,0,96, },
// add_s_gX_Is16_sp_add    (97)
{ "add_s_gX_Is16_sp_add", 0, 25, 64,  0x0, { 0 },_sym3193, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3189_operands,_sym3192,1,0, 0,&_sym3190,0,{}, 0,0,0,0,0,100, },
// add_z_gX_Iu16_sp_add    (98)
{ "add_z_gX_Iu16_sp_add", 0, 25, 64,  0x0, { 0 },_sym1757, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1753_operands,_sym1756,1,0, 0,&_sym1754,0,{}, 0,0,0,0,0,99, },
// add_z_gX_Iu16_sp_add    (99)
{ "add_z_gX_Iu16_sp_add", 0, 25, 64,  0x0, { 0 },_sym3233, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3229_operands,_sym3232,1,0, 0,&_sym3230,0,{}, 0,0,0,0,0,99, },
// add_s_gX_Is16_sp_add    (100)
{ "add_s_gX_Is16_sp_add", 0, 25, 64,  0x0, { 0 },_sym1717, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1713_operands,_sym1716,1,0, 0,&_sym1714,0,{}, 0,0,0,0,0,100, },
};

// Instructions named 'add.laddr'.
static struct adl_opcode _sym4527[] = {
  // addA_line_aX_aX_Is8_add    (0)
  { "addA_line_aX_aX_Is8_add", 0, 15, 64,  0x0, { 0 },_sym790, "^ *(a0|a1|a2|a3),(a0|a1|a2|a3),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym785_operands,_sym788,1,0, 0,&_sym786,0,{}, 0,0,_sym789_argchecker,0,0,0, },
// addA_line_aX_Is8_alias_add    (1)
{ "addA_line_aX_Is8_alias_add", 0, 15, 64,  0x0, { 0 },_sym778, "^ *(a0|a1|a2|a3),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym774_operands,_sym777,1,0, 0,&_sym775,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'add.s'.
static struct adl_opcode _sym4528[] = {
  // add_s_gX_Is16_gX    (0)
  { "add_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym1701, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym1696_operands,_sym1699,1,0, 0,&_sym1697,0,{}, 0,0,_sym1700_argchecker,0,0,1, },
// add_s_gX_Is16_gX    (1)
{ "add_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym3177, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3172_operands,_sym3175,1,0, 0,&_sym3173,0,{}, 0,0,_sym3176_argchecker,0,0,1, },
// add_s_gX_Is16    (2)
{ "add_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xb8000000,},_sym1690, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1688_operands,0,0,0, 0,&_sym1689,0,{}, 0,0,0,0,0,3, },
// add_s_gX_Is16    (3)
{ "add_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xb8000000,},_sym3166, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3164_operands,0,0,0, 0,&_sym3165,0,{}, 0,0,0,0,0,3, },
// add_s_gX_Is16_sp_sp    (4)
{ "add_s_gX_Is16_sp_sp", 0, 25, 64,  0x0, { 0 },_sym1722, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym1718_operands,_sym1721,1,0, 0,&_sym1719,0,{}, 0,0,0,0,0,5, },
// add_s_gX_Is16_sp_sp    (5)
{ "add_s_gX_Is16_sp_sp", 0, 25, 64,  0x0, { 0 },_sym3198, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym3194_operands,_sym3197,1,0, 0,&_sym3195,0,{}, 0,0,0,0,0,5, },
// add_s_gX_Is16_sp    (6)
{ "add_s_gX_Is16_sp", 0, 25, 64,  0x0, { 0 },_sym1712, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1708_operands,_sym1711,1,0, 0,&_sym1709,0,{}, 0,0,0,0,0,7, },
// add_s_gX_Is16_sp    (7)
{ "add_s_gX_Is16_sp", 0, 25, 64,  0x0, { 0 },_sym3188, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3184_operands,_sym3187,1,0, 0,&_sym3185,0,{}, 0,0,0,0,0,7, },
};

// Instructions named 'add.z'.
static struct adl_opcode _sym4529[] = {
  // add_z_gX_Iu16_gX    (0)
  { "add_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym1741, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym1736_operands,_sym1739,1,0, 0,&_sym1737,0,{}, 0,0,_sym1740_argchecker,0,0,1, },
// add_z_gX_Iu16_gX    (1)
{ "add_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym3217, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3212_operands,_sym3215,1,0, 0,&_sym3213,0,{}, 0,0,_sym3216_argchecker,0,0,1, },
// add_z_gX_Iu16    (2)
{ "add_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xb0000000,},_sym1730, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1728_operands,0,0,0, 0,&_sym1729,0,{}, 0,0,0,0,0,3, },
// add_z_gX_Iu16    (3)
{ "add_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xb0000000,},_sym3206, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3204_operands,0,0,0, 0,&_sym3205,0,{}, 0,0,0,0,0,3, },
// add_z_gX_Iu16_sp_sp    (4)
{ "add_z_gX_Iu16_sp_sp", 0, 25, 64,  0x0, { 0 },_sym1762, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym1758_operands,_sym1761,1,0, 0,&_sym1759,0,{}, 0,0,0,0,0,5, },
// add_z_gX_Iu16_sp_sp    (5)
{ "add_z_gX_Iu16_sp_sp", 0, 25, 64,  0x0, { 0 },_sym3238, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym3234_operands,_sym3237,1,0, 0,&_sym3235,0,{}, 0,0,0,0,0,5, },
// add_z_gX_Iu16_sp    (6)
{ "add_z_gX_Iu16_sp", 0, 25, 64,  0x0, { 0 },_sym1752, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1748_operands,_sym1751,1,0, 0,&_sym1749,0,{}, 0,0,0,0,0,7, },
// add_z_gX_Iu16_sp    (7)
{ "add_z_gX_Iu16_sp", 0, 25, 64,  0x0, { 0 },_sym3228, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3224_operands,_sym3227,1,0, 0,&_sym3225,0,{}, 0,0,0,0,0,7, },
};

// Instructions named 'adda'.
static struct adl_opcode _sym4530[] = {
  // addA_aX_aX_Is8    (0)
  { "addA_aX_aX_Is8", 0, 15, 64,  0x0, { 0 },_sym760, "^ *(a0|a1|a2|a3),(a0|a1|a2|a3),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym753_operands,_sym758,1,0, 0,&_sym754,0,{}, 0,0,_sym759_argchecker,0,0,0, },
// addA_aX_Is8_alias    (1)
{ "addA_aX_Is8_alias", 0, 15, 64,  0x0, { 0 },_sym745, "^ *(a0|a1|a2|a3),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym739_operands,_sym744,1,0, 0,&_sym740,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'adda.laddr'.
static struct adl_opcode _sym4531[] = {
  // addA_line_aX_aX_Is8    (0)
  { "addA_line_aX_aX_Is8", 0, 15, 64,  0x0, { 0 },_sym784, "^ *(a0|a1|a2|a3),(a0|a1|a2|a3),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym779_operands,_sym782,1,0, 0,&_sym780,0,{}, 0,0,_sym783_argchecker,0,0,0, },
// addA_line_aX_Is8_alias    (1)
{ "addA_line_aX_Is8_alias", 0, 15, 64,  0x0, { 0 },_sym773, "^ *(a0|a1|a2|a3),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym769_operands,_sym772,1,0, 0,&_sym770,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'adda_ax_is8'.
static struct adl_opcode _sym4532[] = {
  // addA_aX_Is8    (0)
  { "addA_aX_Is8", 1, 15, 64,  0x0, { 0x0,0xb0000000,},_sym738, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 3, 6, 0, 0, _sym736_operands,0,0,0, 0,&_sym737,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'and'.
static struct adl_opcode _sym4533[] = {
  // and_cc_gZ_gX_gY_110    (0)
  { "and_cc_gZ_gX_gY_110", 3, 25, 64,  0x0, { 0x0,0x37004400,},_sym1797, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym1795_operands,0,0,1, 0,&_sym1796,0,{}, 0,0,0,0,0,7, },
  // and_cc_gZ_gX_gY_000    (1)
  { "and_cc_gZ_gX_gY_000", 3, 25, 64,  0x0, { 0x0,0x37000000,},_sym3255, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym3253_operands,0,0,1, 0,&_sym3254,0,{}, 0,0,0,0,0,15, },
  // and_cc_gZ_gX_gY_001    (2)
  { "and_cc_gZ_gX_gY_001", 3, 25, 64,  0x0, { 0x0,0x37040000,},_sym3258, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3256_operands,0,0,1, 0,&_sym3257,0,{}, 0,0,0,0,0,14, },
  // and_cc_gZ_gX_gY_010    (3)
  { "and_cc_gZ_gX_gY_010", 3, 25, 64,  0x0, { 0x0,0x37004000,},_sym3261, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym3259_operands,0,0,1, 0,&_sym3260,0,{}, 0,0,0,0,0,13, },
  // and_cc_gZ_gX_gY_011    (4)
  { "and_cc_gZ_gX_gY_011", 3, 25, 64,  0x0, { 0x0,0x37044000,},_sym3264, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3262_operands,0,0,1, 0,&_sym3263,0,{}, 0,0,0,0,0,12, },
  // and_cc_gZ_gX_gY_100    (5)
  { "and_cc_gZ_gX_gY_100", 3, 25, 64,  0x0, { 0x0,0x37000400,},_sym3267, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym3265_operands,0,0,1, 0,&_sym3266,0,{}, 0,0,0,0,0,11, },
  // and_cc_gZ_gX_gY_101    (6)
  { "and_cc_gZ_gX_gY_101", 3, 25, 64,  0x0, { 0x0,0x37040400,},_sym3270, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3268_operands,0,0,1, 0,&_sym3269,0,{}, 0,0,0,0,0,10, },
  // and_cc_gZ_gX_gY_110    (7)
  { "and_cc_gZ_gX_gY_110", 3, 25, 64,  0x0, { 0x0,0x37004400,},_sym3273, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym3271_operands,0,0,1, 0,&_sym3272,0,{}, 0,0,0,0,0,7, },
  // and_cc_gZ_gX_gY_111    (8)
  { "and_cc_gZ_gX_gY_111", 3, 25, 64,  0x0, { 0x0,0x37044400,},_sym3276, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3274_operands,0,0,1, 0,&_sym3275,0,{}, 0,0,0,0,0,9, },
  // and_cc_gZ_gX_gY_111    (9)
  { "and_cc_gZ_gX_gY_111", 3, 25, 64,  0x0, { 0x0,0x37044400,},_sym1800, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1798_operands,0,0,1, 0,&_sym1799,0,{}, 0,0,0,0,0,9, },
  // and_cc_gZ_gX_gY_101    (10)
  { "and_cc_gZ_gX_gY_101", 3, 25, 64,  0x0, { 0x0,0x37040400,},_sym1794, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1792_operands,0,0,1, 0,&_sym1793,0,{}, 0,0,0,0,0,10, },
  // and_cc_gZ_gX_gY_100    (11)
  { "and_cc_gZ_gX_gY_100", 3, 25, 64,  0x0, { 0x0,0x37000400,},_sym1791, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym1789_operands,0,0,1, 0,&_sym1790,0,{}, 0,0,0,0,0,11, },
  // and_cc_gZ_gX_gY_011    (12)
  { "and_cc_gZ_gX_gY_011", 3, 25, 64,  0x0, { 0x0,0x37044000,},_sym1788, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1786_operands,0,0,1, 0,&_sym1787,0,{}, 0,0,0,0,0,12, },
  // and_cc_gZ_gX_gY_010    (13)
  { "and_cc_gZ_gX_gY_010", 3, 25, 64,  0x0, { 0x0,0x37004000,},_sym1785, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym1783_operands,0,0,1, 0,&_sym1784,0,{}, 0,0,0,0,0,13, },
  // and_cc_gZ_gX_gY_001    (14)
  { "and_cc_gZ_gX_gY_001", 3, 25, 64,  0x0, { 0x0,0x37040000,},_sym1782, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1780_operands,0,0,1, 0,&_sym1781,0,{}, 0,0,0,0,0,14, },
  // and_cc_gZ_gX_gY_000    (15)
  { "and_cc_gZ_gX_gY_000", 3, 25, 64,  0x0, { 0x0,0x37000000,},_sym1779, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym1777_operands,0,0,1, 0,&_sym1778,0,{}, 0,0,0,0,0,15, },
  // and_cc_sp_gY_gX_11    (16)
  { "and_cc_sp_gY_gX_11", 3, 25, 64,  0x0, { 0x0,0x37044700,},_sym3318, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3316_operands,0,0,1, 0,&_sym3317,0,{}, 0,0,0,0,0,39, },
  // and_cc_gZ_sp_gX_00    (17)
  { "and_cc_gZ_sp_gX_00", 3, 25, 64,  0x0, { 0x0,0x37007000,},_sym3291, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3289_operands,0,0,1, 0,&_sym3290,0,{}, 0,0,0,0,0,33, },
  // and_cc_gZ_sp_gX_10    (18)
  { "and_cc_gZ_sp_gX_10", 3, 25, 64,  0x0, { 0x0,0x37007400,},_sym3297, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3295_operands,0,0,1, 0,&_sym3296,0,{}, 0,0,0,0,0,26, },
  // and_cc_gZ_sp_gX_01    (19)
  { "and_cc_gZ_sp_gX_01", 3, 25, 64,  0x0, { 0x0,0x37047000,},_sym3294, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3292_operands,0,0,1, 0,&_sym3293,0,{}, 0,0,0,0,0,34, },
  // and_cc_sp_gY_gX_00    (20)
  { "and_cc_sp_gY_gX_00", 3, 25, 64,  0x0, { 0x0,0x37000700,},_sym1833, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1831_operands,0,0,1, 0,&_sym1832,0,{}, 0,0,0,0,0,28, },
  // and_cc_sp_gY_gX_10    (21)
  { "and_cc_sp_gY_gX_10", 3, 25, 64,  0x0, { 0x0,0x37004700,},_sym3315, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3313_operands,0,0,1, 0,&_sym3314,0,{}, 0,0,0,0,0,38, },
  // and_cc_gZ_gX_sp_11    (22)
  { "and_cc_gZ_gX_sp_11", 3, 25, 64,  0x0, { 0x0,0x37074400,},_sym3288, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym3286_operands,0,0,1, 0,&_sym3287,0,{}, 0,0,0,0,0,32, },
  // and_cc_gZ_gX_sp_10    (23)
  { "and_cc_gZ_gX_sp_10", 3, 25, 64,  0x0, { 0x0,0x37070400,},_sym3285, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym3283_operands,0,0,1, 0,&_sym3284,0,{}, 0,0,0,0,0,31, },
  // and_cc_gZ_gX_sp_00    (24)
  { "and_cc_gZ_gX_sp_00", 3, 25, 64,  0x0, { 0x0,0x37070000,},_sym3279, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym3277_operands,0,0,1, 0,&_sym3278,0,{}, 0,0,0,0,0,29, },
  // and_cc_gZ_gX_sp_01    (25)
  { "and_cc_gZ_gX_sp_01", 3, 25, 64,  0x0, { 0x0,0x37074000,},_sym3282, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym3280_operands,0,0,1, 0,&_sym3281,0,{}, 0,0,0,0,0,30, },
  // and_cc_gZ_sp_gX_10    (26)
  { "and_cc_gZ_sp_gX_10", 3, 25, 64,  0x0, { 0x0,0x37007400,},_sym1821, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1819_operands,0,0,1, 0,&_sym1820,0,{}, 0,0,0,0,0,26, },
  // and_cc_sp_gY_gX_01    (27)
  { "and_cc_sp_gY_gX_01", 3, 25, 64,  0x0, { 0x0,0x37040700,},_sym3312, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3310_operands,0,0,1, 0,&_sym3311,0,{}, 0,0,0,0,0,37, },
  // and_cc_sp_gY_gX_00    (28)
  { "and_cc_sp_gY_gX_00", 3, 25, 64,  0x0, { 0x0,0x37000700,},_sym3309, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3307_operands,0,0,1, 0,&_sym3308,0,{}, 0,0,0,0,0,28, },
  // and_cc_gZ_gX_sp_00    (29)
  { "and_cc_gZ_gX_sp_00", 3, 25, 64,  0x0, { 0x0,0x37070000,},_sym1803, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym1801_operands,0,0,1, 0,&_sym1802,0,{}, 0,0,0,0,0,29, },
  // and_cc_gZ_gX_sp_01    (30)
  { "and_cc_gZ_gX_sp_01", 3, 25, 64,  0x0, { 0x0,0x37074000,},_sym1806, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym1804_operands,0,0,1, 0,&_sym1805,0,{}, 0,0,0,0,0,30, },
  // and_cc_gZ_gX_sp_10    (31)
  { "and_cc_gZ_gX_sp_10", 3, 25, 64,  0x0, { 0x0,0x37070400,},_sym1809, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym1807_operands,0,0,1, 0,&_sym1808,0,{}, 0,0,0,0,0,31, },
  // and_cc_gZ_gX_sp_11    (32)
  { "and_cc_gZ_gX_sp_11", 3, 25, 64,  0x0, { 0x0,0x37074400,},_sym1812, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym1810_operands,0,0,1, 0,&_sym1811,0,{}, 0,0,0,0,0,32, },
  // and_cc_gZ_sp_gX_00    (33)
  { "and_cc_gZ_sp_gX_00", 3, 25, 64,  0x0, { 0x0,0x37007000,},_sym1815, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1813_operands,0,0,1, 0,&_sym1814,0,{}, 0,0,0,0,0,33, },
  // and_cc_gZ_sp_gX_01    (34)
  { "and_cc_gZ_sp_gX_01", 3, 25, 64,  0x0, { 0x0,0x37047000,},_sym1818, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1816_operands,0,0,1, 0,&_sym1817,0,{}, 0,0,0,0,0,34, },
  // and_cc_gZ_sp_gX_11    (35)
  { "and_cc_gZ_sp_gX_11", 3, 25, 64,  0x0, { 0x0,0x37047400,},_sym3300, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3298_operands,0,0,1, 0,&_sym3299,0,{}, 0,0,0,0,0,36, },
  // and_cc_gZ_sp_gX_11    (36)
  { "and_cc_gZ_sp_gX_11", 3, 25, 64,  0x0, { 0x0,0x37047400,},_sym1824, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1822_operands,0,0,1, 0,&_sym1823,0,{}, 0,0,0,0,0,36, },
  // and_cc_sp_gY_gX_01    (37)
  { "and_cc_sp_gY_gX_01", 3, 25, 64,  0x0, { 0x0,0x37040700,},_sym1836, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1834_operands,0,0,1, 0,&_sym1835,0,{}, 0,0,0,0,0,37, },
  // and_cc_sp_gY_gX_10    (38)
  { "and_cc_sp_gY_gX_10", 3, 25, 64,  0x0, { 0x0,0x37004700,},_sym1839, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1837_operands,0,0,1, 0,&_sym1838,0,{}, 0,0,0,0,0,38, },
  // and_cc_sp_gY_gX_11    (39)
  { "and_cc_sp_gY_gX_11", 3, 25, 64,  0x0, { 0x0,0x37044700,},_sym1842, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1840_operands,0,0,1, 0,&_sym1841,0,{}, 0,0,0,0,0,39, },
  // and_cc_sp_gX_sp_1    (40)
  { "and_cc_sp_gX_sp_1", 3, 25, 64,  0x0, { 0x0,0x37074700,},_sym3306, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym3304_operands,0,0,1, 0,&_sym3305,0,{}, 0,0,0,0,0,48, },
  // and_cc_sp_gX_sp_0    (41)
  { "and_cc_sp_gX_sp_0", 3, 25, 64,  0x0, { 0x0,0x37070700,},_sym3303, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym3301_operands,0,0,1, 0,&_sym3302,0,{}, 0,0,0,0,0,49, },
  // and_cc_sp_sp_gY_1    (42)
  { "and_cc_sp_sp_gY_1", 3, 25, 64,  0x0, { 0x0,0x37047700,},_sym1848, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym1846_operands,0,0,1, 0,&_sym1847,0,{}, 0,0,0,0,0,46, },
  // and_cc_gX_sp_sp_1    (43)
  { "and_cc_gX_sp_sp_1", 3, 25, 64,  0x0, { 0x0,0x37077400,},_sym3252, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,sp$", 0, 2, 2, 0, 1, _sym3250_operands,0,0,1, 0,&_sym3251,0,{}, 0,0,0,0,0,50, },
  // and_cc_gX_sp_sp_0    (44)
  { "and_cc_gX_sp_sp_0", 3, 25, 64,  0x0, { 0x0,0x37077000,},_sym3249, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,sp$", 0, 2, 2, 0, 1, _sym3247_operands,0,0,1, 0,&_sym3248,0,{}, 0,0,0,0,0,51, },
  // and_cc_sp_sp_gY_0    (45)
  { "and_cc_sp_sp_gY_0", 3, 25, 64,  0x0, { 0x0,0x37007700,},_sym3321, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym3319_operands,0,0,1, 0,&_sym3320,0,{}, 0,0,0,0,0,47, },
  // and_cc_sp_sp_gY_1    (46)
  { "and_cc_sp_sp_gY_1", 3, 25, 64,  0x0, { 0x0,0x37047700,},_sym3324, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym3322_operands,0,0,1, 0,&_sym3323,0,{}, 0,0,0,0,0,46, },
  // and_cc_sp_sp_gY_0    (47)
  { "and_cc_sp_sp_gY_0", 3, 25, 64,  0x0, { 0x0,0x37007700,},_sym1845, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym1843_operands,0,0,1, 0,&_sym1844,0,{}, 0,0,0,0,0,47, },
  // and_cc_sp_gX_sp_1    (48)
  { "and_cc_sp_gX_sp_1", 3, 25, 64,  0x0, { 0x0,0x37074700,},_sym1830, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym1828_operands,0,0,1, 0,&_sym1829,0,{}, 0,0,0,0,0,48, },
  // and_cc_sp_gX_sp_0    (49)
  { "and_cc_sp_gX_sp_0", 3, 25, 64,  0x0, { 0x0,0x37070700,},_sym1827, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym1825_operands,0,0,1, 0,&_sym1826,0,{}, 0,0,0,0,0,49, },
  // and_cc_gX_sp_sp_1    (50)
  { "and_cc_gX_sp_sp_1", 3, 25, 64,  0x0, { 0x0,0x37077400,},_sym1776, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,sp$", 0, 2, 2, 0, 1, _sym1774_operands,0,0,1, 0,&_sym1775,0,{}, 0,0,0,0,0,50, },
  // and_cc_gX_sp_sp_0    (51)
  { "and_cc_gX_sp_sp_0", 3, 25, 64,  0x0, { 0x0,0x37077000,},_sym1773, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,sp$", 0, 2, 2, 0, 1, _sym1771_operands,0,0,1, 0,&_sym1772,0,{}, 0,0,0,0,0,51, },
  // and_gX_gX_Iu16    (52)
  { "and_gX_gX_Iu16", 0, 25, 64,  0x0, { 0 },_sym1857, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym1852_operands,_sym1855,1,0, 0,&_sym1853,0,{}, 0,0,_sym1856_argchecker,0,0,53, },
// and_gX_gX_Iu16    (53)
{ "and_gX_gX_Iu16", 0, 25, 64,  0x0, { 0 },_sym3333, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3328_operands,_sym3331,1,0, 0,&_sym3329,0,{}, 0,0,_sym3332_argchecker,0,0,53, },
// and_gX_Iu16    (54)
{ "and_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x18000000,},_sym3327, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3325_operands,0,0,0, 0,&_sym3326,0,{}, 0,0,0,0,0,55, },
// and_gX_Iu16    (55)
{ "and_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x18000000,},_sym1851, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1849_operands,0,0,0, 0,&_sym1850,0,{}, 0,0,0,0,0,55, },
// and_sp_Iu16    (56)
{ "and_sp_Iu16", 0, 25, 64,  0x0, { 0 },_sym1862, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1858_operands,_sym1861,1,0, 0,&_sym1859,0,{}, 0,0,0,0,0,57, },
// and_sp_Iu16    (57)
{ "and_sp_Iu16", 0, 25, 64,  0x0, { 0 },_sym3338, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3334_operands,_sym3337,1,0, 0,&_sym3335,0,{}, 0,0,0,0,0,57, },
// and_H    (58)
{ "and_H", 3, 25, 64,  0x0, { 0x0,0x18000600,},_sym3246, "^ *H$", 0, 0, 0, 0, 0, _sym3244_operands,0,0,0, 0,&_sym3245,0,{}, 0,0,0,0,0,-1, },
// and_H    (59)
{ "and_H", 3, 25, 64,  0x0, { 0x0,0x18000600,},_sym1770, "^ *H$", 0, 0, 0, 0, 0, _sym1768_operands,0,0,0, 0,&_sym1769,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'andl'.
static struct adl_opcode _sym4534[] = {
  // andl_gX_Iu32_andl_gX_gX_Iu32    (0)
  { "andl_gX_Iu32_andl_gX_gX_Iu32", 0, 64, 64,  0x0, { 0 },_sym344, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym339_operands,_sym342,1,0, 0,&_sym340,0,{}, 0,0,_sym343_argchecker,0,0,0, },
// andl_gX_Iu32    (1)
{ "andl_gX_Iu32", 8, 64, 64,  0x0, { 0x0,0xc4400,},_sym338, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym336_operands,0,0,0, 0,&_sym337,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'atan'.
static struct adl_opcode _sym4535[] = {
  // atan    (0)
  { "atan", 0, 4, 64,  0x0, { 0x0,0xd0000000,},_sym1523, "$", 0, 0, 0, 0, 0, _sym1521_operands,0,0,0, 0,&_sym1522,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'au_nop'.
static struct adl_opcode _sym4536[] = {
  // au_nop    (0)
  { "au_nop", 0, 4, 64,  0x0, { },_sym1526, "$", 0, 0, 0, 0, 0, _sym1524_operands,0,0,0, 0,&_sym1525,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'bclr'.
static struct adl_opcode _sym4537[] = {
  // bclr_cc_gZ_gY_gX    (0)
  { "bclr_cc_gZ_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3a000000,},_sym1865, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1863_operands,0,0,1, 0,&_sym1864,0,{}, 0,0,0,0,0,1, },
  // bclr_cc_gZ_gY_gX    (1)
  { "bclr_cc_gZ_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3a000000,},_sym3341, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3339_operands,0,0,1, 0,&_sym3340,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'bin2num'.
static struct adl_opcode _sym4538[] = {
  // bin2num_Rx    (0)
  { "bin2num_Rx", 0, 7, 64,  0x0, { 0x0,0xc0000000,},_sym1415, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1413_operands,0,0,0, 0,&_sym1414,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'btst'.
static struct adl_opcode _sym4539[] = {
  // btst_gX_I    (0)
  { "btst_gX_I", 3, 25, 64,  0x0, { 0x0,0x1c00780,},_sym1868, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1866_operands,0,0,0, 0,&_sym1867,0,{}, 0,0,0,0,0,1, },
// btst_gX_I    (1)
{ "btst_gX_I", 3, 25, 64,  0x0, { 0x0,0x1c00780,},_sym3344, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3342_operands,0,0,0, 0,&_sym3343,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'clr'.
static struct adl_opcode _sym4540[] = {
  // clr_Rx_ld_Rx_zeros    (0)
  { "clr_Rx_ld_Rx_zeros", 0, 7, 64,  0x0, { 0x0,0xa0000000,},_sym1418, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1416_operands,0,0,0, 0,&_sym1417,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'clr.g'.
static struct adl_opcode _sym4541[] = {
  // clr_g_Iu12    (0)
  { "clr_g_Iu12", 3, 25, 64,  0x0, { },_sym1874, "^ *([^},[ ]+)$", 0, 1, 1, 0, 0, _sym1872_operands,0,0,0, 0,&_sym1873,0,{}, 0,0,0,0,0,1, },
// clr_g_Iu12    (1)
{ "clr_g_Iu12", 3, 25, 64,  0x0, { },_sym3350, "^ *([^},[ ]+)$", 0, 1, 1, 0, 0, _sym3348_operands,0,0,0, 0,&_sym3349,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'clr.vra'.
static struct adl_opcode _sym4542[] = {
  // clr_VRA_gX_gY    (0)
  { "clr_VRA_gX_gY", 3, 25, 64,  0x0, { 0x0,0x3cc00000,},_sym1871, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym1869_operands,0,0,0, 0,&_sym1870,0,{}, 0,0,0,0,0,-1, },
  // clr_VRA_gX_gY    (1)
  { "clr_VRA_gX_gY", 3, 25, 64,  0x0, { 0x0,0x3cc00000,},_sym3347, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym3345_operands,0,0,0, 0,&_sym3346,0,{}, 0,0,0,0,0,-1, },
  // clr_VRA    (2)
  { "clr_VRA", 1, 15, 64,  0x0, { 0x0,0xfd400000,},_sym1113, "$", 0, 0, 0, 0, 0, _sym1111_operands,0,0,0, 0,&_sym1112,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'cmp'.
static struct adl_opcode _sym4543[] = {
  // cmp_cc_gX_gY_01    (0)
  { "cmp_cc_gX_gY_01", 3, 25, 64,  0x0, { 0x0,0x35040780,},_sym3356, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3354_operands,0,0,1, 0,&_sym3355,0,{}, 0,0,0,0,0,2, },
  // cmp_cc_gX_gY_00    (1)
  { "cmp_cc_gX_gY_00", 3, 25, 64,  0x0, { 0x0,0x35000780,},_sym1877, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1875_operands,0,0,1, 0,&_sym1876,0,{}, 0,0,0,0,0,5, },
  // cmp_cc_gX_gY_01    (2)
  { "cmp_cc_gX_gY_01", 3, 25, 64,  0x0, { 0x0,0x35040780,},_sym1880, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1878_operands,0,0,1, 0,&_sym1879,0,{}, 0,0,0,0,0,2, },
  // cmp_cc_gX_gY_10    (3)
  { "cmp_cc_gX_gY_10", 3, 25, 64,  0x0, { 0x0,0x35004780,},_sym1883, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym1881_operands,0,0,1, 0,&_sym1882,0,{}, 0,0,0,0,0,7, },
  // cmp_cc_gX_gY_11    (4)
  { "cmp_cc_gX_gY_11", 3, 25, 64,  0x0, { 0x0,0x35044780,},_sym1886, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym1884_operands,0,0,1, 0,&_sym1885,0,{}, 0,0,0,0,0,6, },
  // cmp_cc_gX_gY_00    (5)
  { "cmp_cc_gX_gY_00", 3, 25, 64,  0x0, { 0x0,0x35000780,},_sym3353, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3351_operands,0,0,1, 0,&_sym3352,0,{}, 0,0,0,0,0,5, },
  // cmp_cc_gX_gY_11    (6)
  { "cmp_cc_gX_gY_11", 3, 25, 64,  0x0, { 0x0,0x35044780,},_sym3362, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3360_operands,0,0,1, 0,&_sym3361,0,{}, 0,0,0,0,0,6, },
  // cmp_cc_gX_gY_10    (7)
  { "cmp_cc_gX_gY_10", 3, 25, 64,  0x0, { 0x0,0x35004780,},_sym3359, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3357_operands,0,0,1, 0,&_sym3358,0,{}, 0,0,0,0,0,7, },
  // cmp_cc_sp_gX_0    (8)
  { "cmp_cc_sp_gX_0", 3, 25, 64,  0x0, { 0x0,0x35007780,},_sym1895, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym1893_operands,0,0,1, 0,&_sym1894,0,{}, 0,0,0,0,0,10, },
  // cmp_cc_gY_sp_1    (9)
  { "cmp_cc_gY_sp_1", 3, 25, 64,  0x0, { 0x0,0x35074780,},_sym3368, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym3366_operands,0,0,1, 0,&_sym3367,0,{}, 0,0,0,0,0,13, },
  // cmp_cc_sp_gX_0    (10)
  { "cmp_cc_sp_gX_0", 3, 25, 64,  0x0, { 0x0,0x35007780,},_sym3371, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym3369_operands,0,0,1, 0,&_sym3370,0,{}, 0,0,0,0,0,10, },
  // cmp_cc_sp_gX_1    (11)
  { "cmp_cc_sp_gX_1", 3, 25, 64,  0x0, { 0x0,0x35047780,},_sym3374, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym3372_operands,0,0,1, 0,&_sym3373,0,{}, 0,0,0,0,0,12, },
  // cmp_cc_sp_gX_1    (12)
  { "cmp_cc_sp_gX_1", 3, 25, 64,  0x0, { 0x0,0x35047780,},_sym1898, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym1896_operands,0,0,1, 0,&_sym1897,0,{}, 0,0,0,0,0,12, },
  // cmp_cc_gY_sp_1    (13)
  { "cmp_cc_gY_sp_1", 3, 25, 64,  0x0, { 0x0,0x35074780,},_sym1892, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym1890_operands,0,0,1, 0,&_sym1891,0,{}, 0,0,0,0,0,13, },
  // cmp_cc_gY_sp_0    (14)
  { "cmp_cc_gY_sp_0", 3, 25, 64,  0x0, { 0x0,0x35070780,},_sym1889, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym1887_operands,0,0,1, 0,&_sym1888,0,{}, 0,0,0,0,0,15, },
  // cmp_cc_gY_sp_0    (15)
  { "cmp_cc_gY_sp_0", 3, 25, 64,  0x0, { 0x0,0x35070780,},_sym3365, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym3363_operands,0,0,1, 0,&_sym3364,0,{}, 0,0,0,0,0,15, },
  // cmp_cc_sp_sp    (16)
  { "cmp_cc_sp_sp", 3, 25, 64,  0x0, { 0x0,0x35077780,},_sym1901, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp$", 0, 1, 1, 0, 1, _sym1899_operands,0,0,1, 0,&_sym1900,0,{}, 0,0,0,0,0,17, },
  // cmp_cc_sp_sp    (17)
  { "cmp_cc_sp_sp", 3, 25, 64,  0x0, { 0x0,0x35077780,},_sym3377, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp$", 0, 1, 1, 0, 1, _sym3375_operands,0,0,1, 0,&_sym3376,0,{}, 0,0,0,0,0,17, },
  // cmp_aX_Iu17    (18)
  { "cmp_aX_Iu17", 8, 64, 64,  0x0, { 0x0,0x8000,},_sym347, "^ *(a0|a1|a2|a3),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym345_operands,0,0,0, 0,&_sym346,0,{}, 0,0,0,0,0,18, },
// cmp_s_gX_Is16_cmp    (19)
{ "cmp_s_gX_Is16_cmp", 0, 25, 64,  0x0, { 0 },_sym3385, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3381_operands,_sym3384,1,0, 0,&_sym3382,0,{}, 0,0,0,0,0,23, },
// cmp_z_gX_Iu16_cmp    (20)
{ "cmp_z_gX_Iu16_cmp", 0, 25, 64,  0x0, { 0 },_sym3403, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3399_operands,_sym3402,1,0, 0,&_sym3400,0,{}, 0,0,0,0,0,21, },
// cmp_z_gX_Iu16_cmp    (21)
{ "cmp_z_gX_Iu16_cmp", 0, 25, 64,  0x0, { 0 },_sym1927, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1923_operands,_sym1926,1,0, 0,&_sym1924,0,{}, 0,0,0,0,0,21, },
// cmp_s_gX_Is16_cmp    (22)
{ "cmp_s_gX_Is16_cmp", 0, 25, 64,  0x0, { 0 },_sym1909, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1905_operands,_sym1908,1,0, 0,&_sym1906,0,{}, 0,0,0,0,0,23, },
// cmp_gX_I32    (23)
{ "cmp_gX_I32", 8, 64, 64,  0x0, { 0x0,0xc4a00,},_sym350, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym348_operands,0,0,0, 0,&_sym349,0,{}, 0,0,0,0,0,23, },
// cmp_z_gX_Iu16_sp_cmp    (24)
{ "cmp_z_gX_Iu16_sp_cmp", 0, 25, 64,  0x0, { 0 },_sym3413, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3409_operands,_sym3412,1,0, 0,&_sym3410,0,{}, 0,0,0,0,0,26, },
// cmp_s_gX_Is16_sp_cmp    (25)
{ "cmp_s_gX_Is16_sp_cmp", 0, 25, 64,  0x0, { 0 },_sym3395, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3391_operands,_sym3394,1,0, 0,&_sym3392,0,{}, 0,0,0,0,0,27, },
// cmp_z_gX_Iu16_sp_cmp    (26)
{ "cmp_z_gX_Iu16_sp_cmp", 0, 25, 64,  0x0, { 0 },_sym1937, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1933_operands,_sym1936,1,0, 0,&_sym1934,0,{}, 0,0,0,0,0,26, },
// cmp_s_gX_Is16_sp_cmp    (27)
{ "cmp_s_gX_Is16_sp_cmp", 0, 25, 64,  0x0, { 0 },_sym1919, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1915_operands,_sym1918,1,0, 0,&_sym1916,0,{}, 0,0,0,0,0,27, },
};

// Instructions named 'cmp.s'.
static struct adl_opcode _sym4544[] = {
  // cmp_s_gX_Is16    (0)
  { "cmp_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0x78000000,},_sym1904, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1902_operands,0,0,0, 0,&_sym1903,0,{}, 0,0,0,0,0,1, },
// cmp_s_gX_Is16    (1)
{ "cmp_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0x78000000,},_sym3380, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3378_operands,0,0,0, 0,&_sym3379,0,{}, 0,0,0,0,0,1, },
// cmp_s_gX_Is16_sp    (2)
{ "cmp_s_gX_Is16_sp", 0, 25, 64,  0x0, { 0 },_sym1914, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1910_operands,_sym1913,1,0, 0,&_sym1911,0,{}, 0,0,0,0,0,3, },
// cmp_s_gX_Is16_sp    (3)
{ "cmp_s_gX_Is16_sp", 0, 25, 64,  0x0, { 0 },_sym3390, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3386_operands,_sym3389,1,0, 0,&_sym3387,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'cmp.z'.
static struct adl_opcode _sym4545[] = {
  // cmp_z_gX_Iu16    (0)
  { "cmp_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x70000000,},_sym1922, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1920_operands,0,0,0, 0,&_sym1921,0,{}, 0,0,0,0,0,1, },
// cmp_z_gX_Iu16    (1)
{ "cmp_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x70000000,},_sym3398, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3396_operands,0,0,0, 0,&_sym3397,0,{}, 0,0,0,0,0,1, },
// cmp_z_gX_Iu16_sp    (2)
{ "cmp_z_gX_Iu16_sp", 0, 25, 64,  0x0, { 0 },_sym1932, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1928_operands,_sym1931,1,0, 0,&_sym1929,0,{}, 0,0,0,0,0,3, },
// cmp_z_gX_Iu16_sp    (3)
{ "cmp_z_gX_Iu16_sp", 0, 25, 64,  0x0, { 0 },_sym3408, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3404_operands,_sym3407,1,0, 0,&_sym3405,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'dif'.
static struct adl_opcode _sym4546[] = {
  // dif    (0)
  { "dif", 0, 4, 64,  0x0, { 0x0,0xf0000000,},_sym1529, "$", 0, 0, 0, 0, 0, _sym1527_operands,0,0,0, 0,&_sym1528,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'dit'.
static struct adl_opcode _sym4547[] = {
  // mad_dit_dit    (0)
  { "mad_dit_dit", 0, 4, 64,  0x0, { 0 },_sym1540, "$", 0, 0, 0, 0, 0, _sym1536_operands,_sym1539,1,0, 0,&_sym1537,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'div'.
static struct adl_opcode _sym4548[] = {
  // div_s_cc_gZ_gX_gY_cond    (0)
  { "div_s_cc_gZ_gX_gY_cond", 0, 25, 64,  0x0, { 0 },_sym1946, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv|\\.s\\.al|\\.s\\.cs|\\.s\\.lo|\\.s\\.vs|\\.s\\.hi|\\.s\\.eq|\\.s\\.ge|\\.s\\.gt|\\.s\\.pl|\\.s\\.mi|\\.s\\.le|\\.s\\.lt|\\.s\\.ne|\\.s\\.ls|\\.s\\.vc|\\.s\\.cc|\\.s\\.hs|\\.s\\.nv) (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym1941_operands,_sym1945,1,1, 0,&_sym1942,0,{}, 0,0,0,0,0,1, },
  // div_s_cc_gZ_gX_gY_cond    (1)
  { "div_s_cc_gZ_gX_gY_cond", 0, 25, 64,  0x0, { 0 },_sym3422, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv|\\.s\\.al|\\.s\\.cs|\\.s\\.lo|\\.s\\.vs|\\.s\\.hi|\\.s\\.eq|\\.s\\.ge|\\.s\\.gt|\\.s\\.pl|\\.s\\.mi|\\.s\\.le|\\.s\\.lt|\\.s\\.ne|\\.s\\.ls|\\.s\\.vc|\\.s\\.cc|\\.s\\.hs|\\.s\\.nv) (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3417_operands,_sym3421,1,1, 0,&_sym3418,0,{}, 0,0,0,0,0,1, },
  // div_s_cc_gZ_gX_gY_unsigned    (2)
  { "div_s_cc_gZ_gX_gY_unsigned", 0, 25, 64,  0x0, { 0 },_sym1956, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym1952_operands,_sym1955,1,0, 0,&_sym1953,0,{}, 0,0,0,0,0,-1, },
  // div_s_cc_gZ_gX_gY_unsigned    (3)
  { "div_s_cc_gZ_gX_gY_unsigned", 0, 25, 64,  0x0, { 0 },_sym3432, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym3428_operands,_sym3431,1,0, 0,&_sym3429,0,{}, 0,0,0,0,0,-1, },
  // div_s_gX_Is16_gX_div    (4)
  { "div_s_gX_Is16_gX_div", 0, 25, 64,  0x0, { 0 },_sym1976, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym1971_operands,_sym1974,1,0, 0,&_sym1972,0,{}, 0,0,_sym1975_argchecker,0,0,6, },
// div_z_gX_Iu16_gX_div    (5)
{ "div_z_gX_Iu16_gX_div", 0, 25, 64,  0x0, { 0 },_sym1996, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym1991_operands,_sym1994,1,0, 0,&_sym1992,0,{}, 0,0,_sym1995_argchecker,0,0,7, },
// div_s_gX_Is16_gX_div    (6)
{ "div_s_gX_Is16_gX_div", 0, 25, 64,  0x0, { 0 },_sym3452, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3447_operands,_sym3450,1,0, 0,&_sym3448,0,{}, 0,0,_sym3451_argchecker,0,0,6, },
// div_z_gX_Iu16_gX_div    (7)
{ "div_z_gX_Iu16_gX_div", 0, 25, 64,  0x0, { 0 },_sym3472, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3467_operands,_sym3470,1,0, 0,&_sym3468,0,{}, 0,0,_sym3471_argchecker,0,0,7, },
// div_s_gX_Is16_div    (8)
{ "div_s_gX_Is16_div", 0, 25, 64,  0x0, { 0 },_sym1964, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1960_operands,_sym1963,1,0, 0,&_sym1961,0,{}, 0,0,0,0,0,10, },
// div_z_gX_Iu16_div    (9)
{ "div_z_gX_Iu16_div", 0, 25, 64,  0x0, { 0 },_sym1984, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1980_operands,_sym1983,1,0, 0,&_sym1981,0,{}, 0,0,0,0,0,11, },
// div_s_gX_Is16_div    (10)
{ "div_s_gX_Is16_div", 0, 25, 64,  0x0, { 0 },_sym3440, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3436_operands,_sym3439,1,0, 0,&_sym3437,0,{}, 0,0,0,0,0,10, },
// div_z_gX_Iu16_div    (11)
{ "div_z_gX_Iu16_div", 0, 25, 64,  0x0, { 0 },_sym3460, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3456_operands,_sym3459,1,0, 0,&_sym3457,0,{}, 0,0,0,0,0,11, },
};

// Instructions named 'div.s'.
static struct adl_opcode _sym4549[] = {
  // div_s_cc_gZ_gX_gY_signed    (0)
  { "div_s_cc_gZ_gX_gY_signed", 0, 25, 64,  0x0, { 0 },_sym1951, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym1947_operands,_sym1950,1,0, 0,&_sym1948,0,{}, 0,0,0,0,0,-1, },
  // div_s_cc_gZ_gX_gY_signed    (1)
  { "div_s_cc_gZ_gX_gY_signed", 0, 25, 64,  0x0, { 0 },_sym3427, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym3423_operands,_sym3426,1,0, 0,&_sym3424,0,{}, 0,0,0,0,0,-1, },
  // div_s_gX_Is16_gX    (2)
  { "div_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym1970, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym1965_operands,_sym1968,1,0, 0,&_sym1966,0,{}, 0,0,_sym1969_argchecker,0,0,3, },
// div_s_gX_Is16_gX    (3)
{ "div_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym3446, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3441_operands,_sym3444,1,0, 0,&_sym3442,0,{}, 0,0,_sym3445_argchecker,0,0,3, },
// div_s_gX_Is16    (4)
{ "div_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0x88000000,},_sym1959, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1957_operands,0,0,0, 0,&_sym1958,0,{}, 0,0,0,0,0,5, },
// div_s_gX_Is16    (5)
{ "div_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0x88000000,},_sym3435, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3433_operands,0,0,0, 0,&_sym3434,0,{}, 0,0,0,0,0,5, },
};

// Instructions named 'div.z'.
static struct adl_opcode _sym4550[] = {
  // div_z_gX_Iu16_gX    (0)
  { "div_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym1990, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym1985_operands,_sym1988,1,0, 0,&_sym1986,0,{}, 0,0,_sym1989_argchecker,0,0,1, },
// div_z_gX_Iu16_gX    (1)
{ "div_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym3466, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3461_operands,_sym3464,1,0, 0,&_sym3462,0,{}, 0,0,_sym3465_argchecker,0,0,1, },
// div_z_gX_Iu16    (2)
{ "div_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x80000000,},_sym1979, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym1977_operands,0,0,0, 0,&_sym1978,0,{}, 0,0,0,0,0,3, },
// div_z_gX_Iu16    (3)
{ "div_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x80000000,},_sym3455, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3453_operands,0,0,0, 0,&_sym3454,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'div_s_cc_gz_gx_gy'.
static struct adl_opcode _sym4551[] = {
  // div_s_cc_gZ_gX_gY    (0)
  { "div_s_cc_gZ_gX_gY", 3, 25, 64,  0x0, { 0x0,0x31000000,},_sym1940, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 5, 10, 0, 0, _sym1938_operands,0,0,0, 0,&_sym1939,0,{}, 0,0,0,0,0,1, },
// div_s_cc_gZ_gX_gY    (1)
{ "div_s_cc_gZ_gX_gY", 3, 25, 64,  0x0, { 0x0,0x31000000,},_sym3416, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 5, 10, 0, 0, _sym3414_operands,0,0,0, 0,&_sym3415,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'done'.
static struct adl_opcode _sym4552[] = {
  // done    (0)
  { "done", 8, 64, 64,  0x0, { },_sym353, "$", 0, 0, 0, 0, 0, _sym351_operands,0,0,0, 0,&_sym352,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'fa0to1'.
static struct adl_opcode _sym4553[] = {
  // fa0to1    (0)
  { "fa0to1", 1, 15, 64,  0x0, { 0x0,0xf8000000,},_sym1116, "^ *([^},[ ]+)$", 0, 1, 1, 0, 0, _sym1114_operands,0,0,0, 0,&_sym1115,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'ff0to1'.
static struct adl_opcode _sym4554[] = {
  // ff0to1_gY_gX    (0)
  { "ff0to1_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3d600000,},_sym1999, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym1997_operands,0,0,0, 0,&_sym1998,0,{}, 0,0,0,0,0,-1, },
  // ff0to1_gY_gX    (1)
  { "ff0to1_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3d600000,},_sym3475, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym3473_operands,0,0,0, 0,&_sym3474,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ff1'.
static struct adl_opcode _sym4555[] = {
  // ff1_gY_gX    (0)
  { "ff1_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3d000000,},_sym2002, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2000_operands,0,0,0, 0,&_sym2001,0,{}, 0,0,0,0,0,-1, },
  // ff1_gY_gX    (1)
  { "ff1_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3d000000,},_sym3478, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym3476_operands,0,0,0, 0,&_sym3477,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ff1to0'.
static struct adl_opcode _sym4556[] = {
  // ff1to0_gY_gX    (0)
  { "ff1to0_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3de00000,},_sym2005, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2003_operands,0,0,0, 0,&_sym2004,0,{}, 0,0,0,0,0,-1, },
  // ff1to0_gY_gX    (1)
  { "ff1to0_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3de00000,},_sym3481, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym3479_operands,0,0,0, 0,&_sym3480,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'fix2float'.
static struct adl_opcode _sym4557[] = {
  // fix2float_gX_g0    (0)
  { "fix2float_gX_g0", 8, 64, 64,  0x0, { 0x0,0xcc900,},_sym356, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),g0$", 0, 1, 1, 0, 0, _sym354_operands,0,0,0, 0,&_sym355,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'float2fix'.
static struct adl_opcode _sym4558[] = {
  // float2fix_gX_g0    (0)
  { "float2fix_gX_g0", 8, 64, 64,  0x0, { 0x0,0xcc800,},_sym359, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),g0$", 0, 1, 1, 0, 0, _sym357_operands,0,0,0, 0,&_sym358,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'floatx2n'.
static struct adl_opcode _sym4559[] = {
  // floatx2n_gX_gY_floatx2n_gX_gX_gY    (0)
  { "floatx2n_gX_gY_floatx2n_gX_gX_gY", 0, 64, 64,  0x0, { 0 },_sym377, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym372_operands,_sym375,1,0, 0,&_sym373,0,{}, 0,0,_sym376_argchecker,0,0,-1, },
  // floatx2n_gX_gY    (1)
  { "floatx2n_gX_gY", 8, 64, 64,  0x0, { 0x0,0xc0900,},_sym371, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym369_operands,0,0,0, 0,&_sym370,0,{}, 0,0,0,0,0,-1, },
  // floatx2n_gX_Is8_floatx2n_gX_gX_Is8    (2)
  { "floatx2n_gX_Is8_floatx2n_gX_gX_Is8", 0, 64, 64,  0x0, { 0 },_sym368, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym363_operands,_sym366,1,0, 0,&_sym364,0,{}, 0,0,_sym367_argchecker,0,0,2, },
// floatx2n_gX_Is8    (3)
{ "floatx2n_gX_Is8", 8, 64, 64,  0x0, { 0x0,0xc4900,},_sym362, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym360_operands,0,0,0, 0,&_sym361,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'fnop'.
static struct adl_opcode _sym4560[] = {
  // fnop    (0)
  { "fnop", 8, 64, 64,  0x0, { 0x0,0x40000,},_sym1383, "$", 0, 0, 0, 0, 0, _sym1381_operands,0,0,0, 0,&_sym1382,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'fns'.
static struct adl_opcode _sym4561[] = {
  // fns_gY_gX    (0)
  { "fns_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3d800000,},_sym2008, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2006_operands,0,0,0, 0,&_sym2007,0,{}, 0,0,0,0,0,-1, },
  // fns_gY_gX    (1)
  { "fns_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3d800000,},_sym3484, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym3482_operands,0,0,0, 0,&_sym3483,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'jmp'.
static struct adl_opcode _sym4562[] = {
  // jmp_cc_gX_opC_au    (0)
  { "jmp_cc_gX_opC_au", 8, 64, 64,  0x0, { 0x0,0xec00,},_sym386, "^ *(\\.au_ap|\\.au_an|\\.au_nap|\\.au_nan) (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym384_operands,0,0,1, 0,&_sym385,0,{}, 0,0,0,0,0,0, },
  // jmp_cc_gX_opC_cc    (1)
  { "jmp_cc_gX_opC_cc", 8, 64, 64,  0x0, { 0x0,0xe000,},_sym389, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym387_operands,0,0,1, 0,&_sym388,0,{}, 0,0,0,0,0,1, },
  // jmp_cc_I_au    (2)
  { "jmp_cc_I_au", 8, 64, 64,  0x0, { 0x0,0xcc00,},_sym380, "^ *(\\.au_ap|\\.au_an|\\.au_nap|\\.au_nan) ([^},[  ]+)$", 0, 2, 2, 0, 1, _sym378_operands,0,0,1, 0,&_sym379,0,{}, 0,0,0,0,0,2, },
// jmp_cc_I_cc    (3)
{ "jmp_cc_I_cc", 8, 64, 64,  0x0, { 0x0,0xc000,},_sym383, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? ([^},[  ]+)$", 0, 2, 2, 0, 1, _sym381_operands,0,0,1, 0,&_sym382,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'jsr'.
static struct adl_opcode _sym4563[] = {
  // jsr_cc_gX_opC_au    (0)
  { "jsr_cc_gX_opC_au", 8, 64, 64,  0x0, { 0x0,0xfc00,},_sym398, "^ *(\\.au_ap|\\.au_an|\\.au_nap|\\.au_nan) (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym396_operands,0,0,1, 0,&_sym397,0,{}, 0,0,0,0,0,0, },
  // jsr_cc_gX_opC_cc    (1)
  { "jsr_cc_gX_opC_cc", 8, 64, 64,  0x0, { 0x0,0xf000,},_sym401, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym399_operands,0,0,1, 0,&_sym400,0,{}, 0,0,0,0,0,1, },
  // jsr_cc_I_au    (2)
  { "jsr_cc_I_au", 8, 64, 64,  0x0, { 0x0,0xdc00,},_sym392, "^ *(\\.au_ap|\\.au_an|\\.au_nap|\\.au_nan) ([^},[  ]+)$", 0, 2, 2, 0, 1, _sym390_operands,0,0,1, 0,&_sym391,0,{}, 0,0,0,0,0,2, },
// jsr_cc_I_cc    (3)
{ "jsr_cc_I_cc", 8, 64, 64,  0x0, { 0x0,0xd000,},_sym395, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? ([^},[  ]+)$", 0, 2, 2, 0, 1, _sym393_operands,0,0,1, 0,&_sym394,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'ld'.
static struct adl_opcode _sym4564[] = {
  // ld_u_gZ_aX_u_aY    (0)
  { "ld_u_gZ_aX_u_aY", 3, 25, 64,  0x0, { 0x0,0xc600000,},_sym3701, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 4, 4, 0, 0, _sym3699_operands,0,0,0, 0,&_sym3700,0,{}, 0,0,0,0,0,2, },
  // ld_gZ_aX_aY    (1)
  { "ld_gZ_aX_aY", 3, 25, 64,  0x0, { 0x0,0xc000000,},_sym3588, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\]$", 0, 4, 4, 0, 0, _sym3586_operands,0,0,0, 0,&_sym3587,0,{}, 0,0,0,0,0,3, },
  // ld_u_gZ_aX_u_aY    (2)
  { "ld_u_gZ_aX_u_aY", 3, 25, 64,  0x0, { 0x0,0xc600000,},_sym2225, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 4, 4, 0, 0, _sym2223_operands,0,0,0, 0,&_sym2224,0,{}, 0,0,0,0,0,2, },
  // ld_gZ_aX_aY    (3)
  { "ld_gZ_aX_aY", 3, 25, 64,  0x0, { 0x0,0xc000000,},_sym2112, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\]$", 0, 4, 4, 0, 0, _sym2110_operands,0,0,0, 0,&_sym2111,0,{}, 0,0,0,0,0,3, },
  // ld_u_H_aX_u_aY    (4)
  { "ld_u_H_aX_u_aY", 3, 25, 64,  0x0, { 0x0,0xc600600,},_sym3639, "^ *h,\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym3637_operands,0,0,0, 0,&_sym3638,0,{}, 0,0,0,0,0,7, },
  // ld_H_aX_aY    (5)
  { "ld_H_aX_aY", 3, 25, 64,  0x0, { 0x0,0xc000600,},_sym2028, "^ *h,\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\]$", 0, 3, 3, 0, 0, _sym2026_operands,0,0,0, 0,&_sym2027,0,{}, 0,0,0,0,0,6, },
  // ld_H_aX_aY    (6)
  { "ld_H_aX_aY", 3, 25, 64,  0x0, { 0x0,0xc000600,},_sym3504, "^ *h,\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\]$", 0, 3, 3, 0, 0, _sym3502_operands,0,0,0, 0,&_sym3503,0,{}, 0,0,0,0,0,6, },
  // ld_u_H_aX_u_aY    (7)
  { "ld_u_H_aX_u_aY", 3, 25, 64,  0x0, { 0x0,0xc600600,},_sym2163, "^ *h,\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym2161_operands,0,0,0, 0,&_sym2162,0,{}, 0,0,0,0,0,7, },
  // ld_u_aX_aY_ld_aX_aY    (8)
  { "ld_u_aX_aY_ld_aX_aY", 0, 15, 64,  0x0, { 0 },_sym841, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym837_operands,_sym840,1,0, 0,&_sym838,0,{}, 0,0,0,0,0,8, },
  // ld_u_gY_aX_Is8_u_plus    (9)
  { "ld_u_gY_aX_Is8_u_plus", 0, 25, 64,  0x0, { 0 },_sym2219, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+)$", 0, 3, 3, 0, 0, _sym2213_operands,_sym2218,1,0, 0,&_sym2214,0,{}, 0,0,0,0,0,10, },
// ld_u_gY_aX_Is8_u_plus    (10)
{ "ld_u_gY_aX_Is8_u_plus", 0, 25, 64,  0x0, { 0 },_sym3695, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+)$", 0, 3, 3, 0, 0, _sym3689_operands,_sym3694,1,0, 0,&_sym3690,0,{}, 0,0,0,0,0,10, },
// ld_u_gY_aX_Is8_u_minus    (11)
{ "ld_u_gY_aX_Is8_u_minus", 0, 25, 64,  0x0, { 0 },_sym3688, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+)$", 0, 3, 3, 0, 0, _sym3682_operands,_sym3687,1,0, 0,&_sym3683,0,{}, 0,0,0,0,0,14, },
// ld_gY_aX_u_Is8_plus    (12)
{ "ld_gY_aX_u_Is8_plus", 0, 25, 64,  0x0, { 0 },_sym3558, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym3552_operands,_sym3557,1,0, 0,&_sym3553,0,{}, 0,0,0,0,0,15, },
// ld_gY_aX_u_Is8_minus    (13)
{ "ld_gY_aX_u_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym3551, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym3545_operands,_sym3550,1,0, 0,&_sym3546,0,{}, 0,0,0,0,0,16, },
// ld_u_gY_aX_Is8_u_minus    (14)
{ "ld_u_gY_aX_Is8_u_minus", 0, 25, 64,  0x0, { 0 },_sym2212, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+)$", 0, 3, 3, 0, 0, _sym2206_operands,_sym2211,1,0, 0,&_sym2207,0,{}, 0,0,0,0,0,14, },
// ld_gY_aX_u_Is8_plus    (15)
{ "ld_gY_aX_u_Is8_plus", 0, 25, 64,  0x0, { 0 },_sym2082, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym2076_operands,_sym2081,1,0, 0,&_sym2077,0,{}, 0,0,0,0,0,15, },
// ld_gY_aX_u_Is8_minus    (16)
{ "ld_gY_aX_u_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym2075, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym2069_operands,_sym2074,1,0, 0,&_sym2070,0,{}, 0,0,0,0,0,16, },
// ld_gY_aX_u_Is8_zero    (17)
{ "ld_gY_aX_u_Is8_zero", 0, 25, 64,  0x0, { 0 },_sym2109, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]$", 0, 2, 2, 0, 0, _sym2105_operands,_sym2108,1,0, 0,&_sym2106,0,{}, 0,0,0,0,0,-1, },
// ld_gY_aX_u_Is8_zero    (18)
{ "ld_gY_aX_u_Is8_zero", 0, 25, 64,  0x0, { 0 },_sym3585, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]$", 0, 2, 2, 0, 0, _sym3581_operands,_sym3584,1,0, 0,&_sym3582,0,{}, 0,0,0,0,0,-1, },
// ld_gX_sp_Is10_minus    (19)
{ "ld_gX_sp_Is10_minus", 0, 25, 64,  0x0, { 0 },_sym3533, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\-([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym3528_operands,_sym3532,1,0, 0,&_sym3529,0,{}, 0,0,0,0,0,21, },
// ld_gX_sp_Is10    (20)
{ "ld_gX_sp_Is10", 3, 25, 64,  0x0, { 0x0,0x2000000,},_sym3527, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\+([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym3525_operands,0,0,0, 0,&_sym3526,0,{}, 0,0,0,0,0,22, },
// ld_gX_sp_Is10_minus    (21)
{ "ld_gX_sp_Is10_minus", 0, 25, 64,  0x0, { 0 },_sym2057, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\-([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym2052_operands,_sym2056,1,0, 0,&_sym2053,0,{}, 0,0,0,0,0,21, },
// ld_gX_sp_Is10    (22)
{ "ld_gX_sp_Is10", 3, 25, 64,  0x0, { 0x0,0x2000000,},_sym2051, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\+([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym2049_operands,0,0,0, 0,&_sym2050,0,{}, 0,0,0,0,0,22, },
// ld_gX_sp_Is10_zero    (23)
{ "ld_gX_sp_Is10_zero", 0, 25, 64,  0x0, { 0 },_sym2062, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\]$", 0, 1, 1, 0, 0, _sym2058_operands,_sym2061,1,0, 0,&_sym2059,0,{}, 0,0,0,0,0,-1, },
// ld_gX_sp_Is10_zero    (24)
{ "ld_gX_sp_Is10_zero", 0, 25, 64,  0x0, { 0 },_sym3538, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\]$", 0, 1, 1, 0, 0, _sym3534_operands,_sym3537,1,0, 0,&_sym3535,0,{}, 0,0,0,0,0,-1, },
// ld_H_aX_Is8    (25)
{ "ld_H_aX_Is8", 3, 25, 64,  0x0, { 0x0,0x4000600,},_sym3490, "^ *h,\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym3488_operands,0,0,0, 0,&_sym3489,0,{}, 0,0,0,0,0,30, },
// ld_u_H_aX_u_Is8    (26)
{ "ld_u_H_aX_u_Is8", 3, 25, 64,  0x0, { 0x0,0x4600600,},_sym3630, "^ *h,\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+)$", 0, 2, 2, 0, 0, _sym3628_operands,0,0,0, 0,&_sym3629,0,{}, 0,0,0,0,0,32, },
// ld_u_H_aX_u_Is8_minus    (27)
{ "ld_u_H_aX_u_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym3636, "^ *h,\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+)$", 0, 2, 2, 0, 0, _sym3631_operands,_sym3635,1,0, 0,&_sym3632,0,{}, 0,0,0,0,0,31, },
// ld_H_aX_Is8_minus    (28)
{ "ld_H_aX_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym3496, "^ *h,\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym3491_operands,_sym3495,1,0, 0,&_sym3492,0,{}, 0,0,0,0,0,29, },
// ld_H_aX_Is8_minus    (29)
{ "ld_H_aX_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym2020, "^ *h,\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym2015_operands,_sym2019,1,0, 0,&_sym2016,0,{}, 0,0,0,0,0,29, },
// ld_H_aX_Is8    (30)
{ "ld_H_aX_Is8", 3, 25, 64,  0x0, { 0x0,0x4000600,},_sym2014, "^ *h,\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym2012_operands,0,0,0, 0,&_sym2013,0,{}, 0,0,0,0,0,30, },
// ld_u_H_aX_u_Is8_minus    (31)
{ "ld_u_H_aX_u_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym2160, "^ *h,\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+)$", 0, 2, 2, 0, 0, _sym2155_operands,_sym2159,1,0, 0,&_sym2156,0,{}, 0,0,0,0,0,31, },
// ld_u_H_aX_u_Is8    (32)
{ "ld_u_H_aX_u_Is8", 3, 25, 64,  0x0, { 0x0,0x4600600,},_sym2154, "^ *h,\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+)$", 0, 2, 2, 0, 0, _sym2152_operands,0,0,0, 0,&_sym2153,0,{}, 0,0,0,0,0,32, },
// ld_H_aX_Is8_zero    (33)
{ "ld_H_aX_Is8_zero", 0, 25, 64,  0x0, { 0 },_sym3501, "^ *h,\\[(a0|a1|a2|a3)\\]$", 0, 1, 1, 0, 0, _sym3497_operands,_sym3500,1,0, 0,&_sym3498,0,{}, 0,0,0,0,0,-1, },
// ld_H_aX_Is8_zero    (34)
{ "ld_H_aX_Is8_zero", 0, 25, 64,  0x0, { 0 },_sym2025, "^ *h,\\[(a0|a1|a2|a3)\\]$", 0, 1, 1, 0, 0, _sym2021_operands,_sym2024,1,0, 0,&_sym2022,0,{}, 0,0,0,0,0,-1, },
// ld_aX_Is8_u_I15_plus    (35)
{ "ld_aX_Is8_u_I15_plus", 0, 15, 64,  0x0, { 0 },_sym819, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[ ]+)$", 0, 2, 2, 0, 0, _sym813_operands,_sym818,1,0, 0,&_sym814,0,{}, 0,0,0,0,0,35, },
// ld_aX_Is8_u_I15_minus    (36)
{ "ld_aX_Is8_u_I15_minus", 0, 15, 64,  0x0, { 0 },_sym812, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[ ]+)$", 0, 2, 2, 0, 0, _sym806_operands,_sym811,1,0, 0,&_sym807,0,{}, 0,0,0,0,0,36, },
// ld_gX_Iu17_opS_LO    (37)
{ "ld_gX_Iu17_opS_LO", 3, 25, 64,  0x0, { 0x0,0x40000000,},_sym3524, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3522_operands,0,0,0, 0,&_sym3523,0,{}, 0,0,0,0,0,38, },
// ld_gX_Iu17_opS_HI    (38)
{ "ld_gX_Iu17_opS_HI", 3, 25, 64,  0x0, { 0x0,0x40000000,},_sym2048, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2046_operands,0,0,0, 0,&_sym2047,0,{}, 0,0,0,0,0,38, },
// ld_H_sp_Is10_minus    (39)
{ "ld_H_sp_Is10_minus", 0, 25, 64,  0x0, { 0 },_sym2040, "^ *h,\\[sp\\-([^},[[, ]+)\\]$", 0, 1, 1, 0, 0, _sym2035_operands,_sym2039,1,0, 0,&_sym2036,0,{}, 0,0,0,0,0,41, },
// ld_H_sp_Is10    (40)
{ "ld_H_sp_Is10", 3, 25, 64,  0x0, { 0x0,0x2000600,},_sym2034, "^ *h,\\[sp\\+([^},[[, ]+)\\]$", 0, 1, 1, 0, 0, _sym2032_operands,0,0,0, 0,&_sym2033,0,{}, 0,0,0,0,0,42, },
// ld_H_sp_Is10_minus    (41)
{ "ld_H_sp_Is10_minus", 0, 25, 64,  0x0, { 0 },_sym3516, "^ *h,\\[sp\\-([^},[[, ]+)\\]$", 0, 1, 1, 0, 0, _sym3511_operands,_sym3515,1,0, 0,&_sym3512,0,{}, 0,0,0,0,0,41, },
// ld_H_sp_Is10    (42)
{ "ld_H_sp_Is10", 3, 25, 64,  0x0, { 0x0,0x2000600,},_sym3510, "^ *h,\\[sp\\+([^},[[, ]+)\\]$", 0, 1, 1, 0, 0, _sym3508_operands,0,0,0, 0,&_sym3509,0,{}, 0,0,0,0,0,42, },
// ld_H_sp_Is10_zero    (43)
{ "ld_H_sp_Is10_zero", 0, 25, 64,  0x0, { 0 },_sym3521, "^ *h,\\[sp\\]$", 0, 0, 0, 0, 0, _sym3517_operands,_sym3520,1,0, 0,&_sym3518,0,{}, 0,0,0,0,0,-1, },
// ld_H_sp_Is10_zero    (44)
{ "ld_H_sp_Is10_zero", 0, 25, 64,  0x0, { 0 },_sym2045, "^ *h,\\[sp\\]$", 0, 0, 0, 0, 0, _sym2041_operands,_sym2044,1,0, 0,&_sym2042,0,{}, 0,0,0,0,0,-1, },
// ld_H_Iu17_opS_LO    (45)
{ "ld_H_Iu17_opS_LO", 3, 25, 64,  0x0, { 0x0,0x40000600,},_sym3487, "^ *h,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3485_operands,0,0,0, 0,&_sym3486,0,{}, 0,0,0,0,0,46, },
// ld_H_Iu17_opS_HI    (46)
{ "ld_H_Iu17_opS_HI", 3, 25, 64,  0x0, { 0x0,0x40000600,},_sym2011, "^ *h,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym2009_operands,0,0,0, 0,&_sym2010,0,{}, 0,0,0,0,0,46, },
};

// Instructions named 'ld.br'.
static struct adl_opcode _sym4565[] = {
  // ld_u_aX_aY_ld_aX_aY_br_syn    (0)
  { "ld_u_aX_aY_ld_aX_aY_br_syn", 0, 15, 64,  0x0, { 0 },_sym846, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym842_operands,_sym845,1,0, 0,&_sym843,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'ld.h2h'.
static struct adl_opcode _sym4566[] = {
  // ld_Rx_h2h    (0)
  { "ld_Rx_h2h", 0, 7, 64,  0x0, { 0x0,0x30000000,},_sym1421, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1419_operands,0,0,0, 0,&_sym1420,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.h2l'.
static struct adl_opcode _sym4567[] = {
  // ld_Rx_h2l    (0)
  { "ld_Rx_h2l", 0, 7, 64,  0x0, { 0x0,0x60000000,},_sym1424, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1422_operands,0,0,0, 0,&_sym1423,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.h2l_l2h'.
static struct adl_opcode _sym4568[] = {
  // ld_Rx_h2l_l2h    (0)
  { "ld_Rx_h2l_l2h", 0, 7, 64,  0x0, { 0x0,0x40000000,},_sym1427, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1425_operands,0,0,0, 0,&_sym1426,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.l2h'.
static struct adl_opcode _sym4569[] = {
  // ld_Rx_l2h    (0)
  { "ld_Rx_l2h", 0, 7, 64,  0x0, { 0x0,0x70000000,},_sym1430, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1428_operands,0,0,0, 0,&_sym1429,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.l2h_h2l'.
static struct adl_opcode _sym4570[] = {
  // ld_Rx_l2h_h2l    (0)
  { "ld_Rx_l2h_h2l", 0, 7, 64,  0x0, { 0x0,0x50000000,},_sym1433, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1431_operands,0,0,0, 0,&_sym1432,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.l2l'.
static struct adl_opcode _sym4571[] = {
  // ld_Rx_l2l    (0)
  { "ld_Rx_l2l", 0, 7, 64,  0x0, { 0x0,0x20000000,},_sym1436, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1434_operands,0,0,0, 0,&_sym1435,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.laddr'.
static struct adl_opcode _sym4572[] = {
  // ld_line_gY_aX_u_Is8_minus    (0)
  { "ld_line_gY_aX_u_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym2118, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym2113_operands,_sym2117,1,0, 0,&_sym2114,0,{}, 0,0,0,0,0,4, },
// ld_line_gY_aX_u_Is8_plus    (1)
{ "ld_line_gY_aX_u_Is8_plus", 0, 25, 64,  0x0, { 0 },_sym2123, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym2119_operands,_sym2122,1,0, 0,&_sym2120,0,{}, 0,0,0,0,0,5, },
// ld_u_gY_aX_Is8_u_line_minus    (2)
{ "ld_u_gY_aX_Is8_u_line_minus", 0, 25, 64,  0x0, { 0 },_sym2200, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+)$", 0, 3, 3, 0, 0, _sym2195_operands,_sym2199,1,0, 0,&_sym2196,0,{}, 0,0,0,0,0,6, },
// ld_u_gY_aX_Is8_u_line_plus    (3)
{ "ld_u_gY_aX_Is8_u_line_plus", 0, 25, 64,  0x0, { 0 },_sym2205, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+)$", 0, 3, 3, 0, 0, _sym2201_operands,_sym2204,1,0, 0,&_sym2202,0,{}, 0,0,0,0,0,7, },
// ld_line_gY_aX_u_Is8_minus    (4)
{ "ld_line_gY_aX_u_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym3594, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym3589_operands,_sym3593,1,0, 0,&_sym3590,0,{}, 0,0,0,0,0,4, },
// ld_line_gY_aX_u_Is8_plus    (5)
{ "ld_line_gY_aX_u_Is8_plus", 0, 25, 64,  0x0, { 0 },_sym3599, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym3595_operands,_sym3598,1,0, 0,&_sym3596,0,{}, 0,0,0,0,0,5, },
// ld_u_gY_aX_Is8_u_line_minus    (6)
{ "ld_u_gY_aX_Is8_u_line_minus", 0, 25, 64,  0x0, { 0 },_sym3676, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+)$", 0, 3, 3, 0, 0, _sym3671_operands,_sym3675,1,0, 0,&_sym3672,0,{}, 0,0,0,0,0,6, },
// ld_u_gY_aX_Is8_u_line_plus    (7)
{ "ld_u_gY_aX_Is8_u_line_plus", 0, 25, 64,  0x0, { 0 },_sym3681, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+)$", 0, 3, 3, 0, 0, _sym3677_operands,_sym3680,1,0, 0,&_sym3678,0,{}, 0,0,0,0,0,7, },
// ld_line_aX_Is8_u_minus    (8)
{ "ld_line_aX_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym825, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[ ]+)$", 0, 2, 2, 0, 0, _sym820_operands,_sym824,1,0, 0,&_sym821,0,{}, 0,0,0,0,0,8, },
// ld_line_aX_Is8_u_plus    (9)
{ "ld_line_aX_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym830, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[ ]+)$", 0, 2, 2, 0, 0, _sym826_operands,_sym829,1,0, 0,&_sym827,0,{}, 0,0,0,0,0,9, },
};

// Instructions named 'ld.laddr.u'.
static struct adl_opcode _sym4573[] = {
  // ld_line_gY_aX_u_Is8_u_minus    (0)
  { "ld_line_gY_aX_u_Is8_u_minus", 0, 25, 64,  0x0, { 0 },_sym2129, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym2124_operands,_sym2128,1,0, 0,&_sym2125,0,{}, 0,0,0,0,0,2, },
// ld_line_gY_aX_u_Is8_u_plus    (1)
{ "ld_line_gY_aX_u_Is8_u_plus", 0, 25, 64,  0x0, { 0 },_sym2134, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym2130_operands,_sym2133,1,0, 0,&_sym2131,0,{}, 0,0,0,0,0,3, },
// ld_line_gY_aX_u_Is8_u_minus    (2)
{ "ld_line_gY_aX_u_Is8_u_minus", 0, 25, 64,  0x0, { 0 },_sym3605, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym3600_operands,_sym3604,1,0, 0,&_sym3601,0,{}, 0,0,0,0,0,2, },
// ld_line_gY_aX_u_Is8_u_plus    (3)
{ "ld_line_gY_aX_u_Is8_u_plus", 0, 25, 64,  0x0, { 0 },_sym3610, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym3606_operands,_sym3609,1,0, 0,&_sym3607,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'ld.normal'.
static struct adl_opcode _sym4574[] = {
  // ld_Rx_normal    (0)
  { "ld_Rx_normal", 0, 7, 64,  0x0, { 0x0,0x10000000,},_sym1442, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1440_operands,0,0,0, 0,&_sym1441,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.qam'.
static struct adl_opcode _sym4575[] = {
  // ld_Rx_qam    (0)
  { "ld_Rx_qam", 0, 7, 64,  0x0, { 0x0,0xb0000000,},_sym1445, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1443_operands,0,0,0, 0,&_sym1444,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.replace_h'.
static struct adl_opcode _sym4576[] = {
  // ld_Rx_replace_h    (0)
  { "ld_Rx_replace_h", 0, 7, 64,  0x0, { 0x0,0x80000000,},_sym1448, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1446_operands,0,0,0, 0,&_sym1447,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.replace_l'.
static struct adl_opcode _sym4577[] = {
  // ld_Rx_replace_l    (0)
  { "ld_Rx_replace_l", 0, 7, 64,  0x0, { 0x0,0x90000000,},_sym1451, "^ *(R0|R1|R2|R3|R4|R5|R6|R7)$", 0, 1, 1, 0, 0, _sym1449_operands,0,0,0, 0,&_sym1450,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.u'.
static struct adl_opcode _sym4578[] = {
  // ld_u_gZ_aX_aY_u    (0)
  { "ld_u_gZ_aX_aY_u", 3, 25, 64,  0x0, { 0x0,0xc200000,},_sym2222, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\]$", 0, 4, 4, 0, 0, _sym2220_operands,0,0,0, 0,&_sym2221,0,{}, 0,0,0,0,0,1, },
  // ld_u_gZ_aX_aY_u    (1)
  { "ld_u_gZ_aX_aY_u", 3, 25, 64,  0x0, { 0x0,0xc200000,},_sym3698, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\]$", 0, 4, 4, 0, 0, _sym3696_operands,0,0,0, 0,&_sym3697,0,{}, 0,0,0,0,0,1, },
  // ld_u_H_aX_aY    (2)
  { "ld_u_H_aX_aY", 3, 25, 64,  0x0, { 0x0,0xc200600,},_sym3627, "^ *h,\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\]$", 0, 3, 3, 0, 0, _sym3625_operands,0,0,0, 0,&_sym3626,0,{}, 0,0,0,0,0,3, },
  // ld_u_H_aX_aY    (3)
  { "ld_u_H_aX_aY", 3, 25, 64,  0x0, { 0x0,0xc200600,},_sym2151, "^ *h,\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\]$", 0, 3, 3, 0, 0, _sym2149_operands,0,0,0, 0,&_sym2150,0,{}, 0,0,0,0,0,3, },
  // ld_u_aX_aY    (4)
  { "ld_u_aX_aY", 1, 15, 64,  0x0, { 0x0,0x40000000,},_sym833, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym831_operands,0,0,0, 0,&_sym832,0,{}, 0,0,0,0,0,4, },
  // ld_gY_aX_u_Is8_u_minus    (5)
  { "ld_gY_aX_u_Is8_u_minus", 0, 25, 64,  0x0, { 0 },_sym3568, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym3562_operands,_sym3567,1,0, 0,&_sym3563,0,{}, 0,0,0,0,0,6, },
// ld_gY_aX_u_Is8_u_minus    (6)
{ "ld_gY_aX_u_Is8_u_minus", 0, 25, 64,  0x0, { 0 },_sym2092, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym2086_operands,_sym2091,1,0, 0,&_sym2087,0,{}, 0,0,0,0,0,6, },
// ld_gY_aX_u_Is8_u_plus    (7)
{ "ld_gY_aX_u_Is8_u_plus", 0, 25, 64,  0x0, { 0 },_sym3575, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym3569_operands,_sym3574,1,0, 0,&_sym3570,0,{}, 0,0,0,0,0,8, },
// ld_gY_aX_u_Is8_u_plus    (8)
{ "ld_gY_aX_u_Is8_u_plus", 0, 25, 64,  0x0, { 0 },_sym2099, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 3, 3, 0, 0, _sym2093_operands,_sym2098,1,0, 0,&_sym2094,0,{}, 0,0,0,0,0,8, },
// ld_gY_aX_u_Is8_u_zero    (9)
{ "ld_gY_aX_u_Is8_u_zero", 0, 25, 64,  0x0, { 0 },_sym2104, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]$", 0, 2, 2, 0, 0, _sym2100_operands,_sym2103,1,0, 0,&_sym2101,0,{}, 0,0,0,0,0,-1, },
// ld_gY_aX_u_Is8_u_zero    (10)
{ "ld_gY_aX_u_Is8_u_zero", 0, 25, 64,  0x0, { 0 },_sym3580, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[(a0|a1|a2|a3)\\]$", 0, 2, 2, 0, 0, _sym3576_operands,_sym3579,1,0, 0,&_sym3577,0,{}, 0,0,0,0,0,-1, },
// ld_u_gX_sp_Is    (11)
{ "ld_u_gX_sp_Is", 3, 25, 64,  0x0, { 0x0,0x2200000,},_sym2180, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\+([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym2178_operands,0,0,0, 0,&_sym2179,0,{}, 0,0,0,0,0,14, },
// ld_u_gX_sp_Is_minus    (12)
{ "ld_u_gX_sp_Is_minus", 0, 25, 64,  0x0, { 0 },_sym2186, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\-([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym2181_operands,_sym2185,1,0, 0,&_sym2182,0,{}, 0,0,0,0,0,13, },
// ld_u_gX_sp_Is_minus    (13)
{ "ld_u_gX_sp_Is_minus", 0, 25, 64,  0x0, { 0 },_sym3662, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\-([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym3657_operands,_sym3661,1,0, 0,&_sym3658,0,{}, 0,0,0,0,0,13, },
// ld_u_gX_sp_Is    (14)
{ "ld_u_gX_sp_Is", 3, 25, 64,  0x0, { 0x0,0x2200000,},_sym3656, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\+([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym3654_operands,0,0,0, 0,&_sym3655,0,{}, 0,0,0,0,0,14, },
// ld_u_gX_sp_Is_zero    (15)
{ "ld_u_gX_sp_Is_zero", 0, 25, 64,  0x0, { 0 },_sym2191, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\]$", 0, 1, 1, 0, 0, _sym2187_operands,_sym2190,1,0, 0,&_sym2188,0,{}, 0,0,0,0,0,-1, },
// ld_u_gX_sp_Is_zero    (16)
{ "ld_u_gX_sp_Is_zero", 0, 25, 64,  0x0, { 0 },_sym3667, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[sp\\]$", 0, 1, 1, 0, 0, _sym3663_operands,_sym3666,1,0, 0,&_sym3664,0,{}, 0,0,0,0,0,-1, },
// ld_u_H_aX_Is8_minus    (17)
{ "ld_u_H_aX_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym3619, "^ *h,\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym3614_operands,_sym3618,1,0, 0,&_sym3615,0,{}, 0,0,0,0,0,20, },
// ld_u_H_aX_Is8    (18)
{ "ld_u_H_aX_Is8", 3, 25, 64,  0x0, { 0x0,0x4200600,},_sym2137, "^ *h,\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym2135_operands,0,0,0, 0,&_sym2136,0,{}, 0,0,0,0,0,19, },
// ld_u_H_aX_Is8    (19)
{ "ld_u_H_aX_Is8", 3, 25, 64,  0x0, { 0x0,0x4200600,},_sym3613, "^ *h,\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym3611_operands,0,0,0, 0,&_sym3612,0,{}, 0,0,0,0,0,19, },
// ld_u_H_aX_Is8_minus    (20)
{ "ld_u_H_aX_Is8_minus", 0, 25, 64,  0x0, { 0 },_sym2143, "^ *h,\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\]$", 0, 2, 2, 0, 0, _sym2138_operands,_sym2142,1,0, 0,&_sym2139,0,{}, 0,0,0,0,0,20, },
// ld_u_H_aX_Is8_zero    (21)
{ "ld_u_H_aX_Is8_zero", 0, 25, 64,  0x0, { 0 },_sym3624, "^ *h,\\[(a0|a1|a2|a3)\\]$", 0, 1, 1, 0, 0, _sym3620_operands,_sym3623,1,0, 0,&_sym3621,0,{}, 0,0,0,0,0,-1, },
// ld_u_H_aX_Is8_zero    (22)
{ "ld_u_H_aX_Is8_zero", 0, 25, 64,  0x0, { 0 },_sym2148, "^ *h,\\[(a0|a1|a2|a3)\\]$", 0, 1, 1, 0, 0, _sym2144_operands,_sym2147,1,0, 0,&_sym2145,0,{}, 0,0,0,0,0,-1, },
// ld_u_H_sp_Is10_minus    (23)
{ "ld_u_H_sp_Is10_minus", 0, 25, 64,  0x0, { 0 },_sym2172, "^ *h,\\[sp\\-([^},[[, ]+)\\]$", 0, 1, 1, 0, 0, _sym2167_operands,_sym2171,1,0, 0,&_sym2168,0,{}, 0,0,0,0,0,25, },
// ld_u_H_sp_Is10    (24)
{ "ld_u_H_sp_Is10", 3, 25, 64,  0x0, { 0x0,0x2200600,},_sym3642, "^ *h,\\[sp\\+([^},[[, ]+)\\]$", 0, 1, 1, 0, 0, _sym3640_operands,0,0,0, 0,&_sym3641,0,{}, 0,0,0,0,0,26, },
// ld_u_H_sp_Is10_minus    (25)
{ "ld_u_H_sp_Is10_minus", 0, 25, 64,  0x0, { 0 },_sym3648, "^ *h,\\[sp\\-([^},[[, ]+)\\]$", 0, 1, 1, 0, 0, _sym3643_operands,_sym3647,1,0, 0,&_sym3644,0,{}, 0,0,0,0,0,25, },
// ld_u_H_sp_Is10    (26)
{ "ld_u_H_sp_Is10", 3, 25, 64,  0x0, { 0x0,0x2200600,},_sym2166, "^ *h,\\[sp\\+([^},[[, ]+)\\]$", 0, 1, 1, 0, 0, _sym2164_operands,0,0,0, 0,&_sym2165,0,{}, 0,0,0,0,0,26, },
// ld_u_H_sp_Is10_zero    (27)
{ "ld_u_H_sp_Is10_zero", 0, 25, 64,  0x0, { 0 },_sym3653, "^ *h,\\[sp\\]$", 0, 0, 0, 0, 0, _sym3649_operands,_sym3652,1,0, 0,&_sym3650,0,{}, 0,0,0,0,0,-1, },
// ld_u_H_sp_Is10_zero    (28)
{ "ld_u_H_sp_Is10_zero", 0, 25, 64,  0x0, { 0 },_sym2177, "^ *h,\\[sp\\]$", 0, 0, 0, 0, 0, _sym2173_operands,_sym2176,1,0, 0,&_sym2174,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld.u.br'.
static struct adl_opcode _sym4579[] = {
  // ld_u_aX_aY_br_instr    (0)
  { "ld_u_aX_aY_br_instr", 1, 15, 64,  0x0, { 0x0,0x40800000,},_sym836, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym834_operands,0,0,0, 0,&_sym835,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'ld_ax_is8_u'.
static struct adl_opcode _sym4580[] = {
  // ld_aX_Is8_u    (0)
  { "ld_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x10000000,},_sym805, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 3, 6, 0, 0, _sym803_operands,0,0,0, 0,&_sym804,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'ld_gy_ax_is8_u'.
static struct adl_opcode _sym4581[] = {
  // ld_gY_aX_Is8_u    (0)
  { "ld_gY_aX_Is8_u", 3, 25, 64,  0x0, { 0x0,0x4400000,},_sym2065, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym2063_operands,0,0,0, 0,&_sym2064,0,{}, 0,0,0,0,0,1, },
// ld_gY_aX_Is8_u    (1)
{ "ld_gY_aX_Is8_u", 3, 25, 64,  0x0, { 0x0,0x4400000,},_sym3541, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym3539_operands,0,0,0, 0,&_sym3540,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'ld_gy_ax_u_is8'.
static struct adl_opcode _sym4582[] = {
  // ld_gY_aX_u_Is8    (0)
  { "ld_gY_aX_u_Is8", 3, 25, 64,  0x0, { 0x0,0x4000000,},_sym2068, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym2066_operands,0,0,0, 0,&_sym2067,0,{}, 0,0,0,0,0,1, },
// ld_gY_aX_u_Is8    (1)
{ "ld_gY_aX_u_Is8", 3, 25, 64,  0x0, { 0x0,0x4000000,},_sym3544, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym3542_operands,0,0,0, 0,&_sym3543,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'ld_gy_ax_u_is8_u'.
static struct adl_opcode _sym4583[] = {
  // ld_gY_aX_u_Is8_u    (0)
  { "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x0, { 0x0,0x4200000,},_sym2085, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym2083_operands,0,0,0, 0,&_sym2084,0,{}, 0,0,0,0,0,1, },
// ld_gY_aX_u_Is8_u    (1)
{ "ld_gY_aX_u_Is8_u", 3, 25, 64,  0x0, { 0x0,0x4200000,},_sym3561, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym3559_operands,0,0,0, 0,&_sym3560,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'ld_h_ax_u_is8'.
static struct adl_opcode _sym4584[] = {
  // ld_H_aX_u_Is8    (0)
  { "ld_H_aX_u_Is8", 3, 25, 64,  0x0, { 0x0,0x4400600,},_sym2031, "^ *([^} ,\t,]+),([^} ,\t,]+)$", 0, 2, 4, 0, 0, _sym2029_operands,0,0,0, 0,&_sym2030,0,{}, 0,0,0,0,0,1, },
// ld_H_aX_u_Is8    (1)
{ "ld_H_aX_u_Is8", 3, 25, 64,  0x0, { 0x0,0x4400600,},_sym3507, "^ *([^} ,\t,]+),([^} ,\t,]+)$", 0, 2, 4, 0, 0, _sym3505_operands,0,0,0, 0,&_sym3506,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'ld_rx_nop'.
static struct adl_opcode _sym4585[] = {
  // ld_Rx_nop    (0)
  { "ld_Rx_nop", 0, 7, 64,  0x0, { },_sym1439, "$", 0, 0, 0, 0, 0, _sym1437_operands,0,0,0, 0,&_sym1438,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ld_u_gy_ax_is8_u'.
static struct adl_opcode _sym4586[] = {
  // ld_u_gY_aX_Is8_u    (0)
  { "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x0, { 0x0,0x4600000,},_sym2194, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym2192_operands,0,0,0, 0,&_sym2193,0,{}, 0,0,0,0,0,1, },
// ld_u_gY_aX_Is8_u    (1)
{ "ld_u_gY_aX_Is8_u", 3, 25, 64,  0x0, { 0x0,0x4600000,},_sym3670, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym3668_operands,0,0,0, 0,&_sym3669,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'lfsr'.
static struct adl_opcode _sym4587[] = {
  // lfsr_gX_gY_lfsr_gX_gX_gY    (0)
  { "lfsr_gX_gY_lfsr_gX_gX_gY", 0, 64, 64,  0x0, { 0 },_sym413, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym408_operands,_sym411,1,0, 0,&_sym409,0,{}, 0,0,_sym412_argchecker,0,0,-1, },
  // lfsr_gX_gY    (1)
  { "lfsr_gX_gY", 8, 64, 64,  0x0, { 0x0,0xc0b00,},_sym407, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym405_operands,0,0,0, 0,&_sym406,0,{}, 0,0,0,0,0,-1, },
  // lfsr_gX_I32_opD    (2)
  { "lfsr_gX_I32_opD", 8, 64, 64,  0x0, { 0x0,0xc4b00,},_sym404, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym402_operands,0,0,0, 0,&_sym403,0,{}, 0,0,0,0,0,2, },
};

// Instructions named 'log2'.
static struct adl_opcode _sym4588[] = {
  // log2_gY_gX    (0)
  { "log2_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3c800000,},_sym2228, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2226_operands,0,0,0, 0,&_sym2227,0,{}, 0,0,0,0,0,-1, },
  // log2_gY_gX    (1)
  { "log2_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3c800000,},_sym3704, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym3702_operands,0,0,0, 0,&_sym3703,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'loop_begin'.
static struct adl_opcode _sym4589[] = {
  // loop_begin    (0)
  { "loop_begin", 0, 2, 64,  0x0, { 0x0,0x80000000,},_sym1362, "$", 0, 0, 0, 0, 0, _sym1360_operands,0,0,0, 0,&_sym1361,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'loop_end'.
static struct adl_opcode _sym4590[] = {
  // loop_end    (0)
  { "loop_end", 0, 64, 64,  0x0, { 0 },_sym1388, "$", 0, 0, 0, 0, 0, _sym1384_operands,_sym1387,1,0, 0,&_sym1385,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'loop_stop'.
static struct adl_opcode _sym4591[] = {
  // loop_stop    (0)
  { "loop_stop", 1, 15, 64,  0x0, { 0x0,0xfc400000,},_sym1119, "$", 0, 0, 0, 0, 0, _sym1117_operands,0,0,0, 0,&_sym1118,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'lsb2rf'.
static struct adl_opcode _sym4592[] = {
  // lsb2rf_R7_rV_gX    (0)
  { "lsb2rf_R7_rV_gX", 8, 64, 64,  0x0, { 0x0,0xccc00,},_sym416, "^ *\\[r7V\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym414_operands,0,0,0, 0,&_sym415,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'lsb2rf.sr'.
static struct adl_opcode _sym4593[] = {
  // lsb2rf_sr_R7_rV_gX    (0)
  { "lsb2rf_sr_R7_rV_gX", 8, 64, 64,  0x0, { 0x0,0xccd00,},_sym419, "^ *\\[r7V\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym417_operands,0,0,0, 0,&_sym418,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'mac'.
static struct adl_opcode _sym4594[] = {
  // mac    (0)
  { "mac", 0, 4, 64,  0x0, { 0x0,0x20000000,},_sym1532, "$", 0, 0, 0, 0, 0, _sym1530_operands,0,0,0, 0,&_sym1531,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'mad'.
static struct adl_opcode _sym4595[] = {
  // mad_dit_mad    (0)
  { "mad_dit_mad", 0, 4, 64,  0x0, { 0 },_sym1545, "$", 0, 0, 0, 0, 0, _sym1541_operands,_sym1544,1,0, 0,&_sym1542,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'mad_dit'.
static struct adl_opcode _sym4596[] = {
  // mad_dit    (0)
  { "mad_dit", 0, 4, 64,  0x0, { 0x0,0x10000000,},_sym1535, "$", 0, 0, 0, 0, 0, _sym1533_operands,0,0,0, 0,&_sym1534,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'mads'.
static struct adl_opcode _sym4597[] = {
  // mads    (0)
  { "mads", 0, 4, 64,  0x0, { 0x0,0x30000000,},_sym1548, "$", 0, 0, 0, 0, 0, _sym1546_operands,0,0,0, 0,&_sym1547,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'maf'.
static struct adl_opcode _sym4598[] = {
  // maf    (0)
  { "maf", 0, 4, 64,  0x0, { 0x0,0x90000000,},_sym1551, "$", 0, 0, 0, 0, 0, _sym1549_operands,0,0,0, 0,&_sym1550,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'mod'.
static struct adl_opcode _sym4599[] = {
  // mod_s_cc_gZ_gX_gY_cond    (0)
  { "mod_s_cc_gZ_gX_gY_cond", 0, 25, 64,  0x0, { 0 },_sym2237, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv|\\.s\\.al|\\.s\\.cs|\\.s\\.lo|\\.s\\.vs|\\.s\\.hi|\\.s\\.eq|\\.s\\.ge|\\.s\\.gt|\\.s\\.pl|\\.s\\.mi|\\.s\\.le|\\.s\\.lt|\\.s\\.ne|\\.s\\.ls|\\.s\\.vc|\\.s\\.cc|\\.s\\.hs|\\.s\\.nv) (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym2232_operands,_sym2236,1,1, 0,&_sym2233,0,{}, 0,0,0,0,0,1, },
  // mod_s_cc_gZ_gX_gY_cond    (1)
  { "mod_s_cc_gZ_gX_gY_cond", 0, 25, 64,  0x0, { 0 },_sym3713, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv|\\.s\\.al|\\.s\\.cs|\\.s\\.lo|\\.s\\.vs|\\.s\\.hi|\\.s\\.eq|\\.s\\.ge|\\.s\\.gt|\\.s\\.pl|\\.s\\.mi|\\.s\\.le|\\.s\\.lt|\\.s\\.ne|\\.s\\.ls|\\.s\\.vc|\\.s\\.cc|\\.s\\.hs|\\.s\\.nv) (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3708_operands,_sym3712,1,1, 0,&_sym3709,0,{}, 0,0,0,0,0,1, },
  // mod_s_cc_gZ_gX_gY_unsigned    (2)
  { "mod_s_cc_gZ_gX_gY_unsigned", 0, 25, 64,  0x0, { 0 },_sym2247, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2243_operands,_sym2246,1,0, 0,&_sym2244,0,{}, 0,0,0,0,0,-1, },
  // mod_s_cc_gZ_gX_gY_unsigned    (3)
  { "mod_s_cc_gZ_gX_gY_unsigned", 0, 25, 64,  0x0, { 0 },_sym3723, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym3719_operands,_sym3722,1,0, 0,&_sym3720,0,{}, 0,0,0,0,0,-1, },
  // mod_s_gX_Is16_gX_mod    (4)
  { "mod_s_gX_Is16_gX_mod", 0, 25, 64,  0x0, { 0 },_sym2262, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2257_operands,_sym2260,1,0, 0,&_sym2258,0,{}, 0,0,_sym2261_argchecker,0,0,6, },
// mod_z_gX_Iu16_gX_mod    (5)
{ "mod_z_gX_Iu16_gX_mod", 0, 25, 64,  0x0, { 0 },_sym2282, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2277_operands,_sym2280,1,0, 0,&_sym2278,0,{}, 0,0,_sym2281_argchecker,0,0,7, },
// mod_s_gX_Is16_gX_mod    (6)
{ "mod_s_gX_Is16_gX_mod", 0, 25, 64,  0x0, { 0 },_sym3738, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3733_operands,_sym3736,1,0, 0,&_sym3734,0,{}, 0,0,_sym3737_argchecker,0,0,6, },
// mod_z_gX_Iu16_gX_mod    (7)
{ "mod_z_gX_Iu16_gX_mod", 0, 25, 64,  0x0, { 0 },_sym3758, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3753_operands,_sym3756,1,0, 0,&_sym3754,0,{}, 0,0,_sym3757_argchecker,0,0,7, },
// mod_s_gX_Is16_mod    (8)
{ "mod_s_gX_Is16_mod", 0, 25, 64,  0x0, { 0 },_sym2267, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2263_operands,_sym2266,1,0, 0,&_sym2264,0,{}, 0,0,0,0,0,10, },
// mod_z_gX_Iu16_mod    (9)
{ "mod_z_gX_Iu16_mod", 0, 25, 64,  0x0, { 0 },_sym2287, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2283_operands,_sym2286,1,0, 0,&_sym2284,0,{}, 0,0,0,0,0,11, },
// mod_s_gX_Is16_mod    (10)
{ "mod_s_gX_Is16_mod", 0, 25, 64,  0x0, { 0 },_sym3743, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3739_operands,_sym3742,1,0, 0,&_sym3740,0,{}, 0,0,0,0,0,10, },
// mod_z_gX_Iu16_mod    (11)
{ "mod_z_gX_Iu16_mod", 0, 25, 64,  0x0, { 0 },_sym3763, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3759_operands,_sym3762,1,0, 0,&_sym3760,0,{}, 0,0,0,0,0,11, },
};

// Instructions named 'mod.s'.
static struct adl_opcode _sym4600[] = {
  // mod_s_cc_gZ_gX_gY_signed    (0)
  { "mod_s_cc_gZ_gX_gY_signed", 0, 25, 64,  0x0, { 0 },_sym2242, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2238_operands,_sym2241,1,0, 0,&_sym2239,0,{}, 0,0,0,0,0,-1, },
  // mod_s_cc_gZ_gX_gY_signed    (1)
  { "mod_s_cc_gZ_gX_gY_signed", 0, 25, 64,  0x0, { 0 },_sym3718, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym3714_operands,_sym3717,1,0, 0,&_sym3715,0,{}, 0,0,0,0,0,-1, },
  // mod_s_gX_Is16_gX    (2)
  { "mod_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym2256, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2251_operands,_sym2254,1,0, 0,&_sym2252,0,{}, 0,0,_sym2255_argchecker,0,0,3, },
// mod_s_gX_Is16_gX    (3)
{ "mod_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym3732, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3727_operands,_sym3730,1,0, 0,&_sym3728,0,{}, 0,0,_sym3731_argchecker,0,0,3, },
// mod_s_gX_Is16    (4)
{ "mod_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0x98000000,},_sym2250, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2248_operands,0,0,0, 0,&_sym2249,0,{}, 0,0,0,0,0,5, },
// mod_s_gX_Is16    (5)
{ "mod_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0x98000000,},_sym3726, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3724_operands,0,0,0, 0,&_sym3725,0,{}, 0,0,0,0,0,5, },
};

// Instructions named 'mod.z'.
static struct adl_opcode _sym4601[] = {
  // mod_z_gX_Iu16_gX    (0)
  { "mod_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym2276, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2271_operands,_sym2274,1,0, 0,&_sym2272,0,{}, 0,0,_sym2275_argchecker,0,0,1, },
// mod_z_gX_Iu16_gX    (1)
{ "mod_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym3752, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3747_operands,_sym3750,1,0, 0,&_sym3748,0,{}, 0,0,_sym3751_argchecker,0,0,1, },
// mod_z_gX_Iu16    (2)
{ "mod_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x90000000,},_sym2270, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2268_operands,0,0,0, 0,&_sym2269,0,{}, 0,0,0,0,0,3, },
// mod_z_gX_Iu16    (3)
{ "mod_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x90000000,},_sym3746, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3744_operands,0,0,0, 0,&_sym3745,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'mod_s_cc_gz_gx_gy'.
static struct adl_opcode _sym4602[] = {
  // mod_s_cc_gZ_gX_gY    (0)
  { "mod_s_cc_gZ_gX_gY", 3, 25, 64,  0x0, { 0x0,0x32000000,},_sym2231, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 5, 10, 0, 0, _sym2229_operands,0,0,0, 0,&_sym2230,0,{}, 0,0,0,0,0,1, },
// mod_s_cc_gZ_gX_gY    (1)
{ "mod_s_cc_gZ_gX_gY", 3, 25, 64,  0x0, { 0x0,0x32000000,},_sym3707, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 5, 10, 0, 0, _sym3705_operands,0,0,0, 0,&_sym3706,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'mpy'.
static struct adl_opcode _sym4603[] = {
  // mpy_s_cc_gZ_gX_gY_cond    (0)
  { "mpy_s_cc_gZ_gX_gY_cond", 0, 25, 64,  0x0, { 0 },_sym2296, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv|\\.s\\.al|\\.s\\.cs|\\.s\\.lo|\\.s\\.vs|\\.s\\.hi|\\.s\\.eq|\\.s\\.ge|\\.s\\.gt|\\.s\\.pl|\\.s\\.mi|\\.s\\.le|\\.s\\.lt|\\.s\\.ne|\\.s\\.ls|\\.s\\.vc|\\.s\\.cc|\\.s\\.hs|\\.s\\.nv) (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym2291_operands,_sym2295,1,1, 0,&_sym2292,0,{}, 0,0,0,0,0,1, },
  // mpy_s_cc_gZ_gX_gY_cond    (1)
  { "mpy_s_cc_gZ_gX_gY_cond", 0, 25, 64,  0x0, { 0 },_sym3772, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv|\\.s\\.al|\\.s\\.cs|\\.s\\.lo|\\.s\\.vs|\\.s\\.hi|\\.s\\.eq|\\.s\\.ge|\\.s\\.gt|\\.s\\.pl|\\.s\\.mi|\\.s\\.le|\\.s\\.lt|\\.s\\.ne|\\.s\\.ls|\\.s\\.vc|\\.s\\.cc|\\.s\\.hs|\\.s\\.nv) (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3767_operands,_sym3771,1,1, 0,&_sym3768,0,{}, 0,0,0,0,0,1, },
  // mpy_s_cc_gZ_gX_gY_unsigned    (2)
  { "mpy_s_cc_gZ_gX_gY_unsigned", 0, 25, 64,  0x0, { 0 },_sym2306, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2302_operands,_sym2305,1,0, 0,&_sym2303,0,{}, 0,0,0,0,0,-1, },
  // mpy_s_cc_gZ_gX_gY_unsigned    (3)
  { "mpy_s_cc_gZ_gX_gY_unsigned", 0, 25, 64,  0x0, { 0 },_sym3782, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym3778_operands,_sym3781,1,0, 0,&_sym3779,0,{}, 0,0,0,0,0,-1, },
  // mpy_s_gX_Is16_gX_mpy    (4)
  { "mpy_s_gX_Is16_gX_mpy", 0, 25, 64,  0x0, { 0 },_sym2321, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2316_operands,_sym2319,1,0, 0,&_sym2317,0,{}, 0,0,_sym2320_argchecker,0,0,6, },
// mpy_z_gX_Iu16_gX_mpy    (5)
{ "mpy_z_gX_Iu16_gX_mpy", 0, 25, 64,  0x0, { 0 },_sym2341, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2336_operands,_sym2339,1,0, 0,&_sym2337,0,{}, 0,0,_sym2340_argchecker,0,0,7, },
// mpy_s_gX_Is16_gX_mpy    (6)
{ "mpy_s_gX_Is16_gX_mpy", 0, 25, 64,  0x0, { 0 },_sym3797, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3792_operands,_sym3795,1,0, 0,&_sym3793,0,{}, 0,0,_sym3796_argchecker,0,0,6, },
// mpy_z_gX_Iu16_gX_mpy    (7)
{ "mpy_z_gX_Iu16_gX_mpy", 0, 25, 64,  0x0, { 0 },_sym3817, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3812_operands,_sym3815,1,0, 0,&_sym3813,0,{}, 0,0,_sym3816_argchecker,0,0,7, },
// mpy_s_gX_Is16_mpy    (8)
{ "mpy_s_gX_Is16_mpy", 0, 25, 64,  0x0, { 0 },_sym2326, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2322_operands,_sym2325,1,0, 0,&_sym2323,0,{}, 0,0,0,0,0,10, },
// mpy_z_gX_Iu16_mpy    (9)
{ "mpy_z_gX_Iu16_mpy", 0, 25, 64,  0x0, { 0 },_sym2346, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2342_operands,_sym2345,1,0, 0,&_sym2343,0,{}, 0,0,0,0,0,11, },
// mpy_s_gX_Is16_mpy    (10)
{ "mpy_s_gX_Is16_mpy", 0, 25, 64,  0x0, { 0 },_sym3802, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3798_operands,_sym3801,1,0, 0,&_sym3799,0,{}, 0,0,0,0,0,10, },
// mpy_z_gX_Iu16_mpy    (11)
{ "mpy_z_gX_Iu16_mpy", 0, 25, 64,  0x0, { 0 },_sym3822, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3818_operands,_sym3821,1,0, 0,&_sym3819,0,{}, 0,0,0,0,0,11, },
};

// Instructions named 'mpy.s'.
static struct adl_opcode _sym4604[] = {
  // mpy_s_cc_gZ_gX_gY_signed    (0)
  { "mpy_s_cc_gZ_gX_gY_signed", 0, 25, 64,  0x0, { 0 },_sym2301, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2297_operands,_sym2300,1,0, 0,&_sym2298,0,{}, 0,0,0,0,0,-1, },
  // mpy_s_cc_gZ_gX_gY_signed    (1)
  { "mpy_s_cc_gZ_gX_gY_signed", 0, 25, 64,  0x0, { 0 },_sym3777, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym3773_operands,_sym3776,1,0, 0,&_sym3774,0,{}, 0,0,0,0,0,-1, },
  // mpy_s_gX_Is16_gX    (2)
  { "mpy_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym2315, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2310_operands,_sym2313,1,0, 0,&_sym2311,0,{}, 0,0,_sym2314_argchecker,0,0,3, },
// mpy_s_gX_Is16_gX    (3)
{ "mpy_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym3791, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3786_operands,_sym3789,1,0, 0,&_sym3787,0,{}, 0,0,_sym3790_argchecker,0,0,3, },
// mpy_s_gX_Is16    (4)
{ "mpy_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xa8000000,},_sym2309, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2307_operands,0,0,0, 0,&_sym2308,0,{}, 0,0,0,0,0,5, },
// mpy_s_gX_Is16    (5)
{ "mpy_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xa8000000,},_sym3785, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3783_operands,0,0,0, 0,&_sym3784,0,{}, 0,0,0,0,0,5, },
};

// Instructions named 'mpy.z'.
static struct adl_opcode _sym4605[] = {
  // mpy_z_gX_Iu16_gX    (0)
  { "mpy_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym2335, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2330_operands,_sym2333,1,0, 0,&_sym2331,0,{}, 0,0,_sym2334_argchecker,0,0,1, },
// mpy_z_gX_Iu16_gX    (1)
{ "mpy_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym3811, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3806_operands,_sym3809,1,0, 0,&_sym3807,0,{}, 0,0,_sym3810_argchecker,0,0,1, },
// mpy_z_gX_Iu16    (2)
{ "mpy_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xa0000000,},_sym2329, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2327_operands,0,0,0, 0,&_sym2328,0,{}, 0,0,0,0,0,3, },
// mpy_z_gX_Iu16    (3)
{ "mpy_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xa0000000,},_sym3805, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3803_operands,0,0,0, 0,&_sym3804,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'mpy_s_cc_gz_gx_gy'.
static struct adl_opcode _sym4606[] = {
  // mpy_s_cc_gZ_gX_gY    (0)
  { "mpy_s_cc_gZ_gX_gY", 3, 25, 64,  0x0, { 0x0,0x30000000,},_sym2290, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 5, 10, 0, 0, _sym2288_operands,0,0,0, 0,&_sym2289,0,{}, 0,0,0,0,0,1, },
// mpy_s_cc_gZ_gX_gY    (1)
{ "mpy_s_cc_gZ_gX_gY", 3, 25, 64,  0x0, { 0x0,0x30000000,},_sym3766, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 5, 10, 0, 0, _sym3764_operands,0,0,0, 0,&_sym3765,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'mv'.
static struct adl_opcode _sym4607[] = {
  // mv_cc_gY_gX_11    (0)
  { "mv_cc_gY_gX_11", 3, 25, 64,  0x0, { 0x0,0x3b004400,},_sym3861, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3859_operands,0,0,1, 0,&_sym3860,0,{}, 0,0,0,0,0,7, },
  // mv_cc_gY_gX_10    (1)
  { "mv_cc_gY_gX_10", 3, 25, 64,  0x0, { 0x0,0x3b004000,},_sym3858, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3856_operands,0,0,1, 0,&_sym3857,0,{}, 0,0,0,0,0,6, },
  // mv_cc_gY_gX_01    (2)
  { "mv_cc_gY_gX_01", 3, 25, 64,  0x0, { 0x0,0x3b000400,},_sym3855, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3853_operands,0,0,1, 0,&_sym3854,0,{}, 0,0,0,0,0,5, },
  // mv_cc_gY_gX_00    (3)
  { "mv_cc_gY_gX_00", 3, 25, 64,  0x0, { 0x0,0x3b000000,},_sym3852, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym3850_operands,0,0,1, 0,&_sym3851,0,{}, 0,0,0,0,0,4, },
  // mv_cc_gY_gX_00    (4)
  { "mv_cc_gY_gX_00", 3, 25, 64,  0x0, { 0x0,0x3b000000,},_sym2376, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym2374_operands,0,0,1, 0,&_sym2375,0,{}, 0,0,0,0,0,4, },
  // mv_cc_gY_gX_01    (5)
  { "mv_cc_gY_gX_01", 3, 25, 64,  0x0, { 0x0,0x3b000400,},_sym2379, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym2377_operands,0,0,1, 0,&_sym2378,0,{}, 0,0,0,0,0,5, },
  // mv_cc_gY_gX_10    (6)
  { "mv_cc_gY_gX_10", 3, 25, 64,  0x0, { 0x0,0x3b004000,},_sym2382, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym2380_operands,0,0,1, 0,&_sym2381,0,{}, 0,0,0,0,0,6, },
  // mv_cc_gY_gX_11    (7)
  { "mv_cc_gY_gX_11", 3, 25, 64,  0x0, { 0x0,0x3b004400,},_sym2385, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym2383_operands,0,0,1, 0,&_sym2384,0,{}, 0,0,0,0,0,7, },
  // mv_cc_gY_div    (8)
  { "mv_cc_gY_div", 3, 25, 64,  0x0, { 0x0,0x3b007800,},_sym2373, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),quot$", 0, 2, 2, 0, 1, _sym2371_operands,0,0,1, 0,&_sym2372,0,{}, 0,0,0,0,0,9, },
  // mv_cc_gY_div    (9)
  { "mv_cc_gY_div", 3, 25, 64,  0x0, { 0x0,0x3b007800,},_sym3849, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),quot$", 0, 2, 2, 0, 1, _sym3847_operands,0,0,1, 0,&_sym3848,0,{}, 0,0,0,0,0,9, },
  // mv_cc_gY_mod    (10)
  { "mv_cc_gY_mod", 3, 25, 64,  0x0, { 0x0,0x3b00f800,},_sym3876, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),rem$", 0, 2, 2, 0, 1, _sym3874_operands,0,0,1, 0,&_sym3875,0,{}, 0,0,0,0,0,11, },
  // mv_cc_gY_mod    (11)
  { "mv_cc_gY_mod", 3, 25, 64,  0x0, { 0x0,0x3b00f800,},_sym2400, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),rem$", 0, 2, 2, 0, 1, _sym2398_operands,0,0,1, 0,&_sym2399,0,{}, 0,0,0,0,0,11, },
  // mv_cc_gY_sp_1    (12)
  { "mv_cc_gY_sp_1", 3, 25, 64,  0x0, { 0x0,0x3b007000,},_sym2403, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym2401_operands,0,0,1, 0,&_sym2402,0,{}, 0,0,0,0,0,19, },
  // mv_cc_sp_gX_1    (13)
  { "mv_cc_sp_gX_1", 3, 25, 64,  0x0, { 0x0,0x3b000700,},_sym3885, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym3883_operands,0,0,1, 0,&_sym3884,0,{}, 0,0,0,0,0,16, },
  // mv_cc_sp_gX_2    (14)
  { "mv_cc_sp_gX_2", 3, 25, 64,  0x0, { 0x0,0x3b004700,},_sym3888, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym3886_operands,0,0,1, 0,&_sym3887,0,{}, 0,0,0,0,0,17, },
  // mv_cc_gY_sp_2    (15)
  { "mv_cc_gY_sp_2", 3, 25, 64,  0x0, { 0x0,0x3b007400,},_sym2406, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym2404_operands,0,0,1, 0,&_sym2405,0,{}, 0,0,0,0,0,18, },
  // mv_cc_sp_gX_1    (16)
  { "mv_cc_sp_gX_1", 3, 25, 64,  0x0, { 0x0,0x3b000700,},_sym2409, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym2407_operands,0,0,1, 0,&_sym2408,0,{}, 0,0,0,0,0,16, },
  // mv_cc_sp_gX_2    (17)
  { "mv_cc_sp_gX_2", 3, 25, 64,  0x0, { 0x0,0x3b004700,},_sym2412, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym2410_operands,0,0,1, 0,&_sym2411,0,{}, 0,0,0,0,0,17, },
  // mv_cc_gY_sp_2    (18)
  { "mv_cc_gY_sp_2", 3, 25, 64,  0x0, { 0x0,0x3b007400,},_sym3882, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym3880_operands,0,0,1, 0,&_sym3881,0,{}, 0,0,0,0,0,18, },
  // mv_cc_gY_sp_1    (19)
  { "mv_cc_gY_sp_1", 3, 25, 64,  0x0, { 0x0,0x3b007000,},_sym3879, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym3877_operands,0,0,1, 0,&_sym3878,0,{}, 0,0,0,0,0,19, },
  // mvS_asY_aX_opS_mv    (20)
  { "mvS_asY_aX_opS_mv", 0, 25, 64,  0x0, { 0 },_sym3840, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(a0|a1|a2|a3)$", 0, 2, 2, 0, 0, _sym3835_operands,_sym3839,1,0, 0,&_sym3837,0,{}, 0,0,0,0,0,-1, },
  // mvS_aY_asX_opS_mv    (21)
  { "mvS_aY_asX_opS_mv", 0, 25, 64,  0x0, { 0 },_sym3831, "^ *(a0|a1|a2|a3),(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15)$", 0, 2, 2, 0, 0, _sym3826_operands,_sym3830,1,0, 0,&_sym3828,0,{}, 0,0,0,0,0,-1, },
  // mvB_asY_aX_opB_mv    (22)
  { "mvB_asY_aX_opB_mv", 0, 15, 64,  0x0, { 0 },_sym1137, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(a0|a1|a2|a3)$", 0, 2, 2, 0, 0, _sym1132_operands,_sym1136,1,0, 0,&_sym1134,0,{}, 0,0,0,0,0,-1, },
  // mvS_asY_aX_opS_mv    (23)
  { "mvS_asY_aX_opS_mv", 0, 25, 64,  0x0, { 0 },_sym2364, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(a0|a1|a2|a3)$", 0, 2, 2, 0, 0, _sym2359_operands,_sym2363,1,0, 0,&_sym2361,0,{}, 0,0,0,0,0,-1, },
  // mv_asX_gY    (24)
  { "mv_asX_gY", 8, 64, 64,  0x0, { 0x0,0xc8400,},_sym453, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym451_operands,0,0,0, 0,&_sym452,0,{}, 0,0,0,0,0,-1, },
  // mvB_aY_asX_opB_mv    (25)
  { "mvB_aY_asX_opB_mv", 0, 15, 64,  0x0, { 0 },_sym1128, "^ *(a0|a1|a2|a3),(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15)$", 0, 2, 2, 0, 0, _sym1123_operands,_sym1127,1,0, 0,&_sym1125,0,{}, 0,0,0,0,0,-1, },
  // mvS_aY_asX_opS_mv    (26)
  { "mvS_aY_asX_opS_mv", 0, 25, 64,  0x0, { 0 },_sym2355, "^ *(a0|a1|a2|a3),(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15)$", 0, 2, 2, 0, 0, _sym2350_operands,_sym2354,1,0, 0,&_sym2352,0,{}, 0,0,0,0,0,-1, },
  // mv_cgu_gX    (27)
  { "mv_cgu_gX", 8, 64, 64,  0x0, { 0x0,0xc9800,},_sym461, "^ *(dl_sc_x|dl_sc_y|ul_sc_x|ul_sc_y|ul_sc_short|ovsf_num|gold_x1|gold_x2|ovsf_dl_sc_y|ovsf_dl_sc_y_bak|dl_sc_x_bak),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym459_operands,0,0,0, 0,&_sym460,0,{}, 0,0,0,0,0,-1, },
  // mv_gX_cgu    (28)
  { "mv_gX_cgu", 8, 64, 64,  0x0, { 0x0,0xcb800,},_sym476, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(dl_sc_x|dl_sc_y|ul_sc_x|ul_sc_y|ul_sc_short|ovsf_num|gold_x1|gold_x2|ovsf_dl_sc_y|ovsf_dl_sc_y_bak|dl_sc_x_bak)$", 0, 2, 2, 0, 0, _sym474_operands,0,0,0, 0,&_sym475,0,{}, 0,0,0,0,0,-1, },
  // mv_gY_asX    (29)
  { "mv_gY_asX", 8, 64, 64,  0x0, { 0x0,0xca400,},_sym482, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15)$", 0, 2, 2, 0, 0, _sym480_operands,0,0,0, 0,&_sym481,0,{}, 0,0,0,0,0,-1, },
  // mv_nco_phase_gX    (30)
  { "mv_nco_phase_gX", 8, 64, 64,  0x0, { 0x0,0xc9080,},_sym499, "^ *nco_phase,(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym497_operands,0,0,0, 0,&_sym498,0,{}, 0,0,0,0,0,-1, },
  // mv_gX_nco_phase    (31)
  { "mv_gX_nco_phase", 8, 64, 64,  0x0, { 0x0,0xcb080,},_sym479, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),nco_phase$", 0, 1, 1, 0, 0, _sym477_operands,0,0,0, 0,&_sym478,0,{}, 0,0,0,0,0,-1, },
  // mv_nco_freq_gX    (32)
  { "mv_nco_freq_gX", 8, 64, 64,  0x0, { 0x0,0xc9000,},_sym493, "^ *nco_freq,(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym491_operands,0,0,0, 0,&_sym492,0,{}, 0,0,0,0,0,-1, },
  // mv_nco_k_gX    (33)
  { "mv_nco_k_gX", 8, 64, 64,  0x0, { 0x0,0xc9180,},_sym496, "^ *nco_k,(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym494_operands,0,0,0, 0,&_sym495,0,{}, 0,0,0,0,0,-1, },
  // mv_cc_sp_sp    (34)
  { "mv_cc_sp_sp", 3, 25, 64,  0x0, { 0x0,0x3b007700,},_sym2415, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp$", 0, 1, 1, 0, 1, _sym2413_operands,0,0,1, 0,&_sym2414,0,{}, 0,0,0,0,0,35, },
  // mv_cc_sp_sp    (35)
  { "mv_cc_sp_sp", 3, 25, 64,  0x0, { 0x0,0x3b007700,},_sym3891, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp$", 0, 1, 1, 0, 1, _sym3889_operands,0,0,1, 0,&_sym3890,0,{}, 0,0,0,0,0,35, },
  // mv_cc_gY_gX_mv_cc_gX_2    (36)
  { "mv_cc_gY_gX_mv_cc_gX_2", 3, 25, 64,  0x0, { 0x0,0x3b004680,},_sym3867, "^ *cc,(g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym3865_operands,0,0,0, 0,&_sym3866,0,{}, 0,0,0,0,0,-1, },
  // mv_aX_sp    (37)
  { "mv_aX_sp", 3, 25, 64,  0x0, { 0x0,0x6000800,},_sym3843, "^ *(a0|a1|a2|a3),sp$", 0, 1, 1, 0, 0, _sym3841_operands,0,0,0, 0,&_sym3842,0,{}, 0,0,0,0,0,-1, },
  // mv_cc_gY_gX_mv_gX_cc_2    (38)
  { "mv_cc_gY_gX_mv_gX_cc_2", 3, 25, 64,  0x0, { 0x0,0x3b006c00,},_sym3873, "^ *(g8|g9|g10|g11),cc$", 0, 1, 1, 0, 0, _sym3871_operands,0,0,0, 0,&_sym3872,0,{}, 0,0,0,0,0,-1, },
  // mv_cc_gY_gX_mv_gX_cc_1    (39)
  { "mv_cc_gY_gX_mv_gX_cc_1", 3, 25, 64,  0x0, { 0x0,0x3b006800,},_sym3870, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),cc$", 0, 1, 1, 0, 0, _sym3868_operands,0,0,0, 0,&_sym3869,0,{}, 0,0,0,0,0,-1, },
  // mv_cc_gY_gX_mv_cc_gX_1    (40)
  { "mv_cc_gY_gX_mv_cc_gX_1", 3, 25, 64,  0x0, { 0x0,0x3b000680,},_sym3864, "^ *cc,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 1, 1, 0, 0, _sym3862_operands,0,0,0, 0,&_sym3863,0,{}, 0,0,0,0,0,-1, },
  // mv_sp_aX    (41)
  { "mv_sp_aX", 3, 25, 64,  0x0, { 0x0,0x6200800,},_sym2437, "^ *sp,(a0|a1|a2|a3)$", 0, 1, 1, 0, 0, _sym2435_operands,0,0,0, 0,&_sym2436,0,{}, 0,0,0,0,0,-1, },
  // mv_cc_gY_gX_mv_gX_cc_2    (42)
  { "mv_cc_gY_gX_mv_gX_cc_2", 3, 25, 64,  0x0, { 0x0,0x3b006c00,},_sym2397, "^ *(g8|g9|g10|g11),cc$", 0, 1, 1, 0, 0, _sym2395_operands,0,0,0, 0,&_sym2396,0,{}, 0,0,0,0,0,-1, },
  // mv_cc_gY_gX_mv_gX_cc_1    (43)
  { "mv_cc_gY_gX_mv_gX_cc_1", 3, 25, 64,  0x0, { 0x0,0x3b006800,},_sym2394, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),cc$", 0, 1, 1, 0, 0, _sym2392_operands,0,0,0, 0,&_sym2393,0,{}, 0,0,0,0,0,-1, },
  // mv_cc_gY_gX_mv_cc_gX_2    (44)
  { "mv_cc_gY_gX_mv_cc_gX_2", 3, 25, 64,  0x0, { 0x0,0x3b004680,},_sym2391, "^ *cc,(g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym2389_operands,0,0,0, 0,&_sym2390,0,{}, 0,0,0,0,0,-1, },
  // mv_cc_gY_gX_mv_cc_gX_1    (45)
  { "mv_cc_gY_gX_mv_cc_gX_1", 3, 25, 64,  0x0, { 0x0,0x3b000680,},_sym2388, "^ *cc,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 1, 1, 0, 0, _sym2386_operands,0,0,0, 0,&_sym2387,0,{}, 0,0,0,0,0,-1, },
  // mv_aX_sp    (46)
  { "mv_aX_sp", 3, 25, 64,  0x0, { 0x0,0x6000800,},_sym2367, "^ *(a0|a1|a2|a3),sp$", 0, 1, 1, 0, 0, _sym2365_operands,0,0,0, 0,&_sym2366,0,{}, 0,0,0,0,0,-1, },
  // mv_gY_asX_mv_sp_asX    (47)
  { "mv_gY_asX_mv_sp_asX", 0, 64, 64,  0x0, { 0 },_sym487, "^ *sp,(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15)$", 0, 1, 1, 0, 0, _sym483_operands,_sym486,1,0, 0,&_sym484,0,{}, 0,0,0,0,0,-1, },
  // mv_asX_gY_mv_asX_sp    (48)
  { "mv_asX_gY_mv_asX_sp", 0, 64, 64,  0x0, { 0 },_sym458, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),sp$", 0, 1, 1, 0, 0, _sym454_operands,_sym457,1,0, 0,&_sym455,0,{}, 0,0,0,0,0,-1, },
  // mv_sp_aX    (49)
  { "mv_sp_aX", 3, 25, 64,  0x0, { 0x0,0x6200800,},_sym3913, "^ *sp,(a0|a1|a2|a3)$", 0, 1, 1, 0, 0, _sym3911_operands,0,0,0, 0,&_sym3912,0,{}, 0,0,0,0,0,-1, },
  // mv_s_gX_Is16_0_mv    (50)
  { "mv_s_gX_Is16_0_mv", 0, 25, 64,  0x0, { 0 },_sym3899, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3895_operands,_sym3898,1,0, 0,&_sym3896,0,{}, 0,0,0,0,0,59, },
// mv_s_gX_Is16_1_mv    (51)
{ "mv_s_gX_Is16_1_mv", 0, 25, 64,  0x0, { 0 },_sym3907, "^ *(g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3903_operands,_sym3906,1,0, 0,&_sym3904,0,{}, 0,0,0,0,0,58, },
// mv_z_gX_Iu16_0_mv    (52)
{ "mv_z_gX_Iu16_0_mv", 0, 25, 64,  0x0, { 0 },_sym3921, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3917_operands,_sym3920,1,0, 0,&_sym3918,0,{}, 0,0,0,0,0,55, },
// mv_z_gX_Iu16_1_mv    (53)
{ "mv_z_gX_Iu16_1_mv", 0, 25, 64,  0x0, { 0 },_sym3929, "^ *(g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3925_operands,_sym3928,1,0, 0,&_sym3926,0,{}, 0,0,0,0,0,54, },
// mv_z_gX_Iu16_1_mv    (54)
{ "mv_z_gX_Iu16_1_mv", 0, 25, 64,  0x0, { 0 },_sym2453, "^ *(g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2449_operands,_sym2452,1,0, 0,&_sym2450,0,{}, 0,0,0,0,0,54, },
// mv_z_gX_Iu16_0_mv    (55)
{ "mv_z_gX_Iu16_0_mv", 0, 25, 64,  0x0, { 0 },_sym2445, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2441_operands,_sym2444,1,0, 0,&_sym2442,0,{}, 0,0,0,0,0,55, },
// mv_s_gX_Is16_1_mv    (56)
{ "mv_s_gX_Is16_1_mv", 0, 25, 64,  0x0, { 0 },_sym2431, "^ *(g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2427_operands,_sym2430,1,0, 0,&_sym2428,0,{}, 0,0,0,0,0,58, },
// mv_s_gX_Is16_0_mv    (57)
{ "mv_s_gX_Is16_0_mv", 0, 25, 64,  0x0, { 0 },_sym2423, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2419_operands,_sym2422,1,0, 0,&_sym2420,0,{}, 0,0,0,0,0,59, },
// mv_gX_I32_1    (58)
{ "mv_gX_I32_1", 8, 64, 64,  0x0, { 0x0,0xc4120,},_sym467, "^ *(g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym465_operands,0,0,0, 0,&_sym466,0,{}, 0,0,0,0,0,58, },
// mv_gX_I32_0    (59)
{ "mv_gX_I32_0", 8, 64, 64,  0x0, { 0x0,0xc4100,},_sym464, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym462_operands,0,0,0, 0,&_sym463,0,{}, 0,0,0,0,0,59, },
// mv_asX_I17    (60)
{ "mv_asX_I17", 8, 64, 64,  0x0, { 0x0,0x80200,},_sym450, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym448_operands,0,0,0, 0,&_sym449,0,{}, 0,0,0,0,0,60, },
// mv_aX_I17    (61)
{ "mv_aX_I17", 8, 64, 64,  0x0, { 0x0,0x80000,},_sym447, "^ *(a0|a1|a2|a3),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym445_operands,0,0,0, 0,&_sym446,0,{}, 0,0,0,0,0,61, },
// mv_w_R7_rV    (62)
{ "mv_w_R7_rV", 8, 64, 64,  0x0, { 0x0,0xb6200,},_sym502, "^ *\\[r7V\\],([^},[[,, ]+),([^},[[,, ]+)$", 0, 2, 2, 0, 0, _sym500_operands,0,0,0, 0,&_sym501,0,{}, 0,0,0,0,0,62, },
// mv_nco_k_Iu10    (63)
{ "mv_nco_k_Iu10", 1, 15, 64,  0x0, { 0x0,0xe0000000,},_sym1140, "^ *nco_k,([^},[_, ]+)$", 0, 1, 1, 0, 0, _sym1138_operands,0,0,0, 0,&_sym1139,0,{}, 0,0,0,0,0,63, },
// mv_R7_rV_mv_R7_rV_Is32    (64)
{ "mv_R7_rV_mv_R7_rV_Is32", 0, 64, 64,  0x0, { 0 },_sym432, "^ *\\[r7V\\],([^},[[, ]+)$", 0, 1, 1, 0, 0, _sym426_operands,_sym431,1,0, 0,&_sym427,0,{}, 0,0,0,0,0,64, },
// mv_cc_Iu4    (65)
{ "mv_cc_Iu4", 3, 25, 64,  0x0, { 0x0,0x60000680,},_sym3846, "^ *cc,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3844_operands,0,0,0, 0,&_sym3845,0,{}, 0,0,0,0,0,67, },
// mv_sp_Iu17_opS_HI    (66)
{ "mv_sp_Iu17_opS_HI", 3, 25, 64,  0x0, { 0x0,0x3e000000,},_sym2434, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym2432_operands,0,0,0, 0,&_sym2433,0,{}, 0,0,0,0,0,68, },
// mv_cc_Iu4    (67)
{ "mv_cc_Iu4", 3, 25, 64,  0x0, { 0x0,0x60000680,},_sym2370, "^ *cc,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym2368_operands,0,0,0, 0,&_sym2369,0,{}, 0,0,0,0,0,67, },
// mv_sp_Iu17_opS_LO    (68)
{ "mv_sp_Iu17_opS_LO", 3, 25, 64,  0x0, { 0x0,0x3e000000,},_sym3910, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3908_operands,0,0,0, 0,&_sym3909,0,{}, 0,0,0,0,0,68, },
};

// Instructions named 'mv.h'.
static struct adl_opcode _sym4608[] = {
  // mv_R7_rV_gX_h    (0)
  { "mv_R7_rV_gX_h", 8, 64, 64,  0x0, { 0x0,0xc8000,},_sym422, "^ *\\[r7V\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym420_operands,0,0,0, 0,&_sym421,0,{}, 0,0,0,0,0,-1, },
  // mv_gX_R_rS0_h    (1)
  { "mv_gX_R_rS0_h", 8, 64, 64,  0x0, { 0x0,0xca000,},_sym470, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[rS0\\]$", 0, 1, 1, 0, 0, _sym468_operands,0,0,0, 0,&_sym469,0,{}, 0,0,0,0,0,-1, },
  // mv_h_R7_rV    (2)
  { "mv_h_R7_rV", 8, 64, 64,  0x0, { 0x0,0xb6000,},_sym490, "^ *\\[r7V\\],([^},[[, ]+)$", 0, 1, 1, 0, 0, _sym488_operands,0,0,0, 0,&_sym489,0,{}, 0,0,0,0,0,2, },
};

// Instructions named 'mv.ocram'.
static struct adl_opcode _sym4609[] = {
  // mv_ocram_gX_I32    (0)
  { "mv_ocram_gX_I32", 8, 64, 64,  0x0, { 0x0,0xc4100,},_sym4524, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4522_operands,0,0,0, 0,&_sym4523,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'mv.s'.
static struct adl_opcode _sym4610[] = {
  // mv_s_gX_Is16_0    (0)
  { "mv_s_gX_Is16_0", 3, 25, 64,  0x0, { 0x0,0x68000000,},_sym2418, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2416_operands,0,0,0, 0,&_sym2417,0,{}, 0,0,0,0,0,2, },
// mv_s_gX_Is16_1    (1)
{ "mv_s_gX_Is16_1", 3, 25, 64,  0x0, { 0x0,0x68000400,},_sym2426, "^ *(g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2424_operands,0,0,0, 0,&_sym2425,0,{}, 0,0,0,0,0,3, },
// mv_s_gX_Is16_0    (2)
{ "mv_s_gX_Is16_0", 3, 25, 64,  0x0, { 0x0,0x68000000,},_sym3894, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3892_operands,0,0,0, 0,&_sym3893,0,{}, 0,0,0,0,0,2, },
// mv_s_gX_Is16_1    (3)
{ "mv_s_gX_Is16_1", 3, 25, 64,  0x0, { 0x0,0x68000400,},_sym3902, "^ *(g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3900_operands,0,0,0, 0,&_sym3901,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'mv.w'.
static struct adl_opcode _sym4611[] = {
  // mv_R7_rV_gX_w    (0)
  { "mv_R7_rV_gX_w", 8, 64, 64,  0x0, { 0x0,0xc8200,},_sym425, "^ *\\[r7V\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym423_operands,0,0,0, 0,&_sym424,0,{}, 0,0,0,0,0,-1, },
  // mv_gX_R_rS0_w    (1)
  { "mv_gX_R_rS0_w", 8, 64, 64,  0x0, { 0x0,0xca200,},_sym473, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),\\[rS0\\]$", 0, 1, 1, 0, 0, _sym471_operands,0,0,0, 0,&_sym472,0,{}, 0,0,0,0,0,-1, },
  // mv_R7_rV_mv_w_R7_rV_Is16_Is16    (2)
  { "mv_R7_rV_mv_w_R7_rV_Is16_Is16", 0, 64, 64,  0x0, { 0 },_sym437, "^ *\\[r7V\\],([^},[[,, ]+),([^},[[,, ]+)$", 0, 2, 2, 0, 0, _sym433_operands,_sym436,1,0, 0,&_sym434,0,{}, 0,0,0,0,0,2, },
// mv_R7_rV_mv_w_R7_rV_Is32    (3)
{ "mv_R7_rV_mv_w_R7_rV_Is32", 0, 64, 64,  0x0, { 0 },_sym444, "^ *\\[r7V\\],([^},[[, ]+)$", 0, 1, 1, 0, 0, _sym438_operands,_sym443,1,0, 0,&_sym439,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'mv.z'.
static struct adl_opcode _sym4612[] = {
  // mv_z_gX_Iu16_0    (0)
  { "mv_z_gX_Iu16_0", 3, 25, 64,  0x0, { 0x0,0x60000000,},_sym2440, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2438_operands,0,0,0, 0,&_sym2439,0,{}, 0,0,0,0,0,2, },
// mv_z_gX_Iu16_1    (1)
{ "mv_z_gX_Iu16_1", 3, 25, 64,  0x0, { 0x0,0x60000400,},_sym2448, "^ *(g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2446_operands,0,0,0, 0,&_sym2447,0,{}, 0,0,0,0,0,3, },
// mv_z_gX_Iu16_0    (2)
{ "mv_z_gX_Iu16_0", 3, 25, 64,  0x0, { 0x0,0x60000000,},_sym3916, "^ *(g0|g1|g2|g3|g4|g5|g6|g7),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3914_operands,0,0,0, 0,&_sym3915,0,{}, 0,0,0,0,0,2, },
// mv_z_gX_Iu16_1    (3)
{ "mv_z_gX_Iu16_1", 3, 25, 64,  0x0, { 0x0,0x60000400,},_sym3924, "^ *(g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3922_operands,0,0,0, 0,&_sym3923,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'mvb'.
static struct adl_opcode _sym4613[] = {
  // mvB_aY_asX_opB    (0)
  { "mvB_aY_asX_opB", 1, 15, 64,  0x0, { 0x0,0xfa000000,},_sym1122, "^ *(a0|a1|a2|a3),(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15)$", 0, 2, 2, 0, 0, _sym1120_operands,0,0,0, 0,&_sym1121,0,{}, 0,0,0,0,0,-1, },
  // mvB_asY_aX_opB    (1)
  { "mvB_asY_aX_opB", 1, 15, 64,  0x0, { 0x0,0xfa400000,},_sym1131, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(a0|a1|a2|a3)$", 0, 2, 2, 0, 0, _sym1129_operands,0,0,0, 0,&_sym1130,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'mvip'.
static struct adl_opcode _sym4614[] = {
  // mvip_Iu9_gX_Iu32    (0)
  { "mvip_Iu9_gX_Iu32", 8, 64, 64,  0x0, { 0x0,0xd0000,},_sym505, "^ *([^},[,, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym503_operands,0,0,0, 0,&_sym504,0,{}, 0,0,0,0,0,0, },
// mvip_gX_Iu9_Iu32    (1)
{ "mvip_gX_Iu9_Iu32", 8, 64, 64,  0x0, { 0x0,0xd8000,},_sym513, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym511_operands,0,0,0, 0,&_sym512,0,{}, 0,0,0,0,0,1, },
// mvip_Iu9_gX_Iu32_mvip_Iu9_Iu32    (2)
{ "mvip_Iu9_gX_Iu32_mvip_Iu9_Iu32", 0, 64, 64,  0x0, { 0 },_sym510, "^ *([^},[, ]+),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym506_operands,_sym509,1,0, 0,&_sym507,0,{}, 0,0,0,0,0,2, },
};

// Instructions named 'mvs'.
static struct adl_opcode _sym4615[] = {
  // mvS_aY_asX_opS    (0)
  { "mvS_aY_asX_opS", 3, 25, 64,  0x0, { 0x0,0x6000000,},_sym2349, "^ *(a0|a1|a2|a3),(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15)$", 0, 2, 2, 0, 0, _sym2347_operands,0,0,0, 0,&_sym2348,0,{}, 0,0,0,0,0,-1, },
  // mvS_asY_aX_opS    (1)
  { "mvS_asY_aX_opS", 3, 25, 64,  0x0, { 0x0,0x6200000,},_sym2358, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(a0|a1|a2|a3)$", 0, 2, 2, 0, 0, _sym2356_operands,0,0,0, 0,&_sym2357,0,{}, 0,0,0,0,0,-1, },
  // mvS_aY_asX_opS    (2)
  { "mvS_aY_asX_opS", 3, 25, 64,  0x0, { 0x0,0x6000000,},_sym3825, "^ *(a0|a1|a2|a3),(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15)$", 0, 2, 2, 0, 0, _sym3823_operands,0,0,0, 0,&_sym3824,0,{}, 0,0,0,0,0,-1, },
  // mvS_asY_aX_opS    (3)
  { "mvS_asY_aX_opS", 3, 25, 64,  0x0, { 0x0,0x6200000,},_sym3834, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(a0|a1|a2|a3)$", 0, 2, 2, 0, 0, _sym3832_operands,0,0,0, 0,&_sym3833,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'nop'.
static struct adl_opcode _sym4616[] = {
  // nop    (0)
  { "nop", 3, 25, 64,  0x0, { 0x0,0x7000000,},_sym2456, "$", 0, 0, 0, 0, 0, _sym2454_operands,0,0,0, 0,&_sym2455,0,{}, 0,0,0,0,0,-1, },
  // nop    (1)
  { "nop", 3, 25, 64,  0x0, { 0x0,0x7000000,},_sym3932, "$", 0, 0, 0, 0, 0, _sym3930_operands,0,0,0, 0,&_sym3931,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'not'.
static struct adl_opcode _sym4617[] = {
  // not_cc_gY_gX    (0)
  { "not_cc_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3b800000,},_sym2459, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym2457_operands,0,0,1, 0,&_sym2458,0,{}, 0,0,0,0,0,1, },
  // not_cc_gY_gX    (1)
  { "not_cc_gY_gX", 3, 25, 64,  0x0, { 0x0,0x3b800000,},_sym3935, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym3933_operands,0,0,1, 0,&_sym3934,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'null'.
static struct adl_opcode _sym4618[] = {
  // null    (0)
  { "null", 3, 25, 64,  0x0, { 0x0,0x3f000000,},_sym2462, "$", 0, 0, 0, 0, 0, _sym2460_operands,0,0,0, 0,&_sym2461,0,{}, 0,0,0,0,0,-1, },
  // null    (1)
  { "null", 3, 25, 64,  0x0, { 0x0,0x3f000000,},_sym3938, "$", 0, 0, 0, 0, 0, _sym3936_operands,0,0,0, 0,&_sym3937,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'opa_nop'.
static struct adl_opcode _sym4619[] = {
  // opA_nop    (0)
  { "opA_nop", 1, 15, 64,  0x0, { },_sym849, "$", 0, 0, 0, 0, 0, _sym847_operands,0,0,0, 0,&_sym848,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'opb_nop'.
static struct adl_opcode _sym4620[] = {
  // opB_nop    (0)
  { "opB_nop", 1, 15, 64,  0x0, { },_sym1143, "$", 0, 0, 0, 0, 0, _sym1141_operands,0,0,0, 0,&_sym1142,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'ops_nop'.
static struct adl_opcode _sym4621[] = {
  // opS_nop    (0)
  { "opS_nop", 3, 25, 64,  0x0, { },_sym2465, "$", 0, 0, 0, 0, 0, _sym2463_operands,0,0,0, 0,&_sym2464,0,{}, 0,0,0,0,0,-1, },
  // opS_nop    (1)
  { "opS_nop", 3, 25, 64,  0x0, { },_sym3941, "$", 0, 0, 0, 0, 0, _sym3939_operands,0,0,0, 0,&_sym3940,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'opx_nop'.
static struct adl_opcode _sym4622[] = {
  // opX_nop    (0)
  { "opX_nop", 0, 2, 64,  0x0, { },_sym1371, "$", 0, 0, 0, 0, 0, _sym1369_operands,0,0,0, 0,&_sym1370,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'opxabvz'.
static struct adl_opcode _sym4623[] = {
  // opXABVZ    (0)
  { "opXABVZ", 8, 64, 64,  0x0, { 0x0,0x40000,},_sym516, "^ *([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+),([^},[,,,,,,,,,, ]+)$", 0, 11, 11, 0, 0, _sym514_operands,0,0,0, 0,&_sym515,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'opxssz'.
static struct adl_opcode _sym4624[] = {
  // opXSSZ    (0)
  { "opXSSZ", 8, 64, 64,  0x0, { 0x0,0x300000,},_sym519, "^ *([^},[,,, ]+),([^},[,,, ]+),([^},[,,, ]+),([^},[,,, ]+)$", 0, 4, 4, 0, 0, _sym517_operands,0,0,0, 0,&_sym518,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'opxsvz'.
static struct adl_opcode _sym4625[] = {
  // opXSVZ    (0)
  { "opXSVZ", 8, 64, 64,  0x0, { 0x0,0x200000,},_sym522, "^ *([^},[,,,,,,,,, ]+),([^},[,,,,,,,,, ]+),([^},[,,,,,,,,, ]+),([^},[,,,,,,,,, ]+),([^},[,,,,,,,,, ]+),([^},[,,,,,,,,, ]+),([^},[,,,,,,,,, ]+),([^},[,,,,,,,,, ]+),([^},[,,,,,,,,, ]+),([^},[,,,,,,,,, ]+)$", 0, 10, 10, 0, 0, _sym520_operands,0,0,0, 0,&_sym521,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'opz_nop'.
static struct adl_opcode _sym4626[] = {
  // opZ_nop    (0)
  { "opZ_nop", 0, 2, 64,  0x0, { },_sym1365, "$", 0, 0, 0, 0, 0, _sym1363_operands,0,0,0, 0,&_sym1364,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'or'.
static struct adl_opcode _sym4627[] = {
  // or_cc_gZ_gY_gX    (0)
  { "or_cc_gZ_gY_gX", 3, 25, 64,  0x0, { 0x0,0x38000000,},_sym2471, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym2469_operands,0,0,1, 0,&_sym2470,0,{}, 0,0,0,0,0,1, },
  // or_cc_gZ_gY_gX    (1)
  { "or_cc_gZ_gY_gX", 3, 25, 64,  0x0, { 0x0,0x38000000,},_sym3947, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3945_operands,0,0,1, 0,&_sym3946,0,{}, 0,0,0,0,0,1, },
  // or_gX_gX_Iu16    (2)
  { "or_gX_gX_Iu16", 0, 25, 64,  0x0, { 0 },_sym2480, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2475_operands,_sym2478,1,0, 0,&_sym2476,0,{}, 0,0,_sym2479_argchecker,0,0,3, },
// or_gX_gX_Iu16    (3)
{ "or_gX_gX_Iu16", 0, 25, 64,  0x0, { 0 },_sym3956, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3951_operands,_sym3954,1,0, 0,&_sym3952,0,{}, 0,0,_sym3955_argchecker,0,0,3, },
// or_gX_Iu16    (4)
{ "or_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x20000000,},_sym2474, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2472_operands,0,0,0, 0,&_sym2473,0,{}, 0,0,0,0,0,5, },
// or_gX_Iu16    (5)
{ "or_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x20000000,},_sym3950, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3948_operands,0,0,0, 0,&_sym3949,0,{}, 0,0,0,0,0,5, },
// or_H    (6)
{ "or_H", 3, 25, 64,  0x0, { 0x0,0x20000600,},_sym2468, "^ *H$", 0, 0, 0, 0, 0, _sym2466_operands,0,0,0, 0,&_sym2467,0,{}, 0,0,0,0,0,-1, },
// or_H    (7)
{ "or_H", 3, 25, 64,  0x0, { 0x0,0x20000600,},_sym3944, "^ *H$", 0, 0, 0, 0, 0, _sym3942_operands,0,0,0, 0,&_sym3943,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'orl'.
static struct adl_opcode _sym4628[] = {
  // orl_gX_Iu32_orl_gX_gX_Iu32    (0)
  { "orl_gX_Iu32_orl_gX_gX_Iu32", 0, 64, 64,  0x0, { 0 },_sym531, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym526_operands,_sym529,1,0, 0,&_sym527,0,{}, 0,0,_sym530_argchecker,0,0,0, },
// orl_gX_Iu32    (1)
{ "orl_gX_Iu32", 8, 64, 64,  0x0, { 0x0,0xc4500,},_sym525, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym523_operands,0,0,0, 0,&_sym524,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'pop'.
static struct adl_opcode _sym4629[] = {
  // pop_gX    (0)
  { "pop_gX", 0, 25, 64,  0x0, { 0 },_sym2486, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym2481_operands,_sym2485,1,0, 0,&_sym2482,0,{}, 0,0,0,0,0,-1, },
  // pop_gX    (1)
  { "pop_gX", 0, 25, 64,  0x0, { 0 },_sym3962, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym3957_operands,_sym3961,1,0, 0,&_sym3958,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'popm'.
static struct adl_opcode _sym4630[] = {
  // popm_as    (0)
  { "popm_as", 3, 25, 64,  0x0, { 0x0,0x10000000,},_sym2489, "^ *(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?$", 0, 16, 16, 0, 16, _sym2487_operands,0,0,16, 0,&_sym2488,0,{}, 0,0,0,0,0,1, },
  // popm_as    (1)
  { "popm_as", 3, 25, 64,  0x0, { 0x0,0x10000000,},_sym3965, "^ *(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?$", 0, 16, 16, 0, 16, _sym3963_operands,0,0,16, 0,&_sym3964,0,{}, 0,0,0,0,0,1, },
  // popm_g    (2)
  { "popm_g", 3, 25, 64,  0x0, { 0x0,0x800000,},_sym2492, "^ *(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?$", 0, 12, 12, 0, 12, _sym2490_operands,0,0,12, 0,&_sym2491,0,{}, 0,0,0,0,0,3, },
  // popm_g    (3)
  { "popm_g", 3, 25, 64,  0x0, { 0x0,0x800000,},_sym3968, "^ *(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?$", 0, 12, 12, 0, 12, _sym3966_operands,0,0,12, 0,&_sym3967,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'push'.
static struct adl_opcode _sym4631[] = {
  // st_u_sp_Is10_gX_push_gX    (0)
  { "st_u_sp_Is10_gX_push_gX", 0, 25, 64,  0x0, { 0 },_sym2856, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym2852_operands,_sym2855,1,0, 0,&_sym2853,0,{}, 0,0,0,0,0,-1, },
  // st_u_sp_Is10_gX_push_gX    (1)
  { "st_u_sp_Is10_gX_push_gX", 0, 25, 64,  0x0, { 0 },_sym4332, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym4328_operands,_sym4331,1,0, 0,&_sym4329,0,{}, 0,0,0,0,0,-1, },
  // push_I32    (2)
  { "push_I32", 8, 64, 64,  0x0, { 0x0,0xbb000,},_sym534, "^ *([^},[ ]+)$", 0, 1, 1, 0, 0, _sym532_operands,0,0,0, 0,&_sym533,0,{}, 0,0,0,0,0,2, },
};

// Instructions named 'pushm'.
static struct adl_opcode _sym4632[] = {
  // pushm_as    (0)
  { "pushm_as", 3, 25, 64,  0x0, { 0x0,0x14000000,},_sym2495, "^ *(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?$", 0, 16, 16, 0, 16, _sym2493_operands,0,0,16, 0,&_sym2494,0,{}, 0,0,0,0,0,1, },
  // pushm_as    (1)
  { "pushm_as", 3, 25, 64,  0x0, { 0x0,0x14000000,},_sym3971, "^ *(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?(as0,|as0|as1,|as1|as2,|as2|as3,|as3|as4,|as4|as5,|as5|as6,|as6|as7,|as7|as8,|as8|as9,|as9|as10,|as10|as11,|as11|as12,|as12|as13,|as13|as14,|as14|as15,|as15)?$", 0, 16, 16, 0, 16, _sym3969_operands,0,0,16, 0,&_sym3970,0,{}, 0,0,0,0,0,1, },
  // pushm_g    (2)
  { "pushm_g", 3, 25, 64,  0x0, { 0x0,0x1000000,},_sym2498, "^ *(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?$", 0, 12, 12, 0, 12, _sym2496_operands,0,0,12, 0,&_sym2497,0,{}, 0,0,0,0,0,3, },
  // pushm_g    (3)
  { "pushm_g", 3, 25, 64,  0x0, { 0x0,0x1000000,},_sym3974, "^ *(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?(g0,|g0|g1,|g1|g2,|g2|g3,|g3|g4,|g4|g5,|g5|g6,|g6|g7,|g7|g8,|g8|g9,|g9|g10,|g10|g11,|g11)?$", 0, 12, 12, 0, 12, _sym3972_operands,0,0,12, 0,&_sym3973,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'rcp'.
static struct adl_opcode _sym4633[] = {
  // rcp    (0)
  { "rcp", 0, 4, 64,  0x0, { 0x0,0xa0000000,},_sym1554, "$", 0, 0, 0, 0, 0, _sym1552_operands,0,0,0, 0,&_sym1553,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rcp.e'.
static struct adl_opcode _sym4634[] = {
  // rcp_e    (0)
  { "rcp_e", 0, 4, 64,  0x0, { 0x0,0x40000000,},_sym1557, "$", 0, 0, 0, 0, 0, _sym1555_operands,0,0,0, 0,&_sym1556,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rd'.
static struct adl_opcode _sym4635[] = {
  // rd_S0    (0)
  { "rd_S0", 0, 1, 64,  0x0, { 0x0,0x80000000,},_sym1391, "^ *S0$", 0, 0, 0, 0, 0, _sym1389_operands,0,0,0, 0,&_sym1390,0,{}, 0,0,0,0,0,-1, },
  // rd_S1    (1)
  { "rd_S1", 0, 1, 64,  0x0, { 0x0,0x80000000,},_sym1397, "^ *S1$", 0, 0, 0, 0, 0, _sym1395_operands,0,0,0, 0,&_sym1396,0,{}, 0,0,0,0,0,-1, },
  // rd_S2    (2)
  { "rd_S2", 0, 1, 64,  0x0, { 0x0,0x80000000,},_sym1403, "^ *S2$", 0, 0, 0, 0, 0, _sym1401_operands,0,0,0, 0,&_sym1402,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rd_s0_nop'.
static struct adl_opcode _sym4636[] = {
  // rd_s0_nop    (0)
  { "rd_s0_nop", 0, 1, 64,  0x0, { },_sym1394, "$", 0, 0, 0, 0, 0, _sym1392_operands,0,0,0, 0,&_sym1393,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rd_s1_nop'.
static struct adl_opcode _sym4637[] = {
  // rd_s1_nop    (0)
  { "rd_s1_nop", 0, 1, 64,  0x0, { },_sym1400, "$", 0, 0, 0, 0, 0, _sym1398_operands,0,0,0, 0,&_sym1399,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rd_s2_nop'.
static struct adl_opcode _sym4638[] = {
  // rd_s2_nop    (0)
  { "rd_s2_nop", 0, 1, 64,  0x0, { },_sym1406, "$", 0, 0, 0, 0, 0, _sym1404_operands,0,0,0, 0,&_sym1405,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rdiv'.
static struct adl_opcode _sym4639[] = {
  // rdiv_s_gX_Is16_gX_rdiv    (0)
  { "rdiv_s_gX_Is16_gX_rdiv", 0, 25, 64,  0x0, { 0 },_sym2513, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2508_operands,_sym2511,1,0, 0,&_sym2509,0,{}, 0,0,_sym2512_argchecker,0,0,2, },
// rdiv_z_gX_Iu16_gX_rdiv    (1)
{ "rdiv_z_gX_Iu16_gX_rdiv", 0, 25, 64,  0x0, { 0 },_sym2533, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2528_operands,_sym2531,1,0, 0,&_sym2529,0,{}, 0,0,_sym2532_argchecker,0,0,3, },
// rdiv_s_gX_Is16_gX_rdiv    (2)
{ "rdiv_s_gX_Is16_gX_rdiv", 0, 25, 64,  0x0, { 0 },_sym3989, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3984_operands,_sym3987,1,0, 0,&_sym3985,0,{}, 0,0,_sym3988_argchecker,0,0,2, },
// rdiv_z_gX_Iu16_gX_rdiv    (3)
{ "rdiv_z_gX_Iu16_gX_rdiv", 0, 25, 64,  0x0, { 0 },_sym4009, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4004_operands,_sym4007,1,0, 0,&_sym4005,0,{}, 0,0,_sym4008_argchecker,0,0,3, },
// rdiv_s_gX_Is16_rdiv    (4)
{ "rdiv_s_gX_Is16_rdiv", 0, 25, 64,  0x0, { 0 },_sym2518, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2514_operands,_sym2517,1,0, 0,&_sym2515,0,{}, 0,0,0,0,0,6, },
// rdiv_z_gX_Iu16_rdiv    (5)
{ "rdiv_z_gX_Iu16_rdiv", 0, 25, 64,  0x0, { 0 },_sym2538, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2534_operands,_sym2537,1,0, 0,&_sym2535,0,{}, 0,0,0,0,0,7, },
// rdiv_s_gX_Is16_rdiv    (6)
{ "rdiv_s_gX_Is16_rdiv", 0, 25, 64,  0x0, { 0 },_sym3994, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3990_operands,_sym3993,1,0, 0,&_sym3991,0,{}, 0,0,0,0,0,6, },
// rdiv_z_gX_Iu16_rdiv    (7)
{ "rdiv_z_gX_Iu16_rdiv", 0, 25, 64,  0x0, { 0 },_sym4014, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4010_operands,_sym4013,1,0, 0,&_sym4011,0,{}, 0,0,0,0,0,7, },
};

// Instructions named 'rdiv.s'.
static struct adl_opcode _sym4640[] = {
  // rdiv_s_gX_Is16_gX    (0)
  { "rdiv_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym2507, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2502_operands,_sym2505,1,0, 0,&_sym2503,0,{}, 0,0,_sym2506_argchecker,0,0,1, },
// rdiv_s_gX_Is16_gX    (1)
{ "rdiv_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym3983, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3978_operands,_sym3981,1,0, 0,&_sym3979,0,{}, 0,0,_sym3982_argchecker,0,0,1, },
// rdiv_s_gX_Is16    (2)
{ "rdiv_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xd8000000,},_sym2501, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2499_operands,0,0,0, 0,&_sym2500,0,{}, 0,0,0,0,0,3, },
// rdiv_s_gX_Is16    (3)
{ "rdiv_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xd8000000,},_sym3977, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3975_operands,0,0,0, 0,&_sym3976,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'rdiv.z'.
static struct adl_opcode _sym4641[] = {
  // rdiv_z_gX_Iu16_gX    (0)
  { "rdiv_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym2527, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2522_operands,_sym2525,1,0, 0,&_sym2523,0,{}, 0,0,_sym2526_argchecker,0,0,1, },
// rdiv_z_gX_Iu16_gX    (1)
{ "rdiv_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym4003, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3998_operands,_sym4001,1,0, 0,&_sym3999,0,{}, 0,0,_sym4002_argchecker,0,0,1, },
// rdiv_z_gX_Iu16    (2)
{ "rdiv_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xd0000000,},_sym2521, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2519_operands,0,0,0, 0,&_sym2520,0,{}, 0,0,0,0,0,3, },
// rdiv_z_gX_Iu16    (3)
{ "rdiv_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xd0000000,},_sym3997, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3995_operands,0,0,0, 0,&_sym3996,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'rmod'.
static struct adl_opcode _sym4642[] = {
  // rmod_s_gX_Is16_gX_rmod    (0)
  { "rmod_s_gX_Is16_gX_rmod", 0, 25, 64,  0x0, { 0 },_sym2553, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2548_operands,_sym2551,1,0, 0,&_sym2549,0,{}, 0,0,_sym2552_argchecker,0,0,2, },
// rmod_z_gX_Iu16_gX_rmod    (1)
{ "rmod_z_gX_Iu16_gX_rmod", 0, 25, 64,  0x0, { 0 },_sym2573, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2568_operands,_sym2571,1,0, 0,&_sym2569,0,{}, 0,0,_sym2572_argchecker,0,0,3, },
// rmod_s_gX_Is16_gX_rmod    (2)
{ "rmod_s_gX_Is16_gX_rmod", 0, 25, 64,  0x0, { 0 },_sym4029, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4024_operands,_sym4027,1,0, 0,&_sym4025,0,{}, 0,0,_sym4028_argchecker,0,0,2, },
// rmod_z_gX_Iu16_gX_rmod    (3)
{ "rmod_z_gX_Iu16_gX_rmod", 0, 25, 64,  0x0, { 0 },_sym4049, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4044_operands,_sym4047,1,0, 0,&_sym4045,0,{}, 0,0,_sym4048_argchecker,0,0,3, },
// rmod_s_gX_Is16_rmod    (4)
{ "rmod_s_gX_Is16_rmod", 0, 25, 64,  0x0, { 0 },_sym2558, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2554_operands,_sym2557,1,0, 0,&_sym2555,0,{}, 0,0,0,0,0,6, },
// rmod_z_gX_Iu16_rmod    (5)
{ "rmod_z_gX_Iu16_rmod", 0, 25, 64,  0x0, { 0 },_sym2578, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2574_operands,_sym2577,1,0, 0,&_sym2575,0,{}, 0,0,0,0,0,7, },
// rmod_s_gX_Is16_rmod    (6)
{ "rmod_s_gX_Is16_rmod", 0, 25, 64,  0x0, { 0 },_sym4034, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4030_operands,_sym4033,1,0, 0,&_sym4031,0,{}, 0,0,0,0,0,6, },
// rmod_z_gX_Iu16_rmod    (7)
{ "rmod_z_gX_Iu16_rmod", 0, 25, 64,  0x0, { 0 },_sym4054, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4050_operands,_sym4053,1,0, 0,&_sym4051,0,{}, 0,0,0,0,0,7, },
};

// Instructions named 'rmod.s'.
static struct adl_opcode _sym4643[] = {
  // rmod_s_gX_Is16_gX    (0)
  { "rmod_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym2547, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2542_operands,_sym2545,1,0, 0,&_sym2543,0,{}, 0,0,_sym2546_argchecker,0,0,1, },
// rmod_s_gX_Is16_gX    (1)
{ "rmod_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym4023, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4018_operands,_sym4021,1,0, 0,&_sym4019,0,{}, 0,0,_sym4022_argchecker,0,0,1, },
// rmod_s_gX_Is16    (2)
{ "rmod_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xe8000000,},_sym2541, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2539_operands,0,0,0, 0,&_sym2540,0,{}, 0,0,0,0,0,3, },
// rmod_s_gX_Is16    (3)
{ "rmod_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xe8000000,},_sym4017, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4015_operands,0,0,0, 0,&_sym4016,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'rmod.z'.
static struct adl_opcode _sym4644[] = {
  // rmod_z_gX_Iu16_gX    (0)
  { "rmod_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym2567, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2562_operands,_sym2565,1,0, 0,&_sym2563,0,{}, 0,0,_sym2566_argchecker,0,0,1, },
// rmod_z_gX_Iu16_gX    (1)
{ "rmod_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym4043, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4038_operands,_sym4041,1,0, 0,&_sym4039,0,{}, 0,0,_sym4042_argchecker,0,0,1, },
// rmod_z_gX_Iu16    (2)
{ "rmod_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xe0000000,},_sym2561, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2559_operands,0,0,0, 0,&_sym2560,0,{}, 0,0,0,0,0,3, },
// rmod_z_gX_Iu16    (3)
{ "rmod_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xe0000000,},_sym4037, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4035_operands,0,0,0, 0,&_sym4036,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'rot_nop'.
static struct adl_opcode _sym4645[] = {
  // rot_nop    (0)
  { "rot_nop", 0, 1, 64,  0x0, { },_sym1412, "$", 0, 0, 0, 0, 0, _sym1410_operands,0,0,0, 0,&_sym1411,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rrot'.
static struct adl_opcode _sym4646[] = {
  // rot    (0)
  { "rot", 0, 1, 64,  0x0, { 0x0,0x80000000,},_sym1409, "$", 0, 0, 0, 0, 0, _sym1407_operands,0,0,0, 0,&_sym1408,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rrt'.
static struct adl_opcode _sym4647[] = {
  // rrt    (0)
  { "rrt", 0, 4, 64,  0x0, { 0x0,0x80000000,},_sym1560, "$", 0, 0, 0, 0, 0, _sym1558_operands,0,0,0, 0,&_sym1559,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rrt.e'.
static struct adl_opcode _sym4648[] = {
  // rrt_e    (0)
  { "rrt_e", 0, 4, 64,  0x0, { 0x0,0x50000000,},_sym1563, "$", 0, 0, 0, 0, 0, _sym1561_operands,0,0,0, 0,&_sym1562,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'rsub'.
static struct adl_opcode _sym4649[] = {
  // rsub_s_gX_Is16_gX_rsub    (0)
  { "rsub_s_gX_Is16_gX_rsub", 0, 25, 64,  0x0, { 0 },_sym2593, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2588_operands,_sym2591,1,0, 0,&_sym2589,0,{}, 0,0,_sym2592_argchecker,0,0,2, },
// rsub_z_gX_Iu16_gX_rsub    (1)
{ "rsub_z_gX_Iu16_gX_rsub", 0, 25, 64,  0x0, { 0 },_sym2623, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2618_operands,_sym2621,1,0, 0,&_sym2619,0,{}, 0,0,_sym2622_argchecker,0,0,3, },
// rsub_s_gX_Is16_gX_rsub    (2)
{ "rsub_s_gX_Is16_gX_rsub", 0, 25, 64,  0x0, { 0 },_sym4069, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4064_operands,_sym4067,1,0, 0,&_sym4065,0,{}, 0,0,_sym4068_argchecker,0,0,2, },
// rsub_z_gX_Iu16_gX_rsub    (3)
{ "rsub_z_gX_Iu16_gX_rsub", 0, 25, 64,  0x0, { 0 },_sym4099, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4094_operands,_sym4097,1,0, 0,&_sym4095,0,{}, 0,0,_sym4098_argchecker,0,0,3, },
// rsub_s_gX_Is16_rsub    (4)
{ "rsub_s_gX_Is16_rsub", 0, 25, 64,  0x0, { 0 },_sym2598, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2594_operands,_sym2597,1,0, 0,&_sym2595,0,{}, 0,0,0,0,0,6, },
// rsub_z_gX_Iu16_rsub    (5)
{ "rsub_z_gX_Iu16_rsub", 0, 25, 64,  0x0, { 0 },_sym2628, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2624_operands,_sym2627,1,0, 0,&_sym2625,0,{}, 0,0,0,0,0,7, },
// rsub_s_gX_Is16_rsub    (6)
{ "rsub_s_gX_Is16_rsub", 0, 25, 64,  0x0, { 0 },_sym4074, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4070_operands,_sym4073,1,0, 0,&_sym4071,0,{}, 0,0,0,0,0,6, },
// rsub_z_gX_Iu16_rsub    (7)
{ "rsub_z_gX_Iu16_rsub", 0, 25, 64,  0x0, { 0 },_sym4104, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4100_operands,_sym4103,1,0, 0,&_sym4101,0,{}, 0,0,0,0,0,7, },
// rsub_s_gX_Is16_sp_rsub    (8)
{ "rsub_s_gX_Is16_sp_rsub", 0, 25, 64,  0x0, { 0 },_sym2608, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym2604_operands,_sym2607,1,0, 0,&_sym2605,0,{}, 0,0,0,0,0,10, },
// rsub_z_gX_Iu16_sp_rsub    (9)
{ "rsub_z_gX_Iu16_sp_rsub", 0, 25, 64,  0x0, { 0 },_sym2638, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym2634_operands,_sym2637,1,0, 0,&_sym2635,0,{}, 0,0,0,0,0,11, },
// rsub_s_gX_Is16_sp_rsub    (10)
{ "rsub_s_gX_Is16_sp_rsub", 0, 25, 64,  0x0, { 0 },_sym4084, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym4080_operands,_sym4083,1,0, 0,&_sym4081,0,{}, 0,0,0,0,0,10, },
// rsub_z_gX_Iu16_sp_rsub    (11)
{ "rsub_z_gX_Iu16_sp_rsub", 0, 25, 64,  0x0, { 0 },_sym4114, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym4110_operands,_sym4113,1,0, 0,&_sym4111,0,{}, 0,0,0,0,0,11, },
};

// Instructions named 'rsub.s'.
static struct adl_opcode _sym4650[] = {
  // rsub_s_gX_Is16_gX    (0)
  { "rsub_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym2587, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2582_operands,_sym2585,1,0, 0,&_sym2583,0,{}, 0,0,_sym2586_argchecker,0,0,1, },
// rsub_s_gX_Is16_gX    (1)
{ "rsub_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym4063, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4058_operands,_sym4061,1,0, 0,&_sym4059,0,{}, 0,0,_sym4062_argchecker,0,0,1, },
// rsub_s_gX_Is16    (2)
{ "rsub_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xf8000000,},_sym2581, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2579_operands,0,0,0, 0,&_sym2580,0,{}, 0,0,0,0,0,3, },
// rsub_s_gX_Is16    (3)
{ "rsub_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xf8000000,},_sym4057, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4055_operands,0,0,0, 0,&_sym4056,0,{}, 0,0,0,0,0,3, },
// rsub_s_gX_Is16_sp    (4)
{ "rsub_s_gX_Is16_sp", 0, 25, 64,  0x0, { 0 },_sym2603, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym2599_operands,_sym2602,1,0, 0,&_sym2600,0,{}, 0,0,0,0,0,5, },
// rsub_s_gX_Is16_sp    (5)
{ "rsub_s_gX_Is16_sp", 0, 25, 64,  0x0, { 0 },_sym4079, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym4075_operands,_sym4078,1,0, 0,&_sym4076,0,{}, 0,0,0,0,0,5, },
};

// Instructions named 'rsub.z'.
static struct adl_opcode _sym4651[] = {
  // rsub_z_gX_Iu16_gX    (0)
  { "rsub_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym2617, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2612_operands,_sym2615,1,0, 0,&_sym2613,0,{}, 0,0,_sym2616_argchecker,0,0,1, },
// rsub_z_gX_Iu16_gX    (1)
{ "rsub_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym4093, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4088_operands,_sym4091,1,0, 0,&_sym4089,0,{}, 0,0,_sym4092_argchecker,0,0,1, },
// rsub_z_gX_Iu16    (2)
{ "rsub_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xf0000000,},_sym2611, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2609_operands,0,0,0, 0,&_sym2610,0,{}, 0,0,0,0,0,3, },
// rsub_z_gX_Iu16    (3)
{ "rsub_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xf0000000,},_sym4087, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4085_operands,0,0,0, 0,&_sym4086,0,{}, 0,0,0,0,0,3, },
// rsub_z_gX_Iu16_sp    (4)
{ "rsub_z_gX_Iu16_sp", 0, 25, 64,  0x0, { 0 },_sym2633, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym2629_operands,_sym2632,1,0, 0,&_sym2630,0,{}, 0,0,0,0,0,5, },
// rsub_z_gX_Iu16_sp    (5)
{ "rsub_z_gX_Iu16_sp", 0, 25, 64,  0x0, { 0 },_sym4109, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym4105_operands,_sym4108,1,0, 0,&_sym4106,0,{}, 0,0,0,0,0,5, },
};

// Instructions named 'rts'.
static struct adl_opcode _sym4652[] = {
  // rts    (0)
  { "rts", 0, 2, 64,  0x0, { 0x0,0x40000000,},_sym1368, "$", 0, 0, 0, 0, 0, _sym1366_operands,0,0,0, 0,&_sym1367,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'set.br'.
static struct adl_opcode _sym4653[] = {
  // set_br_fft_size    (0)
  { "set_br_fft_size", 1, 15, 64,  0x0, { 0x0,0xc0000000,},_sym933, "^ *(a0|a1|a2|a3),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym931_operands,0,0,0, 0,&_sym932,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set.cgu'.
static struct adl_opcode _sym4654[] = {
  // set_cgu    (0)
  { "set_cgu", 8, 64, 64,  0x0, { 0x0,0xbc000,},_sym537, "^ *([^},[ ]+)$", 0, 1, 1, 0, 0, _sym535_operands,0,0,0, 0,&_sym536,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set.creg'.
static struct adl_opcode _sym4655[] = {
  // set_creg_creg_Iu4    (0)
  { "set_creg_creg_Iu4", 3, 25, 64,  0x0, { 0x0,0x1400000,},_sym2641, "^ *([^},[, ]+),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2639_operands,0,0,0, 0,&_sym2640,0,{}, 0,0,0,0,0,1, },
// set_creg_creg_Iu4    (1)
{ "set_creg_creg_Iu4", 3, 25, 64,  0x0, { 0x0,0x1400000,},_sym4117, "^ *([^},[, ]+),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4115_operands,0,0,0, 0,&_sym4116,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'set.loop'.
static struct adl_opcode _sym4656[] = {
  // set_loop_asX_I_set_loop_asX_Lb_Le    (0)
  { "set_loop_asX_I_set_loop_asX_Lb_Le", 0, 64, 64,  0x0, { 0 },_sym561, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),([^},[,, ]+),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym557_operands,_sym560,1,0, 0,&_sym558,0,{}, 0,0,0,0,0,0, },
// set_loop_asX_I_syn    (1)
{ "set_loop_asX_I_syn", 0, 64, 64,  0x0, { 0 },_sym567, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym562_operands,_sym566,1,0, 0,&_sym563,0,{}, 0,0,0,0,0,1, },
// set_loop_asX    (2)
{ "set_loop_asX", 1, 15, 64,  0x0, { 0x0,0xfc000000,},_sym1254, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15)$", 0, 1, 1, 0, 0, _sym1252_operands,0,0,0, 0,&_sym1253,0,{}, 0,0,0,0,0,-1, },
// set_loop_I_I_set_loop_I_Lb_Le    (3)
{ "set_loop_I_I_set_loop_I_Lb_Le", 0, 64, 64,  0x0, { 0 },_sym546, "^ *([^},[,, ]+),([^},[,, ]+),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym541_operands,_sym545,1,0, 0,&_sym542,0,{}, 0,0,0,0,0,3, },
// set_loop_I_I_syn    (4)
{ "set_loop_I_I_syn", 0, 64, 64,  0x0, { 0 },_sym553, "^ *([^},[, ]+),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym547_operands,_sym552,1,0, 0,&_sym548,0,{}, 0,0,0,0,0,4, },
// set_loop_I_syn    (5)
{ "set_loop_I_syn", 0, 15, 64,  0x0, { 0 },_sym1251, "^ *([^},[ ]+)$", 0, 1, 1, 0, 0, _sym1246_operands,_sym1250,1,0, 0,&_sym1247,0,{}, 0,0,0,0,0,5, },
};

// Instructions named 'set.nco'.
static struct adl_opcode _sym4657[] = {
  // set_nco_alias    (0)
  { "set_nco_alias", 0, 64, 64,  0x0, { 0 },_sym577, "^ *(normal|singles|radix2),([^},[,, ]+),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym571_operands,_sym576,1,0, 0,&_sym572,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set.prec'.
static struct adl_opcode _sym4658[] = {
  // set_prec    (0)
  { "set_prec", 1, 15, 64,  0x0, { 0x0,0x40000000,},_sym1257, "^ *(half_fixed|half|single|double),(half_fixed|half|single|double),(half_fixed|half|single|double),(single|double),(half_fixed|half|single|double)$", 0, 5, 5, 0, 0, _sym1255_operands,0,0,0, 0,&_sym1256,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set.range'.
static struct adl_opcode _sym4659[] = {
  // set_range_aZ_asX_gY    (0)
  { "set_range_aZ_asX_gY", 8, 64, 64,  0x0, { 0x0,0x84200,},_sym683, "^ *(a2|a3),(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym681_operands,0,0,0, 0,&_sym682,0,{}, 0,0,0,0,0,-1, },
  // set_range_aY_asX_Iu17    (1)
  { "set_range_aY_asX_Iu17", 8, 64, 64,  0x0, { 0x0,0x84000,},_sym680, "^ *(a2|a3),(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym678_operands,0,0,0, 0,&_sym679,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'set.rrot'.
static struct adl_opcode _sym4660[] = {
  // set_rot_mode    (0)
  { "set_rot_mode", 1, 15, 64,  0x0, { 0x0,0xfc800000,},_sym1260, "^ *(_ROT_MODE_0_|_ROT_MODE_1_|_ROT_MODE_2_|_ROT_MODE_3_|_ROT_MODE_4_|_ROT_MODE_5_|_ROT_MODE_6_|_ROT_MODE_7_|R0r1|R0r2|R0r4|R0r8|R0rND1|R0rND4|R0rND2|R1r1|R1r2|R1r4|R1r8|R1rND1|R1rND4|R1rND2|R0R1r1|R0R1r2|R0R1r4|R0R1r8|R0R1rND1|R0R1rND4|R0R1rND2|_ROT_MODE_32_|_ROT_MODE_33_|_ROT_MODE_34_|_ROT_MODE_35_|_ROT_MODE_36_|_ROT_MODE_37_|_ROT_MODE_38_|_ROT_MODE_39_|R2r1|R2r2|R2r4|R2r8|R2rND1|R2rND4|R2rND2|R3r1|R3r2|R3r4|R3r8|R3rND1|R3rND4|R3rND2|R2R3r1|R2R3r2|R2R3r4|R2R3r8|R2R3rND1|R2R3rND4|R2R3rND2)$", 0, 1, 1, 0, 0, _sym1258_operands,0,0,0, 0,&_sym1259,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set.smode'.
static struct adl_opcode _sym4661[] = {
  // set_Smode    (0)
  { "set_Smode", 1, 15, 64,  0x0, { },_sym1227, "^ *(S0conj)?,(S0chs)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse),(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 5, 5, 0, 0, _sym1225_operands,0,0,0, 0,&_sym1226,0,{}, 0,0,0,0,0,0, },
  // set_smode_18_opB    (1)
  { "set_smode_18_opB", 0, 15, 64,  0x0, { 0 },_sym1305, "^ *(S0chs)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse),(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 4, 4, 0, 0, _sym1301_operands,_sym1304,1,0, 0,&_sym1302,0,{}, 0,0,0,0,0,1, },
  // set_smode_17_opB    (2)
  { "set_smode_17_opB", 0, 15, 64,  0x0, { 0 },_sym1300, "^ *(S0conj)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse),(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 4, 4, 0, 0, _sym1296_operands,_sym1299,1,0, 0,&_sym1297,0,{}, 0,0,0,0,0,2, },
  // set_smode_14_opB    (3)
  { "set_smode_14_opB", 0, 15, 64,  0x0, { 0 },_sym1285, "^ *(S0conj)?,(S0chs)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 4, 4, 0, 0, _sym1281_operands,_sym1284,1,0, 0,&_sym1282,0,{}, 0,0,0,0,0,3, },
  // set_smode_10_opB    (4)
  { "set_smode_10_opB", 0, 15, 64,  0x0, { 0 },_sym1265, "^ *(S0conj)?,(S0chs)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse)$", 0, 4, 4, 0, 0, _sym1261_operands,_sym1264,1,0, 0,&_sym1262,0,{}, 0,0,0,0,0,4, },
  // set_smode_13_opB    (5)
  { "set_smode_13_opB", 0, 15, 64,  0x0, { 0 },_sym1280, "^ *(S0chs)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 3, 3, 0, 0, _sym1276_operands,_sym1279,1,0, 0,&_sym1277,0,{}, 0,0,0,0,0,5, },
  // set_smode_12_opB    (6)
  { "set_smode_12_opB", 0, 15, 64,  0x0, { 0 },_sym1275, "^ *(S0conj)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 3, 3, 0, 0, _sym1271_operands,_sym1274,1,0, 0,&_sym1272,0,{}, 0,0,0,0,0,6, },
  // set_smode_16_opB    (7)
  { "set_smode_16_opB", 0, 15, 64,  0x0, { 0 },_sym1295, "^ *(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse),(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 3, 3, 0, 0, _sym1291_operands,_sym1294,1,0, 0,&_sym1292,0,{}, 0,0,0,0,0,7, },
  // set_smode_4_opB    (8)
  { "set_smode_4_opB", 0, 15, 64,  0x0, { 0 },_sym1325, "^ *(S0conj)?,(S0chs)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1)$", 0, 3, 3, 0, 0, _sym1321_operands,_sym1324,1,0, 0,&_sym1322,0,{}, 0,0,0,0,0,8, },
  // set_smode_8_opB    (9)
  { "set_smode_8_opB", 0, 15, 64,  0x0, { 0 },_sym1345, "^ *(S0conj)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse)$", 0, 3, 3, 0, 0, _sym1341_operands,_sym1344,1,0, 0,&_sym1342,0,{}, 0,0,0,0,0,9, },
  // set_smode_9_opB    (10)
  { "set_smode_9_opB", 0, 15, 64,  0x0, { 0 },_sym1350, "^ *(S0chs)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse)$", 0, 3, 3, 0, 0, _sym1346_operands,_sym1349,1,0, 0,&_sym1347,0,{}, 0,0,0,0,0,10, },
  // set_smode_15_opB    (11)
  { "set_smode_15_opB", 0, 15, 64,  0x0, { 0 },_sym1290, "^ *(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse),(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 2, 2, 0, 0, _sym1286_operands,_sym1289,1,0, 0,&_sym1287,0,{}, 0,0,0,0,0,11, },
  // set_smode_11_opB    (12)
  { "set_smode_11_opB", 0, 15, 64,  0x0, { 0 },_sym1270, "^ *(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 2, 2, 0, 0, _sym1266_operands,_sym1269,1,0, 0,&_sym1267,0,{}, 0,0,0,0,0,12, },
  // set_smode_2_opB    (13)
  { "set_smode_2_opB", 0, 15, 64,  0x0, { 0 },_sym1315, "^ *(S0conj)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1)$", 0, 2, 2, 0, 0, _sym1311_operands,_sym1314,1,0, 0,&_sym1312,0,{}, 0,0,0,0,0,13, },
  // set_smode_3_opB    (14)
  { "set_smode_3_opB", 0, 15, 64,  0x0, { 0 },_sym1320, "^ *(S0chs)?,(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1)$", 0, 2, 2, 0, 0, _sym1316_operands,_sym1319,1,0, 0,&_sym1317,0,{}, 0,0,0,0,0,14, },
  // set_smode_7_opB    (15)
  { "set_smode_7_opB", 0, 15, 64,  0x0, { 0 },_sym1340, "^ *(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1),(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse)$", 0, 2, 2, 0, 0, _sym1336_operands,_sym1339,1,0, 0,&_sym1337,0,{}, 0,0,0,0,0,15, },
  // set_smode_1_opB    (16)
  { "set_smode_1_opB", 0, 15, 64,  0x0, { 0 },_sym1310, "^ *(S0nop|S0normal|S0singles|S0coef1|S0coef2|S0straight|S0ones|S0fft4|S0zeros|S0fft5|S0fftn|S0fft3|S0fft2|S0fft1|S0abs|S0pad0|S0pad1)$", 0, 1, 1, 0, 0, _sym1306_operands,_sym1309,1,0, 0,&_sym1307,0,{}, 0,0,0,0,0,16, },
  // set_smode_5_opB    (17)
  { "set_smode_5_opB", 0, 15, 64,  0x0, { 0 },_sym1330, "^ *(S1nop|S1normal|S1udfc|S1cgu_udfc|S1straight|S1udfr|S1cgu_normal|S1ones|S1r2c|S1r2c_conj|S1conj|S1nco|S1r2c_im0|S1cgu_r2c_im0|S1r2c_re0|S1cgu_r2c_re0|S1reverse)$", 0, 1, 1, 0, 0, _sym1326_operands,_sym1329,1,0, 0,&_sym1327,0,{}, 0,0,0,0,0,17, },
  // set_smode_6_opB    (18)
  { "set_smode_6_opB", 0, 15, 64,  0x0, { 0 },_sym1335, "^ *(S2nop|S2normal|S2ones|S2fft4|S2zeros|S2fft5|S2coef1|S2fftn|S2fft3|S2fft2|S2fft1)$", 0, 1, 1, 0, 0, _sym1331_operands,_sym1334,1,0, 0,&_sym1332,0,{}, 0,0,0,0,0,18, },
};

// Instructions named 'set.vraincr'.
static struct adl_opcode _sym4662[] = {
  // set_incr_rS0_Iu9    (0)
  { "set_incr_rS0_Iu9", 1, 15, 64,  0x0, { 0x0,0x80080000,},_sym1230, "^ *rS0,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1228_operands,0,0,0, 0,&_sym1229,0,{}, 0,0,0,0,0,0, },
// set_incr_rS1_Iu9    (1)
{ "set_incr_rS1_Iu9", 1, 15, 64,  0x0, { 0x0,0x80060000,},_sym1233, "^ *rS1,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1231_operands,0,0,0, 0,&_sym1232,0,{}, 0,0,0,0,0,1, },
// set_incr_rS2_Iu9    (2)
{ "set_incr_rS2_Iu9", 1, 15, 64,  0x0, { 0x0,0x80040000,},_sym1236, "^ *rS2,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1234_operands,0,0,0, 0,&_sym1235,0,{}, 0,0,0,0,0,2, },
// set_incr_rSt_Iu9    (3)
{ "set_incr_rSt_Iu9", 1, 15, 64,  0x0, { 0x0,0x80000000,},_sym1239, "^ *rSt,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1237_operands,0,0,0, 0,&_sym1238,0,{}, 0,0,0,0,0,3, },
// set_vra_incrs_I    (4)
{ "set_vra_incrs_I", 8, 64, 64,  0x0, { 0x0,0x2c000,},_sym686, "^ *([^},[,,,, ]+),([^},[,,,, ]+),([^},[,,,, ]+),([^},[,,,, ]+),([^},[,,,, ]+)$", 0, 5, 5, 0, 0, _sym684_operands,0,0,0, 0,&_sym685,0,{}, 0,0,0,0,0,4, },
// set_incr_rV_Iu9    (5)
{ "set_incr_rV_Iu9", 1, 15, 64,  0x0, { 0x0,0x80020000,},_sym1242, "^ *rV,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1240_operands,0,0,0, 0,&_sym1241,0,{}, 0,0,0,0,0,5, },
};

// Instructions named 'set.vrapg'.
static struct adl_opcode _sym4663[] = {
  // setA_page_rS0_Iu2_Iu2_set    (0)
  { "setA_page_rS0_Iu2_Iu2_set", 0, 15, 64,  0x0, { 0 },_sym858, "^ *rS0,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym853_operands,_sym857,1,0, 0,&_sym855,0,{}, 0,0,0,0,0,3, },
// setA_page_rS1_Iu2_Iu2_set    (1)
{ "setA_page_rS1_Iu2_Iu2_set", 0, 15, 64,  0x0, { 0 },_sym867, "^ *rS1,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym862_operands,_sym866,1,0, 0,&_sym864,0,{}, 0,0,0,0,0,4, },
// setA_page_rS2_Iu2_Iu2_set    (2)
{ "setA_page_rS2_Iu2_Iu2_set", 0, 15, 64,  0x0, { 0 },_sym876, "^ *rS2,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym871_operands,_sym875,1,0, 0,&_sym873,0,{}, 0,0,0,0,0,5, },
// setB_page_rS0_Iu2_Iu2_set    (3)
{ "setB_page_rS0_Iu2_Iu2_set", 0, 15, 64,  0x0, { 0 },_sym1152, "^ *rS0,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym1147_operands,_sym1151,1,0, 0,&_sym1149,0,{}, 0,0,0,0,0,3, },
// setB_page_rS1_Iu2_Iu2_set    (4)
{ "setB_page_rS1_Iu2_Iu2_set", 0, 15, 64,  0x0, { 0 },_sym1161, "^ *rS1,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym1156_operands,_sym1160,1,0, 0,&_sym1158,0,{}, 0,0,0,0,0,4, },
// setB_page_rS2_Iu2_Iu2_set    (5)
{ "setB_page_rS2_Iu2_Iu2_set", 0, 15, 64,  0x0, { 0 },_sym1170, "^ *rS2,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym1165_operands,_sym1169,1,0, 0,&_sym1167,0,{}, 0,0,0,0,0,5, },
// setA_page_rV_Iu2_Iu2_set    (6)
{ "setA_page_rV_Iu2_Iu2_set", 0, 15, 64,  0x0, { 0 },_sym885, "^ *rV,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym880_operands,_sym884,1,0, 0,&_sym882,0,{}, 0,0,0,0,0,7, },
// setB_page_rV_Iu2_Iu2_set    (7)
{ "setB_page_rV_Iu2_Iu2_set", 0, 15, 64,  0x0, { 0 },_sym1179, "^ *rV,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym1174_operands,_sym1178,1,0, 0,&_sym1176,0,{}, 0,0,0,0,0,7, },
};

// Instructions named 'set.vraptr'.
static struct adl_opcode _sym4664[] = {
  // setA_rS0_Iu9_set    (0)
  { "setA_rS0_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym894, "^ *rS0,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym889_operands,_sym893,1,0, 0,&_sym891,0,{}, 0,0,0,0,0,4, },
// setA_rS1_Iu9_set    (1)
{ "setA_rS1_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym903, "^ *rS1,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym898_operands,_sym902,1,0, 0,&_sym900,0,{}, 0,0,0,0,0,5, },
// setA_rS2_Iu9_set    (2)
{ "setA_rS2_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym912, "^ *rS2,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym907_operands,_sym911,1,0, 0,&_sym909,0,{}, 0,0,0,0,0,6, },
// setA_rSt_Iu9_set    (3)
{ "setA_rSt_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym921, "^ *rSt,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym916_operands,_sym920,1,0, 0,&_sym918,0,{}, 0,0,0,0,0,7, },
// setB_rS0_Iu9_set    (4)
{ "setB_rS0_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym1188, "^ *rS0,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1183_operands,_sym1187,1,0, 0,&_sym1185,0,{}, 0,0,0,0,0,4, },
// setB_rS1_Iu9_set    (5)
{ "setB_rS1_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym1197, "^ *rS1,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1192_operands,_sym1196,1,0, 0,&_sym1194,0,{}, 0,0,0,0,0,5, },
// setB_rS2_Iu9_set    (6)
{ "setB_rS2_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym1206, "^ *rS2,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1201_operands,_sym1205,1,0, 0,&_sym1203,0,{}, 0,0,0,0,0,6, },
// setB_rSt_Iu9_set    (7)
{ "setB_rSt_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym1215, "^ *rSt,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1210_operands,_sym1214,1,0, 0,&_sym1212,0,{}, 0,0,0,0,0,7, },
// set_vra_ptrs_I    (8)
{ "set_vra_ptrs_I", 8, 64, 64,  0x0, { 0x0,0x28000,},_sym689, "^ *([^},[,,,, ]+),([^},[,,,, ]+),([^},[,,,, ]+),([^},[,,,, ]+),([^},[,,,, ]+)$", 0, 5, 5, 0, 0, _sym687_operands,0,0,0, 0,&_sym688,0,{}, 0,0,0,0,0,8, },
// setA_rV_Iu9_set    (9)
{ "setA_rV_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym930, "^ *rV,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym925_operands,_sym929,1,0, 0,&_sym927,0,{}, 0,0,0,0,0,10, },
// setB_rV_Iu9_set    (10)
{ "setB_rV_Iu9_set", 0, 15, 64,  0x0, { 0 },_sym1224, "^ *rV,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1219_operands,_sym1223,1,0, 0,&_sym1221,0,{}, 0,0,0,0,0,10, },
};

// Instructions named 'set.vrarange1'.
static struct adl_opcode _sym4665[] = {
  // set_range1_rS0_Iu22_syn    (0)
  { "set_range1_rS0_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym587, "^ *rS0,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym581_operands,_sym586,1,0, 0,&_sym582,0,{}, 0,0,0,0,0,0, },
// set_range1_rS1_Iu22_syn    (1)
{ "set_range1_rS1_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym597, "^ *rS1,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym591_operands,_sym596,1,0, 0,&_sym592,0,{}, 0,0,0,0,0,1, },
// set_range1_rS2_Iu22_syn    (2)
{ "set_range1_rS2_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym607, "^ *rS2,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym601_operands,_sym606,1,0, 0,&_sym602,0,{}, 0,0,0,0,0,2, },
// set_range1_rSt_Iu22_syn    (3)
{ "set_range1_rSt_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym617, "^ *rSt,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym611_operands,_sym616,1,0, 0,&_sym612,0,{}, 0,0,0,0,0,3, },
// set_range1_rV_Iu22_syn    (4)
{ "set_range1_rV_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym627, "^ *rV,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym621_operands,_sym626,1,0, 0,&_sym622,0,{}, 0,0,0,0,0,4, },
};

// Instructions named 'set.vrarange2'.
static struct adl_opcode _sym4666[] = {
  // set_range2_rS0_Iu22_syn    (0)
  { "set_range2_rS0_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym637, "^ *rS0,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym631_operands,_sym636,1,0, 0,&_sym632,0,{}, 0,0,0,0,0,0, },
// set_range2_rS1_Iu22_syn    (1)
{ "set_range2_rS1_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym647, "^ *rS1,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym641_operands,_sym646,1,0, 0,&_sym642,0,{}, 0,0,0,0,0,1, },
// set_range2_rS2_Iu22_syn    (2)
{ "set_range2_rS2_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym657, "^ *rS2,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym651_operands,_sym656,1,0, 0,&_sym652,0,{}, 0,0,0,0,0,2, },
// set_range2_rSt_Iu22_syn    (3)
{ "set_range2_rSt_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym667, "^ *rSt,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym661_operands,_sym666,1,0, 0,&_sym662,0,{}, 0,0,0,0,0,3, },
// set_range2_rV_Iu22_syn    (4)
{ "set_range2_rV_Iu22_syn", 0, 64, 64,  0x0, { 0 },_sym677, "^ *rV,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym671_operands,_sym676,1,0, 0,&_sym672,0,{}, 0,0,0,0,0,4, },
};

// Instructions named 'set.xtrm'.
static struct adl_opcode _sym4667[] = {
  // set_xtrm_syntax    (0)
  { "set_xtrm_syntax", 0, 64, 64,  0x0, { 0 },_sym699, "^ *(signed|unsigned),(max|min),(cmp_all|_INVALID_CMP_MODE_),([^},[,,, ]+)$", 0, 4, 4, 0, 0, _sym693_operands,_sym698,1,0, 0,&_sym694,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_loop_asx_i'.
static struct adl_opcode _sym4668[] = {
  // set_loop_asX_I    (0)
  { "set_loop_asX_I", 8, 64, 64,  0x0, { 0x0,0x12000,},_sym556, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym554_operands,0,0,0, 0,&_sym555,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_loop_i'.
static struct adl_opcode _sym4669[] = {
  // set_loop_I    (0)
  { "set_loop_I", 1, 15, 64,  0x0, { 0x0,0xf0000000,},_sym1245, "^ *([^} ,\t,]+)$", 0, 1, 2, 0, 0, _sym1243_operands,0,0,0, 0,&_sym1244,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_loop_i_i'.
static struct adl_opcode _sym4670[] = {
  // set_loop_I_I    (0)
  { "set_loop_I_I", 8, 64, 64,  0x0, { 0x0,0x10000,},_sym540, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym538_operands,0,0,0, 0,&_sym539,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_nco'.
static struct adl_opcode _sym4671[] = {
  // set_nco    (0)
  { "set_nco", 8, 64, 64,  0x0, { 0x0,0xae000,},_sym570, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 6, 12, 0, 0, _sym568_operands,0,0,0, 0,&_sym569,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range1_rs0_iu22'.
static struct adl_opcode _sym4672[] = {
  // set_range1_rS0_Iu22    (0)
  { "set_range1_rS0_Iu22", 8, 64, 64,  0x0, { 0x400000,0x20000,},_sym580, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym578_operands,0,0,0, 0,&_sym579,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range1_rs1_iu22'.
static struct adl_opcode _sym4673[] = {
  // set_range1_rS1_Iu22    (0)
  { "set_range1_rS1_Iu22", 8, 64, 64,  0x0, { 0x300000,0x20000,},_sym590, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym588_operands,0,0,0, 0,&_sym589,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range1_rs2_iu22'.
static struct adl_opcode _sym4674[] = {
  // set_range1_rS2_Iu22    (0)
  { "set_range1_rS2_Iu22", 8, 64, 64,  0x0, { 0x200000,0x20000,},_sym600, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym598_operands,0,0,0, 0,&_sym599,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range1_rst_iu22'.
static struct adl_opcode _sym4675[] = {
  // set_range1_rSt_Iu22    (0)
  { "set_range1_rSt_Iu22", 8, 64, 64,  0x0, { 0x0,0x20000,},_sym610, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym608_operands,0,0,0, 0,&_sym609,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range1_rv_iu22'.
static struct adl_opcode _sym4676[] = {
  // set_range1_rV_Iu22    (0)
  { "set_range1_rV_Iu22", 8, 64, 64,  0x0, { 0x100000,0x20000,},_sym620, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym618_operands,0,0,0, 0,&_sym619,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range2_rs0_iu22'.
static struct adl_opcode _sym4677[] = {
  // set_range2_rS0_Iu22    (0)
  { "set_range2_rS0_Iu22", 8, 64, 64,  0x0, { 0x400000,0x24000,},_sym630, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym628_operands,0,0,0, 0,&_sym629,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range2_rs1_iu22'.
static struct adl_opcode _sym4678[] = {
  // set_range2_rS1_Iu22    (0)
  { "set_range2_rS1_Iu22", 8, 64, 64,  0x0, { 0x300000,0x24000,},_sym640, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym638_operands,0,0,0, 0,&_sym639,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range2_rs2_iu22'.
static struct adl_opcode _sym4679[] = {
  // set_range2_rS2_Iu22    (0)
  { "set_range2_rS2_Iu22", 8, 64, 64,  0x0, { 0x200000,0x24000,},_sym650, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym648_operands,0,0,0, 0,&_sym649,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range2_rst_iu22'.
static struct adl_opcode _sym4680[] = {
  // set_range2_rSt_Iu22    (0)
  { "set_range2_rSt_Iu22", 8, 64, 64,  0x0, { 0x0,0x24000,},_sym660, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym658_operands,0,0,0, 0,&_sym659,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_range2_rv_iu22'.
static struct adl_opcode _sym4681[] = {
  // set_range2_rV_Iu22    (0)
  { "set_range2_rV_Iu22", 8, 64, 64,  0x0, { 0x100000,0x24000,},_sym670, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 11, 22, 0, 0, _sym668_operands,0,0,0, 0,&_sym669,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'set_xtrm'.
static struct adl_opcode _sym4682[] = {
  // set_xtrm    (0)
  { "set_xtrm", 8, 64, 64,  0x0, { 0x0,0x4000,},_sym692, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 14, 28, 0, 0, _sym690_operands,0,0,0, 0,&_sym691,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'seta.vrapg'.
static struct adl_opcode _sym4683[] = {
  // setA_page_rS0_Iu2_Iu2    (0)
  { "setA_page_rS0_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xd8000000,},_sym852, "^ *rS0,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym850_operands,0,0,0, 0,&_sym851,0,{}, 0,0,0,0,0,0, },
// setA_page_rS1_Iu2_Iu2    (1)
{ "setA_page_rS1_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xd6000000,},_sym861, "^ *rS1,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym859_operands,0,0,0, 0,&_sym860,0,{}, 0,0,0,0,0,1, },
// setA_page_rS2_Iu2_Iu2    (2)
{ "setA_page_rS2_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xd4000000,},_sym870, "^ *rS2,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym868_operands,0,0,0, 0,&_sym869,0,{}, 0,0,0,0,0,2, },
// setA_page_rV_Iu2_Iu2    (3)
{ "setA_page_rV_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xd2000000,},_sym879, "^ *rV,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym877_operands,0,0,0, 0,&_sym878,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'seta.vraptr'.
static struct adl_opcode _sym4684[] = {
  // setA_rS0_Iu9    (0)
  { "setA_rS0_Iu9", 1, 15, 64,  0x0, { 0x0,0xf0000000,},_sym888, "^ *rS0,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym886_operands,0,0,0, 0,&_sym887,0,{}, 0,0,0,0,0,0, },
// setA_rS1_Iu9    (1)
{ "setA_rS1_Iu9", 1, 15, 64,  0x0, { 0x0,0xec000000,},_sym897, "^ *rS1,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym895_operands,0,0,0, 0,&_sym896,0,{}, 0,0,0,0,0,1, },
// setA_rS2_Iu9    (2)
{ "setA_rS2_Iu9", 1, 15, 64,  0x0, { 0x0,0xe8000000,},_sym906, "^ *rS2,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym904_operands,0,0,0, 0,&_sym905,0,{}, 0,0,0,0,0,2, },
// setA_rSt_Iu9    (3)
{ "setA_rSt_Iu9", 1, 15, 64,  0x0, { 0x0,0xe0000000,},_sym915, "^ *rSt,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym913_operands,0,0,0, 0,&_sym914,0,{}, 0,0,0,0,0,3, },
// setA_rV_Iu9    (4)
{ "setA_rV_Iu9", 1, 15, 64,  0x0, { 0x0,0xe4000000,},_sym924, "^ *rV,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym922_operands,0,0,0, 0,&_sym923,0,{}, 0,0,0,0,0,4, },
};

// Instructions named 'setb.vrapg'.
static struct adl_opcode _sym4685[] = {
  // setB_page_rS0_Iu2_Iu2    (0)
  { "setB_page_rS0_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xb0080000,},_sym1146, "^ *rS0,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym1144_operands,0,0,0, 0,&_sym1145,0,{}, 0,0,0,0,0,0, },
// setB_page_rS1_Iu2_Iu2    (1)
{ "setB_page_rS1_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xb0060000,},_sym1155, "^ *rS1,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym1153_operands,0,0,0, 0,&_sym1154,0,{}, 0,0,0,0,0,1, },
// setB_page_rS2_Iu2_Iu2    (2)
{ "setB_page_rS2_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xb0040000,},_sym1164, "^ *rS2,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym1162_operands,0,0,0, 0,&_sym1163,0,{}, 0,0,0,0,0,2, },
// setB_page_rV_Iu2_Iu2    (3)
{ "setB_page_rV_Iu2_Iu2", 1, 15, 64,  0x0, { 0x0,0xb0020000,},_sym1173, "^ *rV,([^},[,, ]+),([^},[,, ]+)$", 0, 2, 2, 0, 0, _sym1171_operands,0,0,0, 0,&_sym1172,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'setb.vraptr'.
static struct adl_opcode _sym4686[] = {
  // setB_rS0_Iu9    (0)
  { "setB_rS0_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0080000,},_sym1182, "^ *rS0,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1180_operands,0,0,0, 0,&_sym1181,0,{}, 0,0,0,0,0,0, },
// setB_rS1_Iu9    (1)
{ "setB_rS1_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0060000,},_sym1191, "^ *rS1,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1189_operands,0,0,0, 0,&_sym1190,0,{}, 0,0,0,0,0,1, },
// setB_rS2_Iu9    (2)
{ "setB_rS2_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0040000,},_sym1200, "^ *rS2,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1198_operands,0,0,0, 0,&_sym1199,0,{}, 0,0,0,0,0,2, },
// setB_rSt_Iu9    (3)
{ "setB_rSt_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0000000,},_sym1209, "^ *rSt,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1207_operands,0,0,0, 0,&_sym1208,0,{}, 0,0,0,0,0,3, },
// setB_rV_Iu9    (4)
{ "setB_rV_Iu9", 1, 15, 64,  0x0, { 0x0,0xc0020000,},_sym1218, "^ *rV,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym1216_operands,0,0,0, 0,&_sym1217,0,{}, 0,0,0,0,0,4, },
};

// Instructions named 'sl'.
static struct adl_opcode _sym4687[] = {
  // sl_cc_gZ_gY_gX    (0)
  { "sl_cc_gZ_gY_gX", 3, 25, 64,  0x0, { 0x0,0x36000000,},_sym2644, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym2642_operands,0,0,1, 0,&_sym2643,0,{}, 0,0,0,0,0,1, },
  // sl_cc_gZ_gY_gX    (1)
  { "sl_cc_gZ_gY_gX", 3, 25, 64,  0x0, { 0x0,0x36000000,},_sym4120, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym4118_operands,0,0,1, 0,&_sym4119,0,{}, 0,0,0,0,0,1, },
  // sl_gY_gX_I5    (2)
  { "sl_gY_gX_I5", 3, 25, 64,  0x0, { 0x0,0x1a00000,},_sym2647, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2645_operands,0,0,0, 0,&_sym2646,0,{}, 0,0,0,0,0,3, },
// sl_gY_gX_I5    (3)
{ "sl_gY_gX_I5", 3, 25, 64,  0x0, { 0x0,0x1a00000,},_sym4123, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4121_operands,0,0,0, 0,&_sym4122,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'sr'.
static struct adl_opcode _sym4688[] = {
  // sr_s_cc_gZ_gX_gY    (0)
  { "sr_s_cc_gZ_gX_gY", 3, 25, 64,  0x0, { 0x0,0x33000000,},_sym2650, "^ *(\\.s|\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)?(\\.s|\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 5, 5, 0, 2, _sym2648_operands,0,0,2, 0,&_sym2649,0,{}, 0,0,0,0,0,1, },
  // sr_s_cc_gZ_gX_gY    (1)
  { "sr_s_cc_gZ_gX_gY", 3, 25, 64,  0x0, { 0x0,0x33000000,},_sym4126, "^ *(\\.s|\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)?(\\.s|\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 5, 5, 0, 2, _sym4124_operands,0,0,2, 0,&_sym4125,0,{}, 0,0,0,0,0,1, },
  // sr_s_gY_gX_I    (2)
  { "sr_s_gY_gX_I", 3, 25, 64,  0x0, { 0x0,0x1800000,},_sym2653, "^ *(\\.s)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[ ,, ]+)$", 0, 4, 4, 0, 1, _sym2651_operands,0,0,1, 0,&_sym2652,0,{}, 0,0,0,0,0,3, },
// sr_s_gY_gX_I    (3)
{ "sr_s_gY_gX_I", 3, 25, 64,  0x0, { 0x0,0x1800000,},_sym4129, "^ *(\\.s)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[ ,, ]+)$", 0, 4, 4, 0, 1, _sym4127_operands,0,0,1, 0,&_sym4128,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'srt'.
static struct adl_opcode _sym4689[] = {
  // srt    (0)
  { "srt", 0, 4, 64,  0x0, { 0x0,0x70000000,},_sym1566, "$", 0, 0, 0, 0, 0, _sym1564_operands,0,0,0, 0,&_sym1565,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'srt.e'.
static struct adl_opcode _sym4690[] = {
  // srt_e    (0)
  { "srt_e", 0, 4, 64,  0x0, { 0x0,0x60000000,},_sym1569, "$", 0, 0, 0, 0, 0, _sym1567_operands,0,0,0, 0,&_sym1568,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'st'.
static struct adl_opcode _sym4691[] = {
  // st_aY_aZ_u_gX    (0)
  { "st_aY_aZ_u_gX", 3, 25, 64,  0x0, { 0x0,0xd000000,},_sym4158, "^ *\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 0, _sym4156_operands,0,0,0, 0,&_sym4157,0,{}, 0,0,0,0,0,3, },
  // st_u_aY_u_aZ_gX    (1)
  { "st_u_aY_u_aZ_gX", 3, 25, 64,  0x0, { 0x0,0xd600000,},_sym4318, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 0, _sym4316_operands,0,0,0, 0,&_sym4317,0,{}, 0,0,0,0,0,2, },
  // st_u_aY_u_aZ_gX    (2)
  { "st_u_aY_u_aZ_gX", 3, 25, 64,  0x0, { 0x0,0xd600000,},_sym2842, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 0, _sym2840_operands,0,0,0, 0,&_sym2841,0,{}, 0,0,0,0,0,2, },
  // st_aY_aZ_u_gX    (3)
  { "st_aY_aZ_u_gX", 3, 25, 64,  0x0, { 0x0,0xd000000,},_sym2682, "^ *\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 0, _sym2680_operands,0,0,0, 0,&_sym2681,0,{}, 0,0,0,0,0,3, },
  // st_br_llr_mode_aX_u_aY    (4)
  { "st_br_llr_mode_aX_u_aY", 1, 15, 64,  0x0, { 0x0,0x50000000,},_sym1004, "^ *(\\.llr4|\\.llr4half|\\.llr8|\\.llr8half)? \\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 4, 4, 0, 1, _sym1002_operands,0,0,1, 0,&_sym1003,0,{}, 0,0,0,0,0,4, },
  // st_br_llr_mode_aX_u_aY_br_instr    (5)
  { "st_br_llr_mode_aX_u_aY_br_instr", 1, 15, 64,  0x0, { 0x0,0x50800000,},_sym1007, "^ *(\\.br|\\.br\\.llr4|\\.br\\.llr4half|\\.br\\.llr8|\\.br\\.llr8half) \\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 4, 4, 0, 1, _sym1005_operands,0,0,1, 0,&_sym1006,0,{}, 0,0,0,0,0,5, },
  // st_aY_aZ_H    (6)
  { "st_aY_aZ_H", 3, 25, 64,  0x0, { 0x0,0xd000600,},_sym2679, "^ *\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\],h$", 0, 3, 3, 0, 0, _sym2677_operands,0,0,0, 0,&_sym2678,0,{}, 0,0,0,0,0,7, },
  // st_aY_aZ_H    (7)
  { "st_aY_aZ_H", 3, 25, 64,  0x0, { 0x0,0xd000600,},_sym4155, "^ *\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\],h$", 0, 3, 3, 0, 0, _sym4153_operands,0,0,0, 0,&_sym4154,0,{}, 0,0,0,0,0,7, },
  // st_u_aY_u_aZ_H    (8)
  { "st_u_aY_u_aZ_H", 3, 25, 64,  0x0, { 0x0,0xd600600,},_sym4315, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3),h$", 0, 3, 3, 0, 0, _sym4313_operands,0,0,0, 0,&_sym4314,0,{}, 0,0,0,0,0,9, },
  // st_u_aY_u_aZ_H    (9)
  { "st_u_aY_u_aZ_H", 3, 25, 64,  0x0, { 0x0,0xd600600,},_sym2839, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3),h$", 0, 3, 3, 0, 0, _sym2837_operands,0,0,0, 0,&_sym2838,0,{}, 0,0,0,0,0,9, },
  // st_u_aY_Is8_u_gX_plus    (10)
  { "st_u_aY_Is8_u_gX_plus", 0, 25, 64,  0x0, { 0 },_sym4297, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4291_operands,_sym4296,1,0, 0,&_sym4292,0,{}, 0,0,0,0,0,12, },
// st_u_aY_Is8_u_gX_minus    (11)
{ "st_u_aY_Is8_u_gX_minus", 0, 25, 64,  0x0, { 0 },_sym2814, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2808_operands,_sym2813,1,0, 0,&_sym2809,0,{}, 0,0,0,0,0,13, },
// st_u_aY_Is8_u_gX_plus    (12)
{ "st_u_aY_Is8_u_gX_plus", 0, 25, 64,  0x0, { 0 },_sym2821, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2815_operands,_sym2820,1,0, 0,&_sym2816,0,{}, 0,0,0,0,0,12, },
// st_u_aY_Is8_u_gX_minus    (13)
{ "st_u_aY_Is8_u_gX_minus", 0, 25, 64,  0x0, { 0 },_sym4290, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4284_operands,_sym4289,1,0, 0,&_sym4285,0,{}, 0,0,0,0,0,13, },
// st_aY_u_Is8_gX_minus    (14)
{ "st_aY_u_Is8_gX_minus", 0, 25, 64,  0x0, { 0 },_sym2695, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2689_operands,_sym2694,1,0, 0,&_sym2690,0,{}, 0,0,0,0,0,17, },
// st_aY_u_Is8_gX_plus    (15)
{ "st_aY_u_Is8_gX_plus", 0, 25, 64,  0x0, { 0 },_sym2702, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2696_operands,_sym2701,1,0, 0,&_sym2697,0,{}, 0,0,0,0,0,16, },
// st_aY_u_Is8_gX_plus    (16)
{ "st_aY_u_Is8_gX_plus", 0, 25, 64,  0x0, { 0 },_sym4178, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4172_operands,_sym4177,1,0, 0,&_sym4173,0,{}, 0,0,0,0,0,16, },
// st_aY_u_Is8_gX_minus    (17)
{ "st_aY_u_Is8_gX_minus", 0, 25, 64,  0x0, { 0 },_sym4171, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4165_operands,_sym4170,1,0, 0,&_sym4166,0,{}, 0,0,0,0,0,17, },
// st_aY_u_Is8_gX_zero    (18)
{ "st_aY_u_Is8_gX_zero", 0, 25, 64,  0x0, { 0 },_sym2707, "^ *\\[(a0|a1|a2|a3)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2703_operands,_sym2706,1,0, 0,&_sym2704,0,{}, 0,0,0,0,0,-1, },
// st_aY_u_Is8_gX_zero    (19)
{ "st_aY_u_Is8_gX_zero", 0, 25, 64,  0x0, { 0 },_sym4183, "^ *\\[(a0|a1|a2|a3)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym4179_operands,_sym4182,1,0, 0,&_sym4180,0,{}, 0,0,0,0,0,-1, },
// st_sp_Is10_gX_minus    (20)
{ "st_sp_Is10_gX_minus", 0, 25, 64,  0x0, { 0 },_sym2774, "^ *\\[sp\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2769_operands,_sym2773,1,0, 0,&_sym2770,0,{}, 0,0,0,0,0,21, },
// st_sp_Is10_gX_minus    (21)
{ "st_sp_Is10_gX_minus", 0, 25, 64,  0x0, { 0 },_sym4250, "^ *\\[sp\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym4245_operands,_sym4249,1,0, 0,&_sym4246,0,{}, 0,0,0,0,0,21, },
// st_sp_Is10_gX    (22)
{ "st_sp_Is10_gX", 3, 25, 64,  0x0, { 0x0,0x3000000,},_sym2768, "^ *\\[sp\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2766_operands,0,0,0, 0,&_sym2767,0,{}, 0,0,0,0,0,25, },
// st_u_sp_Is10_gX    (23)
{ "st_u_sp_Is10_gX", 3, 25, 64,  0x0, { 0x0,0x3600000,},_sym2845, "^ *\\[sp\\]\\+([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2843_operands,0,0,0, 0,&_sym2844,0,{}, 0,0,0,0,0,27, },
// st_u_sp_Is10_gX_minus    (24)
{ "st_u_sp_Is10_gX_minus", 0, 25, 64,  0x0, { 0 },_sym2851, "^ *\\[sp\\]\\-([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2846_operands,_sym2850,1,0, 0,&_sym2847,0,{}, 0,0,0,0,0,26, },
// st_sp_Is10_gX    (25)
{ "st_sp_Is10_gX", 3, 25, 64,  0x0, { 0x0,0x3000000,},_sym4244, "^ *\\[sp\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym4242_operands,0,0,0, 0,&_sym4243,0,{}, 0,0,0,0,0,25, },
// st_u_sp_Is10_gX_minus    (26)
{ "st_u_sp_Is10_gX_minus", 0, 25, 64,  0x0, { 0 },_sym4327, "^ *\\[sp\\]\\-([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym4322_operands,_sym4326,1,0, 0,&_sym4323,0,{}, 0,0,0,0,0,26, },
// st_u_sp_Is10_gX    (27)
{ "st_u_sp_Is10_gX", 3, 25, 64,  0x0, { 0x0,0x3600000,},_sym4321, "^ *\\[sp\\]\\+([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym4319_operands,0,0,0, 0,&_sym4320,0,{}, 0,0,0,0,0,27, },
// st_sp_Is10_gX_zero    (28)
{ "st_sp_Is10_gX_zero", 0, 25, 64,  0x0, { 0 },_sym4255, "^ *\\[sp\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym4251_operands,_sym4254,1,0, 0,&_sym4252,0,{}, 0,0,0,0,0,-1, },
// st_sp_Is10_gX_zero    (29)
{ "st_sp_Is10_gX_zero", 0, 25, 64,  0x0, { 0 },_sym2779, "^ *\\[sp\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym2775_operands,_sym2778,1,0, 0,&_sym2776,0,{}, 0,0,0,0,0,-1, },
// st_aY_Is8_H_minus    (30)
{ "st_aY_Is8_H_minus", 0, 25, 64,  0x0, { 0 },_sym2668, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],h$", 0, 2, 2, 0, 0, _sym2663_operands,_sym2667,1,0, 0,&_sym2664,0,{}, 0,0,0,0,0,37, },
// st_u_aY_u_Is8_H    (31)
{ "st_u_aY_u_Is8_H", 3, 25, 64,  0x0, { 0x0,0x5600600,},_sym2830, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+),h$", 0, 2, 2, 0, 0, _sym2828_operands,0,0,0, 0,&_sym2829,0,{}, 0,0,0,0,0,34, },
// st_u_aY_u_Is8_H_minus    (32)
{ "st_u_aY_u_Is8_H_minus", 0, 25, 64,  0x0, { 0 },_sym2836, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+),h$", 0, 2, 2, 0, 0, _sym2831_operands,_sym2835,1,0, 0,&_sym2832,0,{}, 0,0,0,0,0,35, },
// st_aY_Is8_H    (33)
{ "st_aY_Is8_H", 3, 25, 64,  0x0, { 0x0,0x5000600,},_sym2662, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],h$", 0, 2, 2, 0, 0, _sym2660_operands,0,0,0, 0,&_sym2661,0,{}, 0,0,0,0,0,36, },
// st_u_aY_u_Is8_H    (34)
{ "st_u_aY_u_Is8_H", 3, 25, 64,  0x0, { 0x0,0x5600600,},_sym4306, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+),h$", 0, 2, 2, 0, 0, _sym4304_operands,0,0,0, 0,&_sym4305,0,{}, 0,0,0,0,0,34, },
// st_u_aY_u_Is8_H_minus    (35)
{ "st_u_aY_u_Is8_H_minus", 0, 25, 64,  0x0, { 0 },_sym4312, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+),h$", 0, 2, 2, 0, 0, _sym4307_operands,_sym4311,1,0, 0,&_sym4308,0,{}, 0,0,0,0,0,35, },
// st_aY_Is8_H    (36)
{ "st_aY_Is8_H", 3, 25, 64,  0x0, { 0x0,0x5000600,},_sym4138, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],h$", 0, 2, 2, 0, 0, _sym4136_operands,0,0,0, 0,&_sym4137,0,{}, 0,0,0,0,0,36, },
// st_aY_Is8_H_minus    (37)
{ "st_aY_Is8_H_minus", 0, 25, 64,  0x0, { 0 },_sym4144, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],h$", 0, 2, 2, 0, 0, _sym4139_operands,_sym4143,1,0, 0,&_sym4140,0,{}, 0,0,0,0,0,37, },
// st_aY_Is8_H_zero    (38)
{ "st_aY_Is8_H_zero", 0, 25, 64,  0x0, { 0 },_sym2673, "^ *\\[(a0|a1|a2|a3)\\],h$", 0, 1, 1, 0, 0, _sym2669_operands,_sym2672,1,0, 0,&_sym2670,0,{}, 0,0,0,0,0,-1, },
// st_aY_Is8_H_zero    (39)
{ "st_aY_Is8_H_zero", 0, 25, 64,  0x0, { 0 },_sym4149, "^ *\\[(a0|a1|a2|a3)\\],h$", 0, 1, 1, 0, 0, _sym4145_operands,_sym4148,1,0, 0,&_sym4146,0,{}, 0,0,0,0,0,-1, },
// st_Iu17_gX_opS_HI    (40)
{ "st_Iu17_gX_opS_HI", 3, 25, 64,  0x0, { 0x0,0x50000000,},_sym2659, "^ *([^},[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2657_operands,0,0,0, 0,&_sym2658,0,{}, 0,0,0,0,0,41, },
// st_Iu17_gX_opS_LO    (41)
{ "st_Iu17_gX_opS_LO", 3, 25, 64,  0x0, { 0x0,0x50000000,},_sym4135, "^ *([^},[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym4133_operands,0,0,0, 0,&_sym4134,0,{}, 0,0,0,0,0,41, },
// st_a3_1_Is16_Is16    (42)
{ "st_a3_1_Is16_Is16", 8, 64, 64,  0x0, { 0x0,0xb8000,},_sym711, "^ *\\[a3\\]\\+1,([^},[[,, ]+),([^},[[,, ]+)$", 0, 2, 2, 0, 0, _sym709_operands,0,0,0, 0,&_sym710,0,{}, 0,0,0,0,0,42, },
// st_u_sp_u_Is10_H    (43)
{ "st_u_sp_u_Is10_H", 3, 25, 64,  0x0, { 0x0,0x3600600,},_sym4335, "^ *\\[sp\\]\\+([^},[[, ]+),h$", 0, 1, 1, 0, 0, _sym4333_operands,0,0,0, 0,&_sym4334,0,{}, 0,0,0,0,0,48, },
// st_sp_Is10_H_minus    (44)
{ "st_sp_Is10_H_minus", 0, 25, 64,  0x0, { 0 },_sym4236, "^ *\\[sp\\-([^},[[, ]+)\\],h$", 0, 1, 1, 0, 0, _sym4231_operands,_sym4235,1,0, 0,&_sym4232,0,{}, 0,0,0,0,0,49, },
// st_sp_Is10_H    (45)
{ "st_sp_Is10_H", 3, 25, 64,  0x0, { 0x0,0x3000600,},_sym4230, "^ *\\[sp\\+([^},[[, ]+)\\],h$", 0, 1, 1, 0, 0, _sym4228_operands,0,0,0, 0,&_sym4229,0,{}, 0,0,0,0,0,50, },
// st_u_sp_u_Is10_H_minus    (46)
{ "st_u_sp_u_Is10_H_minus", 0, 25, 64,  0x0, { 0 },_sym4341, "^ *\\[sp\\]\\-([^},[[, ]+),h$", 0, 1, 1, 0, 0, _sym4336_operands,_sym4340,1,0, 0,&_sym4337,0,{}, 0,0,0,0,0,47, },
// st_u_sp_u_Is10_H_minus    (47)
{ "st_u_sp_u_Is10_H_minus", 0, 25, 64,  0x0, { 0 },_sym2865, "^ *\\[sp\\]\\-([^},[[, ]+),h$", 0, 1, 1, 0, 0, _sym2860_operands,_sym2864,1,0, 0,&_sym2861,0,{}, 0,0,0,0,0,47, },
// st_u_sp_u_Is10_H    (48)
{ "st_u_sp_u_Is10_H", 3, 25, 64,  0x0, { 0x0,0x3600600,},_sym2859, "^ *\\[sp\\]\\+([^},[[, ]+),h$", 0, 1, 1, 0, 0, _sym2857_operands,0,0,0, 0,&_sym2858,0,{}, 0,0,0,0,0,48, },
// st_sp_Is10_H_minus    (49)
{ "st_sp_Is10_H_minus", 0, 25, 64,  0x0, { 0 },_sym2760, "^ *\\[sp\\-([^},[[, ]+)\\],h$", 0, 1, 1, 0, 0, _sym2755_operands,_sym2759,1,0, 0,&_sym2756,0,{}, 0,0,0,0,0,49, },
// st_sp_Is10_H    (50)
{ "st_sp_Is10_H", 3, 25, 64,  0x0, { 0x0,0x3000600,},_sym2754, "^ *\\[sp\\+([^},[[, ]+)\\],h$", 0, 1, 1, 0, 0, _sym2752_operands,0,0,0, 0,&_sym2753,0,{}, 0,0,0,0,0,50, },
// st_sp_Is10_H_zero    (51)
{ "st_sp_Is10_H_zero", 0, 25, 64,  0x0, { 0 },_sym2765, "^ *\\[sp\\],h$", 0, 0, 0, 0, 0, _sym2761_operands,_sym2764,1,0, 0,&_sym2762,0,{}, 0,0,0,0,0,-1, },
// st_sp_Is10_H_zero    (52)
{ "st_sp_Is10_H_zero", 0, 25, 64,  0x0, { 0 },_sym4241, "^ *\\[sp\\],h$", 0, 0, 0, 0, 0, _sym4237_operands,_sym4240,1,0, 0,&_sym4238,0,{}, 0,0,0,0,0,-1, },
// st_a0_Is8_u_minus    (53)
{ "st_a0_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym943, "^ *\\[a0\\]\\-([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym937_operands,_sym942,1,0, 0,&_sym938,0,{}, 0,0,0,0,0,53, },
// st_a3_Is8_u_plus    (54)
{ "st_a3_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym1001, "^ *\\[a3\\]\\+([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym995_operands,_sym1000,1,0, 0,&_sym996,0,{}, 0,0,0,0,0,54, },
// st_a3_Is8_u_minus    (55)
{ "st_a3_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym994, "^ *\\[a3\\]\\-([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym988_operands,_sym993,1,0, 0,&_sym989,0,{}, 0,0,0,0,0,55, },
// st_a2_Is8_u_plus    (56)
{ "st_a2_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym984, "^ *\\[a2\\]\\+([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym978_operands,_sym983,1,0, 0,&_sym979,0,{}, 0,0,0,0,0,56, },
// st_a2_Is8_u_minus    (57)
{ "st_a2_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym977, "^ *\\[a2\\]\\-([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym971_operands,_sym976,1,0, 0,&_sym972,0,{}, 0,0,0,0,0,57, },
// st_a1_Is8_u_plus    (58)
{ "st_a1_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym967, "^ *\\[a1\\]\\+([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym961_operands,_sym966,1,0, 0,&_sym962,0,{}, 0,0,0,0,0,58, },
// st_a1_Is8_u_minus    (59)
{ "st_a1_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym960, "^ *\\[a1\\]\\-([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym954_operands,_sym959,1,0, 0,&_sym955,0,{}, 0,0,0,0,0,59, },
// st_a0_Is8_u_plus    (60)
{ "st_a0_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym950, "^ *\\[a0\\]\\+([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym944_operands,_sym949,1,0, 0,&_sym945,0,{}, 0,0,0,0,0,60, },
// st_Iu17_H_opS_LO    (61)
{ "st_Iu17_H_opS_LO", 3, 25, 64,  0x0, { 0x0,0x50000600,},_sym4132, "^ *([^},[, ]+),h$", 0, 1, 1, 0, 0, _sym4130_operands,0,0,0, 0,&_sym4131,0,{}, 0,0,0,0,0,62, },
// st_Iu17_H_opS_HI    (62)
{ "st_Iu17_H_opS_HI", 3, 25, 64,  0x0, { 0x0,0x50000600,},_sym2656, "^ *([^},[, ]+),h$", 0, 1, 1, 0, 0, _sym2654_operands,0,0,0, 0,&_sym2655,0,{}, 0,0,0,0,0,62, },
// st_Iu17_Iu16    (63)
{ "st_Iu17_Iu16", 8, 64, 64,  0x0, { 0x0,0xba000,},_sym708, "^ *([^},[, ]+),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym706_operands,0,0,0, 0,&_sym707,0,{}, 0,0,0,0,0,64, },
// st_Iu17_I32    (64)
{ "st_Iu17_I32", 0, 64, 64,  0x0, { 0 },_sym705, "^ *([^},[, ]+),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym700_operands,_sym704,1,0, 0,&_sym702,0,{}, 0,0,0,0,0,64, },
};

// Instructions named 'st.h'.
static struct adl_opcode _sym4692[] = {
  // st_h_Iu17_I16    (0)
  { "st_h_Iu17_I16", 8, 64, 64,  0x0, { 0x40000,0xba000,},_sym714, "^ *([^},[, ]+),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym712_operands,0,0,0, 0,&_sym713,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'st.laddr'.
static struct adl_opcode _sym4693[] = {
  // st_line_aY_u_Is8_gX_minus    (0)
  { "st_line_aY_u_Is8_gX_minus", 0, 25, 64,  0x0, { 0 },_sym2735, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2730_operands,_sym2734,1,0, 0,&_sym2731,0,{}, 0,0,0,0,0,4, },
// st_line_aY_u_Is8_gX_plus    (1)
{ "st_line_aY_u_Is8_gX_plus", 0, 25, 64,  0x0, { 0 },_sym2740, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2736_operands,_sym2739,1,0, 0,&_sym2737,0,{}, 0,0,0,0,0,5, },
// st_u_aY_Is8_u_gX_line_minus    (2)
{ "st_u_aY_Is8_u_gX_line_minus", 0, 25, 64,  0x0, { 0 },_sym2802, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2797_operands,_sym2801,1,0, 0,&_sym2798,0,{}, 0,0,0,0,0,6, },
// st_u_aY_Is8_u_gX_line_plus    (3)
{ "st_u_aY_Is8_u_gX_line_plus", 0, 25, 64,  0x0, { 0 },_sym2807, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2803_operands,_sym2806,1,0, 0,&_sym2804,0,{}, 0,0,0,0,0,7, },
// st_line_aY_u_Is8_gX_minus    (4)
{ "st_line_aY_u_Is8_gX_minus", 0, 25, 64,  0x0, { 0 },_sym4211, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4206_operands,_sym4210,1,0, 0,&_sym4207,0,{}, 0,0,0,0,0,4, },
// st_line_aY_u_Is8_gX_plus    (5)
{ "st_line_aY_u_Is8_gX_plus", 0, 25, 64,  0x0, { 0 },_sym4216, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4212_operands,_sym4215,1,0, 0,&_sym4213,0,{}, 0,0,0,0,0,5, },
// st_u_aY_Is8_u_gX_line_minus    (6)
{ "st_u_aY_Is8_u_gX_line_minus", 0, 25, 64,  0x0, { 0 },_sym4278, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4273_operands,_sym4277,1,0, 0,&_sym4274,0,{}, 0,0,0,0,0,6, },
// st_u_aY_Is8_u_gX_line_plus    (7)
{ "st_u_aY_Is8_u_gX_line_plus", 0, 25, 64,  0x0, { 0 },_sym4283, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[, ]+),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4279_operands,_sym4282,1,0, 0,&_sym4280,0,{}, 0,0,0,0,0,7, },
// st_line_a0_Is8_u_minus    (8)
{ "st_line_a0_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym1013, "^ *\\[a0\\]\\-([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym1008_operands,_sym1012,1,0, 0,&_sym1009,0,{}, 0,0,0,0,0,8, },
// st_line_a0_Is8_u_plus    (9)
{ "st_line_a0_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym1018, "^ *\\[a0\\]\\+([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym1014_operands,_sym1017,1,0, 0,&_sym1015,0,{}, 0,0,0,0,0,9, },
// st_line_a1_Is8_u_minus    (10)
{ "st_line_a1_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym1024, "^ *\\[a1\\]\\-([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym1019_operands,_sym1023,1,0, 0,&_sym1020,0,{}, 0,0,0,0,0,10, },
// st_line_a1_Is8_u_plus    (11)
{ "st_line_a1_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym1029, "^ *\\[a1\\]\\+([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym1025_operands,_sym1028,1,0, 0,&_sym1026,0,{}, 0,0,0,0,0,11, },
// st_line_a2_Is8_u_minus    (12)
{ "st_line_a2_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym1035, "^ *\\[a2\\]\\-([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym1030_operands,_sym1034,1,0, 0,&_sym1031,0,{}, 0,0,0,0,0,12, },
// st_line_a2_Is8_u_plus    (13)
{ "st_line_a2_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym1040, "^ *\\[a2\\]\\+([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym1036_operands,_sym1039,1,0, 0,&_sym1037,0,{}, 0,0,0,0,0,13, },
// st_line_a3_Is8_u_minus    (14)
{ "st_line_a3_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym1046, "^ *\\[a3\\]\\-([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym1041_operands,_sym1045,1,0, 0,&_sym1042,0,{}, 0,0,0,0,0,14, },
// st_line_a3_Is8_u_plus    (15)
{ "st_line_a3_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym1051, "^ *\\[a3\\]\\+([^},[[ ]+)$", 0, 1, 1, 0, 0, _sym1047_operands,_sym1050,1,0, 0,&_sym1048,0,{}, 0,0,0,0,0,15, },
};

// Instructions named 'st.laddr.u'.
static struct adl_opcode _sym4694[] = {
  // st_line_aY_u_Is8_u_gX_minus    (0)
  { "st_line_aY_u_Is8_u_gX_minus", 0, 25, 64,  0x0, { 0 },_sym2746, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2741_operands,_sym2745,1,0, 0,&_sym2742,0,{}, 0,0,0,0,0,2, },
// st_line_aY_u_Is8_u_gX_plus    (1)
{ "st_line_aY_u_Is8_u_gX_plus", 0, 25, 64,  0x0, { 0 },_sym2751, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2747_operands,_sym2750,1,0, 0,&_sym2748,0,{}, 0,0,0,0,0,3, },
// st_line_aY_u_Is8_u_gX_minus    (2)
{ "st_line_aY_u_Is8_u_gX_minus", 0, 25, 64,  0x0, { 0 },_sym4222, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4217_operands,_sym4221,1,0, 0,&_sym4218,0,{}, 0,0,0,0,0,2, },
// st_line_aY_u_Is8_u_gX_plus    (3)
{ "st_line_aY_u_Is8_u_gX_plus", 0, 25, 64,  0x0, { 0 },_sym4227, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4223_operands,_sym4226,1,0, 0,&_sym4224,0,{}, 0,0,0,0,0,3, },
};

// Instructions named 'st.laddr.w'.
static struct adl_opcode _sym4695[] = {
  // st_w_line_aX_Is8_u_minus    (0)
  { "st_w_line_aX_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym1085, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[ ]+)$", 0, 2, 2, 0, 0, _sym1080_operands,_sym1084,1,0, 0,&_sym1081,0,{}, 0,0,0,0,0,0, },
// st_w_line_aX_Is8_u_plus    (1)
{ "st_w_line_aX_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym1090, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[ ]+)$", 0, 2, 2, 0, 0, _sym1086_operands,_sym1089,1,0, 0,&_sym1087,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'st.s'.
static struct adl_opcode _sym4696[] = {
  // st_s_Iu17_Is16    (0)
  { "st_s_Iu17_Is16", 8, 64, 64,  0x0, { 0x0,0xba020,},_sym717, "^ *([^},[, ]+),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym715_operands,0,0,0, 0,&_sym716,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'st.u'.
static struct adl_opcode _sym4697[] = {
  // st_u_aY_aZ_u_gX    (0)
  { "st_u_aY_aZ_u_gX", 3, 25, 64,  0x0, { 0x0,0xd200000,},_sym2827, "^ *\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 0, _sym2825_operands,0,0,0, 0,&_sym2826,0,{}, 0,0,0,0,0,1, },
  // st_u_aY_aZ_u_gX    (1)
  { "st_u_aY_aZ_u_gX", 3, 25, 64,  0x0, { 0x0,0xd200000,},_sym4303, "^ *\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 0, _sym4301_operands,0,0,0, 0,&_sym4302,0,{}, 0,0,0,0,0,1, },
  // st_u_aY_aZ_H    (2)
  { "st_u_aY_aZ_H", 3, 25, 64,  0x0, { 0x0,0xd200600,},_sym2824, "^ *\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\],h$", 0, 3, 3, 0, 0, _sym2822_operands,0,0,0, 0,&_sym2823,0,{}, 0,0,0,0,0,3, },
  // st_u_aY_aZ_H    (3)
  { "st_u_aY_aZ_H", 3, 25, 64,  0x0, { 0x0,0xd200600,},_sym4300, "^ *\\[(a0|a1|a2|a3)(\\+|\\-)(a0|a1|a2|a3)\\],h$", 0, 3, 3, 0, 0, _sym4298_operands,0,0,0, 0,&_sym4299,0,{}, 0,0,0,0,0,3, },
  // st_aY_u_Is8_u_gX_minus    (4)
  { "st_aY_u_Is8_u_gX_minus", 0, 25, 64,  0x0, { 0 },_sym2717, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2711_operands,_sym2716,1,0, 0,&_sym2712,0,{}, 0,0,0,0,0,6, },
// st_aY_u_Is8_u_gX_plus    (5)
{ "st_aY_u_Is8_u_gX_plus", 0, 25, 64,  0x0, { 0 },_sym2724, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym2718_operands,_sym2723,1,0, 0,&_sym2719,0,{}, 0,0,0,0,0,7, },
// st_aY_u_Is8_u_gX_minus    (6)
{ "st_aY_u_Is8_u_gX_minus", 0, 25, 64,  0x0, { 0 },_sym4193, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4187_operands,_sym4192,1,0, 0,&_sym4188,0,{}, 0,0,0,0,0,6, },
// st_aY_u_Is8_u_gX_plus    (7)
{ "st_aY_u_Is8_u_gX_plus", 0, 25, 64,  0x0, { 0 },_sym4200, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 3, 3, 0, 0, _sym4194_operands,_sym4199,1,0, 0,&_sym4195,0,{}, 0,0,0,0,0,7, },
// st_aY_u_Is8_u_gX_zero    (8)
{ "st_aY_u_Is8_u_gX_zero", 0, 25, 64,  0x0, { 0 },_sym2729, "^ *\\[(a0|a1|a2|a3)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym2725_operands,_sym2728,1,0, 0,&_sym2726,0,{}, 0,0,0,0,0,-1, },
// st_aY_u_Is8_u_gX_zero    (9)
{ "st_aY_u_Is8_u_gX_zero", 0, 25, 64,  0x0, { 0 },_sym4205, "^ *\\[(a0|a1|a2|a3)\\],(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym4201_operands,_sym4204,1,0, 0,&_sym4202,0,{}, 0,0,0,0,0,-1, },
// st_u_aY_Is8_H    (10)
{ "st_u_aY_Is8_H", 3, 25, 64,  0x0, { 0x0,0x5200600,},_sym2782, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],h$", 0, 2, 2, 0, 0, _sym2780_operands,0,0,0, 0,&_sym2781,0,{}, 0,0,0,0,0,12, },
// st_u_aY_Is8_H_minus    (11)
{ "st_u_aY_Is8_H_minus", 0, 25, 64,  0x0, { 0 },_sym2788, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],h$", 0, 2, 2, 0, 0, _sym2783_operands,_sym2787,1,0, 0,&_sym2784,0,{}, 0,0,0,0,0,13, },
// st_u_aY_Is8_H    (12)
{ "st_u_aY_Is8_H", 3, 25, 64,  0x0, { 0x0,0x5200600,},_sym4258, "^ *\\[(a0|a1|a2|a3)\\+([^},[[, ]+)\\],h$", 0, 2, 2, 0, 0, _sym4256_operands,0,0,0, 0,&_sym4257,0,{}, 0,0,0,0,0,12, },
// st_u_aY_Is8_H_minus    (13)
{ "st_u_aY_Is8_H_minus", 0, 25, 64,  0x0, { 0 },_sym4264, "^ *\\[(a0|a1|a2|a3)\\-([^},[[, ]+)\\],h$", 0, 2, 2, 0, 0, _sym4259_operands,_sym4263,1,0, 0,&_sym4260,0,{}, 0,0,0,0,0,13, },
// st_u_aY_Is8_H_zero    (14)
{ "st_u_aY_Is8_H_zero", 0, 25, 64,  0x0, { 0 },_sym2793, "^ *\\[(a0|a1|a2|a3)\\],h$", 0, 1, 1, 0, 0, _sym2789_operands,_sym2792,1,0, 0,&_sym2790,0,{}, 0,0,0,0,0,-1, },
// st_u_aY_Is8_H_zero    (15)
{ "st_u_aY_Is8_H_zero", 0, 25, 64,  0x0, { 0 },_sym4269, "^ *\\[(a0|a1|a2|a3)\\],h$", 0, 1, 1, 0, 0, _sym4265_operands,_sym4268,1,0, 0,&_sym4266,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'st.w'.
static struct adl_opcode _sym4698[] = {
  // st_w_aX_u_aY    (0)
  { "st_w_aX_u_aY", 1, 15, 64,  0x0, { 0x0,0x60000000,},_sym1071, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym1069_operands,0,0,0, 0,&_sym1070,0,{}, 0,0,0,0,0,0, },
  // st_w_aX_Is8_u_minus    (1)
  { "st_w_aX_Is8_u_minus", 0, 15, 64,  0x0, { 0 },_sym1061, "^ *\\[(a0|a1|a2|a3)\\]\\-([^},[[ ]+)$", 0, 2, 2, 0, 0, _sym1055_operands,_sym1060,1,0, 0,&_sym1056,0,{}, 0,0,0,0,0,1, },
// st_w_aX_Is8_u_plus    (2)
{ "st_w_aX_Is8_u_plus", 0, 15, 64,  0x0, { 0 },_sym1068, "^ *\\[(a0|a1|a2|a3)\\]\\+([^},[[ ]+)$", 0, 2, 2, 0, 0, _sym1062_operands,_sym1067,1,0, 0,&_sym1063,0,{}, 0,0,0,0,0,2, },
};

// Instructions named 'st.w.br'.
static struct adl_opcode _sym4699[] = {
  // st_w_aX_u_aY_br_instr    (0)
  { "st_w_aX_u_aY_br_instr", 1, 15, 64,  0x0, { 0x0,0x60800000,},_sym1074, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym1072_operands,0,0,0, 0,&_sym1073,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'st.w.u'.
static struct adl_opcode _sym4700[] = {
  // st_w_u_aX_u_aY    (0)
  { "st_w_u_aX_u_aY", 0, 15, 64,  0x0, { 0 },_sym1095, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym1091_operands,_sym1094,1,0, 0,&_sym1092,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'st.w.u.br'.
static struct adl_opcode _sym4701[] = {
  // st_w_br_aX_u_aY    (0)
  { "st_w_br_aX_u_aY", 0, 15, 64,  0x0, { 0 },_sym1079, "^ *\\[(a0|a1|a2|a3)\\](\\+|\\-)(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym1075_operands,_sym1078,1,0, 0,&_sym1076,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'st_a0_is8_u'.
static struct adl_opcode _sym4702[] = {
  // st_a0_Is8_u    (0)
  { "st_a0_Is8_u", 1, 15, 64,  0x0, { 0x0,0x20000000,},_sym936, "^ *([^} ,\t,]+),([^} ,\t,]+)$", 0, 2, 4, 0, 0, _sym934_operands,0,0,0, 0,&_sym935,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'st_a1_is8_u'.
static struct adl_opcode _sym4703[] = {
  // st_a1_Is8_u    (0)
  { "st_a1_Is8_u", 1, 15, 64,  0x0, { 0x0,0x24000000,},_sym953, "^ *([^} ,\t,]+),([^} ,\t,]+)$", 0, 2, 4, 0, 0, _sym951_operands,0,0,0, 0,&_sym952,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'st_a2_is8_u'.
static struct adl_opcode _sym4704[] = {
  // st_a2_Is8_u    (0)
  { "st_a2_Is8_u", 1, 15, 64,  0x0, { 0x0,0x28000000,},_sym970, "^ *([^} ,\t,]+),([^} ,\t,]+)$", 0, 2, 4, 0, 0, _sym968_operands,0,0,0, 0,&_sym969,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'st_a3_is8_u'.
static struct adl_opcode _sym4705[] = {
  // st_a3_Is8_u    (0)
  { "st_a3_Is8_u", 1, 15, 64,  0x0, { 0x0,0x2c000000,},_sym987, "^ *([^} ,\t,]+),([^} ,\t,]+)$", 0, 2, 4, 0, 0, _sym985_operands,0,0,0, 0,&_sym986,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'st_au_st_sau_nop'.
static struct adl_opcode _sym4706[] = {
  // st_au_st_sau_nop    (0)
  { "st_au_st_sau_nop", 0, 3, 64,  0x0, { },_sym1454, "$", 0, 0, 0, 0, 0, _sym1452_operands,0,0,0, 0,&_sym1453,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'st_ay_is8_u_gx'.
static struct adl_opcode _sym4707[] = {
  // st_aY_Is8_u_gX    (0)
  { "st_aY_Is8_u_gX", 3, 25, 64,  0x0, { 0x0,0x5400000,},_sym2676, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym2674_operands,0,0,0, 0,&_sym2675,0,{}, 0,0,0,0,0,1, },
// st_aY_Is8_u_gX    (1)
{ "st_aY_Is8_u_gX", 3, 25, 64,  0x0, { 0x0,0x5400000,},_sym4152, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym4150_operands,0,0,0, 0,&_sym4151,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'st_ay_u_is8_gx'.
static struct adl_opcode _sym4708[] = {
  // st_aY_u_Is8_gX    (0)
  { "st_aY_u_Is8_gX", 3, 25, 64,  0x0, { 0x0,0x5000000,},_sym2688, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym2686_operands,0,0,0, 0,&_sym2687,0,{}, 0,0,0,0,0,1, },
// st_aY_u_Is8_gX    (1)
{ "st_aY_u_Is8_gX", 3, 25, 64,  0x0, { 0x0,0x5000000,},_sym4164, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym4162_operands,0,0,0, 0,&_sym4163,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'st_ay_u_is8_h'.
static struct adl_opcode _sym4709[] = {
  // st_aY_u_Is8_H    (0)
  { "st_aY_u_Is8_H", 3, 25, 64,  0x0, { 0x0,0x5400600,},_sym2685, "^ *([^} ,\t,]+),([^} ,\t,]+)$", 0, 2, 4, 0, 0, _sym2683_operands,0,0,0, 0,&_sym2684,0,{}, 0,0,0,0,0,1, },
// st_aY_u_Is8_H    (1)
{ "st_aY_u_Is8_H", 3, 25, 64,  0x0, { 0x0,0x5400600,},_sym4161, "^ *([^} ,\t,]+),([^} ,\t,]+)$", 0, 2, 4, 0, 0, _sym4159_operands,0,0,0, 0,&_sym4160,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'st_ay_u_is8_u_gx'.
static struct adl_opcode _sym4710[] = {
  // st_aY_u_Is8_u_gX    (0)
  { "st_aY_u_Is8_u_gX", 3, 25, 64,  0x0, { 0x0,0x5200000,},_sym2710, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym2708_operands,0,0,0, 0,&_sym2709,0,{}, 0,0,0,0,0,1, },
// st_aY_u_Is8_u_gX    (1)
{ "st_aY_u_Is8_u_gX", 3, 25, 64,  0x0, { 0x0,0x5200000,},_sym4186, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym4184_operands,0,0,0, 0,&_sym4185,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'st_u_ay_is8_u_gx'.
static struct adl_opcode _sym4711[] = {
  // st_u_aY_Is8_u_gX    (0)
  { "st_u_aY_Is8_u_gX", 3, 25, 64,  0x0, { 0x0,0x5600000,},_sym2796, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym2794_operands,0,0,0, 0,&_sym2795,0,{}, 0,0,0,0,0,1, },
// st_u_aY_Is8_u_gX    (1)
{ "st_u_aY_Is8_u_gX", 3, 25, 64,  0x0, { 0x0,0x5600000,},_sym4272, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 4, 8, 0, 0, _sym4270_operands,0,0,0, 0,&_sym4271,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'st_w_ax_is8_u'.
static struct adl_opcode _sym4712[] = {
  // st_w_aX_Is8_u    (0)
  { "st_w_aX_Is8_u", 1, 15, 64,  0x0, { 0x0,0x30000000,},_sym1054, "^ *([^} ,\t,]+),([^} ,\t,]+),([^} ,\t,]+)$", 0, 3, 6, 0, 0, _sym1052_operands,0,0,0, 0,&_sym1053,0,{}, 0,0,0,0,0,0, },
};

// Instructions named 'sub'.
static struct adl_opcode _sym4713[] = {
  // sub_cc_gZ_gX_gY_001    (0)
  { "sub_cc_gZ_gX_gY_001", 3, 25, 64,  0x0, { 0x0,0x35040000,},_sym2877, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym2875_operands,0,0,1, 0,&_sym2876,0,{}, 0,0,0,0,0,14, },
  // sub_cc_gZ_gX_gY_111    (1)
  { "sub_cc_gZ_gX_gY_111", 3, 25, 64,  0x0, { 0x0,0x35044400,},_sym4371, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym4369_operands,0,0,1, 0,&_sym4370,0,{}, 0,0,0,0,0,3, },
  // sub_cc_gZ_gX_gY_110    (2)
  { "sub_cc_gZ_gX_gY_110", 3, 25, 64,  0x0, { 0x0,0x35004400,},_sym4368, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym4366_operands,0,0,1, 0,&_sym4367,0,{}, 0,0,0,0,0,4, },
  // sub_cc_gZ_gX_gY_111    (3)
  { "sub_cc_gZ_gX_gY_111", 3, 25, 64,  0x0, { 0x0,0x35044400,},_sym2895, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym2893_operands,0,0,1, 0,&_sym2894,0,{}, 0,0,0,0,0,3, },
  // sub_cc_gZ_gX_gY_110    (4)
  { "sub_cc_gZ_gX_gY_110", 3, 25, 64,  0x0, { 0x0,0x35004400,},_sym2892, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym2890_operands,0,0,1, 0,&_sym2891,0,{}, 0,0,0,0,0,4, },
  // sub_cc_gZ_gX_gY_101    (5)
  { "sub_cc_gZ_gX_gY_101", 3, 25, 64,  0x0, { 0x0,0x35040400,},_sym2889, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym2887_operands,0,0,1, 0,&_sym2888,0,{}, 0,0,0,0,0,10, },
  // sub_cc_gZ_gX_gY_100    (6)
  { "sub_cc_gZ_gX_gY_100", 3, 25, 64,  0x0, { 0x0,0x35000400,},_sym2886, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym2884_operands,0,0,1, 0,&_sym2885,0,{}, 0,0,0,0,0,11, },
  // sub_cc_gZ_gX_gY_011    (7)
  { "sub_cc_gZ_gX_gY_011", 3, 25, 64,  0x0, { 0x0,0x35044000,},_sym2883, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym2881_operands,0,0,1, 0,&_sym2882,0,{}, 0,0,0,0,0,12, },
  // sub_cc_gZ_gX_gY_010    (8)
  { "sub_cc_gZ_gX_gY_010", 3, 25, 64,  0x0, { 0x0,0x35004000,},_sym2880, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym2878_operands,0,0,1, 0,&_sym2879,0,{}, 0,0,0,0,0,13, },
  // sub_cc_gZ_gX_gY_000    (9)
  { "sub_cc_gZ_gX_gY_000", 3, 25, 64,  0x0, { 0x0,0x35000000,},_sym2874, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym2872_operands,0,0,1, 0,&_sym2873,0,{}, 0,0,0,0,0,15, },
  // sub_cc_gZ_gX_gY_101    (10)
  { "sub_cc_gZ_gX_gY_101", 3, 25, 64,  0x0, { 0x0,0x35040400,},_sym4365, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym4363_operands,0,0,1, 0,&_sym4364,0,{}, 0,0,0,0,0,10, },
  // sub_cc_gZ_gX_gY_100    (11)
  { "sub_cc_gZ_gX_gY_100", 3, 25, 64,  0x0, { 0x0,0x35000400,},_sym4362, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym4360_operands,0,0,1, 0,&_sym4361,0,{}, 0,0,0,0,0,11, },
  // sub_cc_gZ_gX_gY_011    (12)
  { "sub_cc_gZ_gX_gY_011", 3, 25, 64,  0x0, { 0x0,0x35044000,},_sym4359, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym4357_operands,0,0,1, 0,&_sym4358,0,{}, 0,0,0,0,0,12, },
  // sub_cc_gZ_gX_gY_010    (13)
  { "sub_cc_gZ_gX_gY_010", 3, 25, 64,  0x0, { 0x0,0x35004000,},_sym4356, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym4354_operands,0,0,1, 0,&_sym4355,0,{}, 0,0,0,0,0,13, },
  // sub_cc_gZ_gX_gY_001    (14)
  { "sub_cc_gZ_gX_gY_001", 3, 25, 64,  0x0, { 0x0,0x35040000,},_sym4353, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym4351_operands,0,0,1, 0,&_sym4352,0,{}, 0,0,0,0,0,14, },
  // sub_cc_gZ_gX_gY_000    (15)
  { "sub_cc_gZ_gX_gY_000", 3, 25, 64,  0x0, { 0x0,0x35000000,},_sym4350, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 4, 4, 0, 1, _sym4348_operands,0,0,1, 0,&_sym4349,0,{}, 0,0,0,0,0,15, },
  // sub_cc_gZ_sp_gX_00    (16)
  { "sub_cc_gZ_sp_gX_00", 3, 25, 64,  0x0, { 0x0,0x35007000,},_sym4386, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym4384_operands,0,0,1, 0,&_sym4385,0,{}, 0,0,0,0,0,35, },
  // sub_cc_sp_gY_gX_11    (17)
  { "sub_cc_sp_gY_gX_11", 3, 25, 64,  0x0, { 0x0,0x35044700,},_sym2941, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym2939_operands,0,0,1, 0,&_sym2940,0,{}, 0,0,0,0,0,26, },
  // sub_cc_sp_gY_gX_01    (18)
  { "sub_cc_sp_gY_gX_01", 3, 25, 64,  0x0, { 0x0,0x35040700,},_sym2935, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym2933_operands,0,0,1, 0,&_sym2934,0,{}, 0,0,0,0,0,28, },
  // sub_cc_sp_gY_gX_10    (19)
  { "sub_cc_sp_gY_gX_10", 3, 25, 64,  0x0, { 0x0,0x35004700,},_sym2938, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym2936_operands,0,0,1, 0,&_sym2937,0,{}, 0,0,0,0,0,27, },
  // sub_cc_gZ_sp_gX_10    (20)
  { "sub_cc_gZ_sp_gX_10", 3, 25, 64,  0x0, { 0x0,0x35007400,},_sym2916, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym2914_operands,0,0,1, 0,&_sym2915,0,{}, 0,0,0,0,0,38, },
  // sub_cc_gZ_gY_sp_11    (21)
  { "sub_cc_gZ_gY_sp_11", 3, 25, 64,  0x0, { 0x0,0x35074400,},_sym4383, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym4381_operands,0,0,1, 0,&_sym4382,0,{}, 0,0,0,0,0,34, },
  // sub_cc_gZ_gY_sp_10    (22)
  { "sub_cc_gZ_gY_sp_10", 3, 25, 64,  0x0, { 0x0,0x35070400,},_sym4380, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym4378_operands,0,0,1, 0,&_sym4379,0,{}, 0,0,0,0,0,25, },
  // sub_cc_gZ_gY_sp_01    (23)
  { "sub_cc_gZ_gY_sp_01", 3, 25, 64,  0x0, { 0x0,0x35074000,},_sym4377, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym4375_operands,0,0,1, 0,&_sym4376,0,{}, 0,0,0,0,0,32, },
  // sub_cc_gZ_gY_sp_00    (24)
  { "sub_cc_gZ_gY_sp_00", 3, 25, 64,  0x0, { 0x0,0x35070000,},_sym4374, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym4372_operands,0,0,1, 0,&_sym4373,0,{}, 0,0,0,0,0,31, },
  // sub_cc_gZ_gY_sp_10    (25)
  { "sub_cc_gZ_gY_sp_10", 3, 25, 64,  0x0, { 0x0,0x35070400,},_sym2904, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym2902_operands,0,0,1, 0,&_sym2903,0,{}, 0,0,0,0,0,25, },
  // sub_cc_sp_gY_gX_11    (26)
  { "sub_cc_sp_gY_gX_11", 3, 25, 64,  0x0, { 0x0,0x35044700,},_sym4417, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym4415_operands,0,0,1, 0,&_sym4416,0,{}, 0,0,0,0,0,26, },
  // sub_cc_sp_gY_gX_10    (27)
  { "sub_cc_sp_gY_gX_10", 3, 25, 64,  0x0, { 0x0,0x35004700,},_sym4414, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym4412_operands,0,0,1, 0,&_sym4413,0,{}, 0,0,0,0,0,27, },
  // sub_cc_sp_gY_gX_01    (28)
  { "sub_cc_sp_gY_gX_01", 3, 25, 64,  0x0, { 0x0,0x35040700,},_sym4411, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym4409_operands,0,0,1, 0,&_sym4410,0,{}, 0,0,0,0,0,28, },
  // sub_cc_sp_gY_gX_00    (29)
  { "sub_cc_sp_gY_gX_00", 3, 25, 64,  0x0, { 0x0,0x35000700,},_sym4408, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym4406_operands,0,0,1, 0,&_sym4407,0,{}, 0,0,0,0,0,33, },
  // sub_cc_gZ_sp_gX_11    (30)
  { "sub_cc_gZ_sp_gX_11", 3, 25, 64,  0x0, { 0x0,0x35047400,},_sym4395, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym4393_operands,0,0,1, 0,&_sym4394,0,{}, 0,0,0,0,0,37, },
  // sub_cc_gZ_gY_sp_00    (31)
  { "sub_cc_gZ_gY_sp_00", 3, 25, 64,  0x0, { 0x0,0x35070000,},_sym2898, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 3, 3, 0, 1, _sym2896_operands,0,0,1, 0,&_sym2897,0,{}, 0,0,0,0,0,31, },
  // sub_cc_gZ_gY_sp_01    (32)
  { "sub_cc_gZ_gY_sp_01", 3, 25, 64,  0x0, { 0x0,0x35074000,},_sym2901, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym2899_operands,0,0,1, 0,&_sym2900,0,{}, 0,0,0,0,0,32, },
  // sub_cc_sp_gY_gX_00    (33)
  { "sub_cc_sp_gY_gX_00", 3, 25, 64,  0x0, { 0x0,0x35000700,},_sym2932, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym2930_operands,0,0,1, 0,&_sym2931,0,{}, 0,0,0,0,0,33, },
  // sub_cc_gZ_gY_sp_11    (34)
  { "sub_cc_gZ_gY_sp_11", 3, 25, 64,  0x0, { 0x0,0x35074400,},_sym2907, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),(g8|g9|g10|g11),sp$", 0, 3, 3, 0, 1, _sym2905_operands,0,0,1, 0,&_sym2906,0,{}, 0,0,0,0,0,34, },
  // sub_cc_gZ_sp_gX_00    (35)
  { "sub_cc_gZ_sp_gX_00", 3, 25, 64,  0x0, { 0x0,0x35007000,},_sym2910, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym2908_operands,0,0,1, 0,&_sym2909,0,{}, 0,0,0,0,0,35, },
  // sub_cc_gZ_sp_gX_01    (36)
  { "sub_cc_gZ_sp_gX_01", 3, 25, 64,  0x0, { 0x0,0x35047000,},_sym2913, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym2911_operands,0,0,1, 0,&_sym2912,0,{}, 0,0,0,0,0,39, },
  // sub_cc_gZ_sp_gX_11    (37)
  { "sub_cc_gZ_sp_gX_11", 3, 25, 64,  0x0, { 0x0,0x35047400,},_sym2919, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym2917_operands,0,0,1, 0,&_sym2918,0,{}, 0,0,0,0,0,37, },
  // sub_cc_gZ_sp_gX_10    (38)
  { "sub_cc_gZ_sp_gX_10", 3, 25, 64,  0x0, { 0x0,0x35007400,},_sym4392, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 3, 3, 0, 1, _sym4390_operands,0,0,1, 0,&_sym4391,0,{}, 0,0,0,0,0,38, },
  // sub_cc_gZ_sp_gX_01    (39)
  { "sub_cc_gZ_sp_gX_01", 3, 25, 64,  0x0, { 0x0,0x35047000,},_sym4389, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,(g8|g9|g10|g11)$", 0, 3, 3, 0, 1, _sym4387_operands,0,0,1, 0,&_sym4388,0,{}, 0,0,0,0,0,39, },
  // sub_asZ_aX_aY    (40)
  { "sub_asZ_aX_aY", 1, 15, 64,  0x0, { 0x0,0x92000000,},_sym1107, "^ *(as0|as1|as2|as3|as4|as5|as6|as7|as8|as9|as10|as11|as12|as13|as14|as15),(a0|a1|a2|a3),(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym1105_operands,0,0,0, 0,&_sym1106,0,{}, 0,0,0,0,0,-1, },
  // sub_cc_sp_sp_gX_1    (41)
  { "sub_cc_sp_sp_gX_1", 3, 25, 64,  0x0, { 0x0,0x35047700,},_sym2953, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym2951_operands,0,0,1, 0,&_sym2952,0,{}, 0,0,0,0,0,48, },
  // sub_cc_gX_sp_sp_1    (42)
  { "sub_cc_gX_sp_sp_1", 3, 25, 64,  0x0, { 0x0,0x35077400,},_sym4347, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,sp$", 0, 2, 2, 0, 1, _sym4345_operands,0,0,1, 0,&_sym4346,0,{}, 0,0,0,0,0,44, },
  // sub_cc_gX_sp_sp_0    (43)
  { "sub_cc_gX_sp_sp_0", 3, 25, 64,  0x0, { 0x0,0x35077000,},_sym2868, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,sp$", 0, 2, 2, 0, 1, _sym2866_operands,0,0,1, 0,&_sym2867,0,{}, 0,0,0,0,0,52, },
  // sub_cc_gX_sp_sp_1    (44)
  { "sub_cc_gX_sp_sp_1", 3, 25, 64,  0x0, { 0x0,0x35077400,},_sym2871, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g8|g9|g10|g11),sp,sp$", 0, 2, 2, 0, 1, _sym2869_operands,0,0,1, 0,&_sym2870,0,{}, 0,0,0,0,0,44, },
  // sub_cc_sp_gY_sp_0    (45)
  { "sub_cc_sp_gY_sp_0", 3, 25, 64,  0x0, { 0x0,0x35070700,},_sym2944, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym2942_operands,0,0,1, 0,&_sym2943,0,{}, 0,0,0,0,0,51, },
  // sub_cc_sp_gY_sp_1    (46)
  { "sub_cc_sp_gY_sp_1", 3, 25, 64,  0x0, { 0x0,0x35074700,},_sym2947, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym2945_operands,0,0,1, 0,&_sym2946,0,{}, 0,0,0,0,0,50, },
  // sub_cc_sp_sp_gX_0    (47)
  { "sub_cc_sp_sp_gX_0", 3, 25, 64,  0x0, { 0x0,0x35007700,},_sym2950, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym2948_operands,0,0,1, 0,&_sym2949,0,{}, 0,0,0,0,0,49, },
  // sub_cc_sp_sp_gX_1    (48)
  { "sub_cc_sp_sp_gX_1", 3, 25, 64,  0x0, { 0x0,0x35047700,},_sym4429, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym4427_operands,0,0,1, 0,&_sym4428,0,{}, 0,0,0,0,0,48, },
  // sub_cc_sp_sp_gX_0    (49)
  { "sub_cc_sp_sp_gX_0", 3, 25, 64,  0x0, { 0x0,0x35007700,},_sym4426, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym4424_operands,0,0,1, 0,&_sym4425,0,{}, 0,0,0,0,0,49, },
  // sub_cc_sp_gY_sp_1    (50)
  { "sub_cc_sp_gY_sp_1", 3, 25, 64,  0x0, { 0x0,0x35074700,},_sym4423, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11),sp$", 0, 2, 2, 0, 1, _sym4421_operands,0,0,1, 0,&_sym4422,0,{}, 0,0,0,0,0,50, },
  // sub_cc_sp_gY_sp_0    (51)
  { "sub_cc_sp_gY_sp_0", 3, 25, 64,  0x0, { 0x0,0x35070700,},_sym4420, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7),sp$", 0, 2, 2, 0, 1, _sym4418_operands,0,0,1, 0,&_sym4419,0,{}, 0,0,0,0,0,51, },
  // sub_cc_gX_sp_sp_0    (52)
  { "sub_cc_gX_sp_sp_0", 3, 25, 64,  0x0, { 0x0,0x35077000,},_sym4344, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7),sp,sp$", 0, 2, 2, 0, 1, _sym4342_operands,0,0,1, 0,&_sym4343,0,{}, 0,0,0,0,0,52, },
  // sub_cc_sp_gX_1    (53)
  { "sub_cc_sp_gX_1", 0, 25, 64,  0x0, { 0 },_sym2929, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym2925_operands,_sym2928,1,1, 0,&_sym2926,0,{}, 0,0,0,0,0,56, },
  // sub_cc_sp_gX_0    (54)
  { "sub_cc_sp_gX_0", 0, 25, 64,  0x0, { 0 },_sym2924, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym2920_operands,_sym2923,1,1, 0,&_sym2921,0,{}, 0,0,0,0,0,55, },
  // sub_cc_sp_gX_0    (55)
  { "sub_cc_sp_gX_0", 0, 25, 64,  0x0, { 0 },_sym4400, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g0|g1|g2|g3|g4|g5|g6|g7)$", 0, 2, 2, 0, 1, _sym4396_operands,_sym4399,1,1, 0,&_sym4397,0,{}, 0,0,0,0,0,55, },
  // sub_cc_sp_gX_1    (56)
  { "sub_cc_sp_gX_1", 0, 25, 64,  0x0, { 0 },_sym4405, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? sp,(g8|g9|g10|g11)$", 0, 2, 2, 0, 1, _sym4401_operands,_sym4404,1,1, 0,&_sym4402,0,{}, 0,0,0,0,0,56, },
  // sub_aX_aY_sub_aX_aX_aY    (57)
  { "sub_aX_aY_sub_aX_aX_aY", 0, 15, 64,  0x0, { 0 },_sym1104, "^ *(a0|a1|a2|a3),(a0|a1|a2|a3),(a0|a1|a2|a3)$", 0, 3, 3, 0, 0, _sym1099_operands,_sym1102,1,0, 0,&_sym1100,0,{}, 0,0,_sym1103_argchecker,0,0,-1, },
  // sub_aX_aY    (58)
  { "sub_aX_aY", 1, 15, 64,  0x0, { 0x0,0x90000000,},_sym1098, "^ *(a0|a1|a2|a3),(a0|a1|a2|a3)$", 0, 2, 2, 0, 0, _sym1096_operands,0,0,0, 0,&_sym1097,0,{}, 0,0,0,0,0,-1, },
  // sub_z_gX_Iu16_gX_sub    (59)
  { "sub_z_gX_Iu16_gX_sub", 0, 25, 64,  0x0, { 0 },_sym4484, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4479_operands,_sym4482,1,0, 0,&_sym4480,0,{}, 0,0,_sym4483_argchecker,0,0,63, },
// sub_s_gX_Is16_gX_sub    (60)
{ "sub_s_gX_Is16_gX_sub", 0, 25, 64,  0x0, { 0 },_sym2968, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2963_operands,_sym2966,1,0, 0,&_sym2964,0,{}, 0,0,_sym2967_argchecker,0,0,62, },
// sub_z_gX_Iu16_gX_sub    (61)
{ "sub_z_gX_Iu16_gX_sub", 0, 25, 64,  0x0, { 0 },_sym3008, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3003_operands,_sym3006,1,0, 0,&_sym3004,0,{}, 0,0,_sym3007_argchecker,0,0,63, },
// sub_s_gX_Is16_gX_sub    (62)
{ "sub_s_gX_Is16_gX_sub", 0, 25, 64,  0x0, { 0 },_sym4444, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4439_operands,_sym4442,1,0, 0,&_sym4440,0,{}, 0,0,_sym4443_argchecker,0,0,62, },
// sub_gX_I32_sub_gX_gX_I32    (63)
{ "sub_gX_I32_sub_gX_gX_I32", 0, 64, 64,  0x0, { 0 },_sym726, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym721_operands,_sym724,1,0, 0,&_sym722,0,{}, 0,0,_sym725_argchecker,0,0,63, },
// sub_z_gX_Iu16_sub    (64)
{ "sub_z_gX_Iu16_sub", 0, 25, 64,  0x0, { 0 },_sym4509, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4505_operands,_sym4508,1,0, 0,&_sym4506,0,{}, 0,0,0,0,0,68, },
// sub_z_gX_Iu16_sub    (65)
{ "sub_z_gX_Iu16_sub", 0, 25, 64,  0x0, { 0 },_sym3033, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3029_operands,_sym3032,1,0, 0,&_sym3030,0,{}, 0,0,0,0,0,68, },
// sub_s_gX_Is16_sub    (66)
{ "sub_s_gX_Is16_sub", 0, 25, 64,  0x0, { 0 },_sym4469, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4465_operands,_sym4468,1,0, 0,&_sym4466,0,{}, 0,0,0,0,0,67, },
// sub_s_gX_Is16_sub    (67)
{ "sub_s_gX_Is16_sub", 0, 25, 64,  0x0, { 0 },_sym2993, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2989_operands,_sym2992,1,0, 0,&_sym2990,0,{}, 0,0,0,0,0,67, },
// sub_gX_I32    (68)
{ "sub_gX_I32", 8, 64, 64,  0x0, { 0x0,0xc4300,},_sym720, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym718_operands,0,0,0, 0,&_sym719,0,{}, 0,0,0,0,0,68, },
// sub_s_gX_Is16_sp_sp_sub    (69)
{ "sub_s_gX_Is16_sp_sp_sub", 0, 25, 64,  0x0, { 0 },_sym4459, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym4455_operands,_sym4458,1,0, 0,&_sym4456,0,{}, 0,0,0,0,0,72, },
// sub_z_gX_Iu16_sp_sp_sub    (70)
{ "sub_z_gX_Iu16_sp_sp_sub", 0, 25, 64,  0x0, { 0 },_sym3023, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym3019_operands,_sym3022,1,0, 0,&_sym3020,0,{}, 0,0,0,0,0,71, },
// sub_z_gX_Iu16_sp_sp_sub    (71)
{ "sub_z_gX_Iu16_sp_sp_sub", 0, 25, 64,  0x0, { 0 },_sym4499, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym4495_operands,_sym4498,1,0, 0,&_sym4496,0,{}, 0,0,0,0,0,71, },
// sub_s_gX_Is16_sp_sp_sub    (72)
{ "sub_s_gX_Is16_sp_sp_sub", 0, 25, 64,  0x0, { 0 },_sym2983, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym2979_operands,_sym2982,1,0, 0,&_sym2980,0,{}, 0,0,0,0,0,72, },
// sub_z_gX_Iu16_sp_sub    (73)
{ "sub_z_gX_Iu16_sp_sub", 0, 25, 64,  0x0, { 0 },_sym3028, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3024_operands,_sym3027,1,0, 0,&_sym3025,0,{}, 0,0,0,0,0,76, },
// sub_s_gX_Is16_sp_sub    (74)
{ "sub_s_gX_Is16_sp_sub", 0, 25, 64,  0x0, { 0 },_sym4464, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym4460_operands,_sym4463,1,0, 0,&_sym4461,0,{}, 0,0,0,0,0,75, },
// sub_s_gX_Is16_sp_sub    (75)
{ "sub_s_gX_Is16_sp_sub", 0, 25, 64,  0x0, { 0 },_sym2988, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym2984_operands,_sym2987,1,0, 0,&_sym2985,0,{}, 0,0,0,0,0,75, },
// sub_z_gX_Iu16_sp_sub    (76)
{ "sub_z_gX_Iu16_sp_sub", 0, 25, 64,  0x0, { 0 },_sym4504, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym4500_operands,_sym4503,1,0, 0,&_sym4501,0,{}, 0,0,0,0,0,76, },
};

// Instructions named 'sub.s'.
static struct adl_opcode _sym4714[] = {
  // sub_s_gX_Is16_gX    (0)
  { "sub_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym2962, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2957_operands,_sym2960,1,0, 0,&_sym2958,0,{}, 0,0,_sym2961_argchecker,0,0,1, },
// sub_s_gX_Is16_gX    (1)
{ "sub_s_gX_Is16_gX", 0, 25, 64,  0x0, { 0 },_sym4438, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4433_operands,_sym4436,1,0, 0,&_sym4434,0,{}, 0,0,_sym4437_argchecker,0,0,1, },
// sub_s_gX_Is16    (2)
{ "sub_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xc8000000,},_sym2956, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2954_operands,0,0,0, 0,&_sym2955,0,{}, 0,0,0,0,0,3, },
// sub_s_gX_Is16    (3)
{ "sub_s_gX_Is16", 3, 25, 64,  0x0, { 0x0,0xc8000000,},_sym4432, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4430_operands,0,0,0, 0,&_sym4431,0,{}, 0,0,0,0,0,3, },
// sub_s_gX_Is16_sp_sp    (4)
{ "sub_s_gX_Is16_sp_sp", 0, 25, 64,  0x0, { 0 },_sym2978, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym2974_operands,_sym2977,1,0, 0,&_sym2975,0,{}, 0,0,0,0,0,5, },
// sub_s_gX_Is16_sp_sp    (5)
{ "sub_s_gX_Is16_sp_sp", 0, 25, 64,  0x0, { 0 },_sym4454, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym4450_operands,_sym4453,1,0, 0,&_sym4451,0,{}, 0,0,0,0,0,5, },
// sub_s_gX_Is16_sp    (6)
{ "sub_s_gX_Is16_sp", 0, 25, 64,  0x0, { 0 },_sym2973, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym2969_operands,_sym2972,1,0, 0,&_sym2970,0,{}, 0,0,0,0,0,7, },
// sub_s_gX_Is16_sp    (7)
{ "sub_s_gX_Is16_sp", 0, 25, 64,  0x0, { 0 },_sym4449, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym4445_operands,_sym4448,1,0, 0,&_sym4446,0,{}, 0,0,0,0,0,7, },
};

// Instructions named 'sub.z'.
static struct adl_opcode _sym4715[] = {
  // sub_z_gX_Iu16_gX    (0)
  { "sub_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym3002, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym2997_operands,_sym3000,1,0, 0,&_sym2998,0,{}, 0,0,_sym3001_argchecker,0,0,1, },
// sub_z_gX_Iu16_gX    (1)
{ "sub_z_gX_Iu16_gX", 0, 25, 64,  0x0, { 0 },_sym4478, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4473_operands,_sym4476,1,0, 0,&_sym4474,0,{}, 0,0,_sym4477_argchecker,0,0,1, },
// sub_z_gX_Iu16    (2)
{ "sub_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xc0000000,},_sym2996, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym2994_operands,0,0,0, 0,&_sym2995,0,{}, 0,0,0,0,0,3, },
// sub_z_gX_Iu16    (3)
{ "sub_z_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0xc0000000,},_sym4472, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4470_operands,0,0,0, 0,&_sym4471,0,{}, 0,0,0,0,0,3, },
// sub_z_gX_Iu16_sp_sp    (4)
{ "sub_z_gX_Iu16_sp_sp", 0, 25, 64,  0x0, { 0 },_sym3018, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym3014_operands,_sym3017,1,0, 0,&_sym3015,0,{}, 0,0,0,0,0,5, },
// sub_z_gX_Iu16_sp_sp    (5)
{ "sub_z_gX_Iu16_sp_sp", 0, 25, 64,  0x0, { 0 },_sym4494, "^ *sp,sp,([^},[,, ]+)$", 0, 1, 1, 0, 0, _sym4490_operands,_sym4493,1,0, 0,&_sym4491,0,{}, 0,0,0,0,0,5, },
// sub_z_gX_Iu16_sp    (6)
{ "sub_z_gX_Iu16_sp", 0, 25, 64,  0x0, { 0 },_sym3013, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym3009_operands,_sym3012,1,0, 0,&_sym3010,0,{}, 0,0,0,0,0,7, },
// sub_z_gX_Iu16_sp    (7)
{ "sub_z_gX_Iu16_sp", 0, 25, 64,  0x0, { 0 },_sym4489, "^ *sp,([^},[, ]+)$", 0, 1, 1, 0, 0, _sym4485_operands,_sym4488,1,0, 0,&_sym4486,0,{}, 0,0,0,0,0,7, },
};

// Instructions named 'swbreak'.
static struct adl_opcode _sym4716[] = {
  // swbreak    (0)
  { "swbreak", 0, 2, 64,  0x0, { 0x0,0xc0000000,},_sym1374, "$", 0, 0, 0, 0, 0, _sym1372_operands,0,0,0, 0,&_sym1373,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'swbreak_lower'.
static struct adl_opcode _sym4717[] = {
  // swbreak_lower    (0)
  { "swbreak_lower", 0, 2, 64,  0x0, { 0x0,0x40000000,},_sym1377, "$", 0, 0, 0, 0, 0, _sym1375_operands,0,0,0, 0,&_sym1376,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'swbreak_upper'.
static struct adl_opcode _sym4718[] = {
  // swbreak_upper    (0)
  { "swbreak_upper", 0, 2, 64,  0x0, { 0x0,0x80000000,},_sym1380, "$", 0, 0, 0, 0, 0, _sym1378_operands,0,0,0, 0,&_sym1379,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.even'.
static struct adl_opcode _sym4719[] = {
  // wr_even_fft7_fft2_wr_even    (0)
  { "wr_even_fft7_fft2_wr_even", 0, 3, 64,  0x0, { 0 },_sym1462, "$", 0, 0, 0, 0, 0, _sym1458_operands,_sym1461,1,0, 0,&_sym1459,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.even.fft7.fft2'.
static struct adl_opcode _sym4720[] = {
  // wr_even_fft7_fft2    (0)
  { "wr_even_fft7_fft2", 0, 3, 64,  0x0, { 0x0,0xe0000000,},_sym1457, "$", 0, 0, 0, 0, 0, _sym1455_operands,0,0,0, 0,&_sym1456,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fft1'.
static struct adl_opcode _sym4721[] = {
  // wr_fftn_fft1_wr_fft1    (0)
  { "wr_fftn_fft1_wr_fft1", 0, 3, 64,  0x0, { 0 },_sym1486, "$", 0, 0, 0, 0, 0, _sym1482_operands,_sym1485,1,0, 0,&_sym1483,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fft2'.
static struct adl_opcode _sym4722[] = {
  // wr_even_fft7_fft2_wr_fft2    (0)
  { "wr_even_fft7_fft2_wr_fft2", 0, 3, 64,  0x0, { 0 },_sym1467, "$", 0, 0, 0, 0, 0, _sym1463_operands,_sym1466,1,0, 0,&_sym1464,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fft3'.
static struct adl_opcode _sym4723[] = {
  // wr_fft3    (0)
  { "wr_fft3", 0, 3, 64,  0x0, { 0x0,0xc0000000,},_sym1475, "$", 0, 0, 0, 0, 0, _sym1473_operands,0,0,0, 0,&_sym1474,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fft4'.
static struct adl_opcode _sym4724[] = {
  // wr_fft4    (0)
  { "wr_fft4", 0, 3, 64,  0x0, { 0x0,0xa0000000,},_sym1478, "$", 0, 0, 0, 0, 0, _sym1476_operands,0,0,0, 0,&_sym1477,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fft5'.
static struct adl_opcode _sym4725[] = {
  // wr_fn_fft5_wr_fft5    (0)
  { "wr_fn_fft5_wr_fft5", 0, 3, 64,  0x0, { 0 },_sym1512, "$", 0, 0, 0, 0, 0, _sym1508_operands,_sym1511,1,0, 0,&_sym1509,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fft6'.
static struct adl_opcode _sym4726[] = {
  // wr_fn1_fft6_wr_fft6    (0)
  { "wr_fn1_fft6_wr_fft6", 0, 3, 64,  0x0, { 0 },_sym1499, "$", 0, 0, 0, 0, 0, _sym1495_operands,_sym1498,1,0, 0,&_sym1496,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fft7'.
static struct adl_opcode _sym4727[] = {
  // wr_even_fft7_fft2_wr_fft7    (0)
  { "wr_even_fft7_fft2_wr_fft7", 0, 3, 64,  0x0, { 0 },_sym1472, "$", 0, 0, 0, 0, 0, _sym1468_operands,_sym1471,1,0, 0,&_sym1469,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fftn'.
static struct adl_opcode _sym4728[] = {
  // wr_fftn_fft1_wr_fftn    (0)
  { "wr_fftn_fft1_wr_fftn", 0, 3, 64,  0x0, { 0 },_sym1491, "$", 0, 0, 0, 0, 0, _sym1487_operands,_sym1490,1,0, 0,&_sym1488,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fftn.fft1'.
static struct adl_opcode _sym4729[] = {
  // wr_fftn_fft1    (0)
  { "wr_fftn_fft1", 0, 3, 64,  0x0, { 0x0,0x40000000,},_sym1481, "$", 0, 0, 0, 0, 0, _sym1479_operands,0,0,0, 0,&_sym1480,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fn'.
static struct adl_opcode _sym4730[] = {
  // wr_fn_fft5_wr_fn    (0)
  { "wr_fn_fft5_wr_fn", 0, 3, 64,  0x0, { 0 },_sym1517, "$", 0, 0, 0, 0, 0, _sym1513_operands,_sym1516,1,0, 0,&_sym1514,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fn.fft5'.
static struct adl_opcode _sym4731[] = {
  // wr_fn_fft5    (0)
  { "wr_fn_fft5", 0, 3, 64,  0x0, { 0x0,0x80000000,},_sym1507, "$", 0, 0, 0, 0, 0, _sym1505_operands,0,0,0, 0,&_sym1506,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fn1'.
static struct adl_opcode _sym4732[] = {
  // wr_fn1_fft6_wr_fn1    (0)
  { "wr_fn1_fft6_wr_fn1", 0, 3, 64,  0x0, { 0 },_sym1504, "$", 0, 0, 0, 0, 0, _sym1500_operands,_sym1503,1,0, 0,&_sym1501,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.fn1.fft6'.
static struct adl_opcode _sym4733[] = {
  // wr_fn1_fft6    (0)
  { "wr_fn1_fft6", 0, 3, 64,  0x0, { 0x0,0x60000000,},_sym1494, "$", 0, 0, 0, 0, 0, _sym1492_operands,0,0,0, 0,&_sym1493,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'wr.normal'.
static struct adl_opcode _sym4734[] = {
  // wr_normal    (0)
  { "wr_normal", 0, 3, 64,  0x0, { 0x0,0x20000000,},_sym1520, "$", 0, 0, 0, 0, 0, _sym1518_operands,0,0,0, 0,&_sym1519,0,{}, 0,0,0,0,0,-1, },
};

// Instructions named 'xor'.
static struct adl_opcode _sym4735[] = {
  // xor_cc_gZ_gY_gX    (0)
  { "xor_cc_gZ_gY_gX", 3, 25, 64,  0x0, { 0x0,0x39000000,},_sym3036, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym3034_operands,0,0,1, 0,&_sym3035,0,{}, 0,0,0,0,0,1, },
  // xor_cc_gZ_gY_gX    (1)
  { "xor_cc_gZ_gY_gX", 3, 25, 64,  0x0, { 0x0,0x39000000,},_sym4512, "^ *(\\.al|\\.cs|\\.lo|\\.vs|\\.hi|\\.eq|\\.ge|\\.gt|\\.pl|\\.mi|\\.le|\\.lt|\\.ne|\\.ls|\\.vc|\\.cc|\\.hs|\\.nv)? (g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 4, 4, 0, 1, _sym4510_operands,0,0,1, 0,&_sym4511,0,{}, 0,0,0,0,0,1, },
  // xor_gX_gX_Iu16    (2)
  { "xor_gX_gX_Iu16", 0, 25, 64,  0x0, { 0 },_sym3045, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym3040_operands,_sym3043,1,0, 0,&_sym3041,0,{}, 0,0,_sym3044_argchecker,0,0,3, },
// xor_gX_gX_Iu16    (3)
{ "xor_gX_gX_Iu16", 0, 25, 64,  0x0, { 0 },_sym4521, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym4516_operands,_sym4519,1,0, 0,&_sym4517,0,{}, 0,0,_sym4520_argchecker,0,0,3, },
// xor_gX_Iu16    (4)
{ "xor_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x28000000,},_sym3039, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym3037_operands,0,0,0, 0,&_sym3038,0,{}, 0,0,0,0,0,5, },
// xor_gX_Iu16    (5)
{ "xor_gX_Iu16", 3, 25, 64,  0x0, { 0x0,0x28000000,},_sym4515, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym4513_operands,0,0,0, 0,&_sym4514,0,{}, 0,0,0,0,0,5, },
};

// Instructions named 'xorl'.
static struct adl_opcode _sym4736[] = {
  // xorl_gX_Iu32_xorl_gX_gX_Iu32    (0)
  { "xorl_gX_Iu32_xorl_gX_gX_Iu32", 0, 64, 64,  0x0, { 0 },_sym735, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[,, ]+)$", 0, 3, 3, 0, 0, _sym730_operands,_sym733,1,0, 0,&_sym731,0,{}, 0,0,_sym734_argchecker,0,0,0, },
// xorl_gX_Iu32    (1)
{ "xorl_gX_Iu32", 8, 64, 64,  0x0, { 0x0,0xc4d00,},_sym729, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11),([^},[, ]+)$", 0, 2, 2, 0, 0, _sym727_operands,0,0,0, 0,&_sym728,0,{}, 0,0,0,0,0,1, },
};

// Instructions named 'xtrm'.
static struct adl_opcode _sym4737[] = {
  // xtrm_aX_gY    (0)
  { "xtrm_aX_gY", 1, 15, 64,  0x0, { 0x0,0xf9800000,},_sym1356, "^ *(a0|a1|a2|a3),(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 2, 2, 0, 0, _sym1354_operands,0,0,0, 0,&_sym1355,0,{}, 0,0,0,0,0,-1, },
  // xtrm_aX    (1)
  { "xtrm_aX", 1, 15, 64,  0x0, { 0x0,0xf9000000,},_sym1353, "^ *(a0|a1|a2|a3)$", 0, 1, 1, 0, 0, _sym1351_operands,0,0,0, 0,&_sym1352,0,{}, 0,0,0,0,0,-1, },
  // xtrm_gY    (2)
  { "xtrm_gY", 1, 15, 64,  0x0, { 0x0,0xf8800000,},_sym1359, "^ *(g0|g1|g2|g3|g4|g5|g6|g7|g8|g9|g10|g11)$", 0, 1, 1, 0, 0, _sym1357_operands,0,0,0, 0,&_sym1358,0,{}, 0,0,0,0,0,-1, },
};

// Instruction table.
static struct adl_instr other_instructions [] = {
  { "abs", 2, _sym4525 },
  { "add", 101, _sym4526 },
  { "add.laddr", 2, _sym4527 },
  { "add.s", 8, _sym4528 },
  { "add.z", 8, _sym4529 },
  { "adda", 2, _sym4530 },
  { "adda.laddr", 2, _sym4531 },
  { "adda_ax_is8", 1, _sym4532 },
  { "and", 60, _sym4533 },
  { "andl", 2, _sym4534 },
  { "atan", 1, _sym4535 },
  { "au_nop", 1, _sym4536 },
  { "bclr", 2, _sym4537 },
  { "bin2num", 1, _sym4538 },
  { "btst", 2, _sym4539 },
  { "clr", 1, _sym4540 },
  { "clr.g", 2, _sym4541 },
  { "clr.vra", 3, _sym4542 },
  { "cmp", 28, _sym4543 },
  { "cmp.s", 4, _sym4544 },
  { "cmp.z", 4, _sym4545 },
  { "dif", 1, _sym4546 },
  { "dit", 1, _sym4547 },
  { "div", 12, _sym4548 },
  { "div.s", 6, _sym4549 },
  { "div.z", 4, _sym4550 },
  { "div_s_cc_gz_gx_gy", 2, _sym4551 },
  { "done", 1, _sym4552 },
  { "fa0to1", 1, _sym4553 },
  { "ff0to1", 2, _sym4554 },
  { "ff1", 2, _sym4555 },
  { "ff1to0", 2, _sym4556 },
  { "fix2float", 1, _sym4557 },
  { "float2fix", 1, _sym4558 },
  { "floatx2n", 4, _sym4559 },
  { "fnop", 1, _sym4560 },
  { "fns", 2, _sym4561 },
  { "jmp", 4, _sym4562 },
  { "jsr", 4, _sym4563 },
  { "ld", 47, _sym4564 },
  { "ld.br", 1, _sym4565 },
  { "ld.h2h", 1, _sym4566 },
  { "ld.h2l", 1, _sym4567 },
  { "ld.h2l_l2h", 1, _sym4568 },
  { "ld.l2h", 1, _sym4569 },
  { "ld.l2h_h2l", 1, _sym4570 },
  { "ld.l2l", 1, _sym4571 },
  { "ld.laddr", 10, _sym4572 },
  { "ld.laddr.u", 4, _sym4573 },
  { "ld.normal", 1, _sym4574 },
  { "ld.qam", 1, _sym4575 },
  { "ld.replace_h", 1, _sym4576 },
  { "ld.replace_l", 1, _sym4577 },
  { "ld.u", 29, _sym4578 },
  { "ld.u.br", 1, _sym4579 },
  { "ld_ax_is8_u", 1, _sym4580 },
  { "ld_gy_ax_is8_u", 2, _sym4581 },
  { "ld_gy_ax_u_is8", 2, _sym4582 },
  { "ld_gy_ax_u_is8_u", 2, _sym4583 },
  { "ld_h_ax_u_is8", 2, _sym4584 },
  { "ld_rx_nop", 1, _sym4585 },
  { "ld_u_gy_ax_is8_u", 2, _sym4586 },
  { "lfsr", 3, _sym4587 },
  { "log2", 2, _sym4588 },
  { "loop_begin", 1, _sym4589 },
  { "loop_end", 1, _sym4590 },
  { "loop_stop", 1, _sym4591 },
  { "lsb2rf", 1, _sym4592 },
  { "lsb2rf.sr", 1, _sym4593 },
  { "mac", 1, _sym4594 },
  { "mad", 1, _sym4595 },
  { "mad_dit", 1, _sym4596 },
  { "mads", 1, _sym4597 },
  { "maf", 1, _sym4598 },
  { "mod", 12, _sym4599 },
  { "mod.s", 6, _sym4600 },
  { "mod.z", 4, _sym4601 },
  { "mod_s_cc_gz_gx_gy", 2, _sym4602 },
  { "mpy", 12, _sym4603 },
  { "mpy.s", 6, _sym4604 },
  { "mpy.z", 4, _sym4605 },
  { "mpy_s_cc_gz_gx_gy", 2, _sym4606 },
  { "mv", 69, _sym4607 },
  { "mv.h", 3, _sym4608 },
  { "mv.ocram", 1, _sym4609 },
  { "mv.s", 4, _sym4610 },
  { "mv.w", 4, _sym4611 },
  { "mv.z", 4, _sym4612 },
  { "mvb", 2, _sym4613 },
  { "mvip", 3, _sym4614 },
  { "mvs", 4, _sym4615 },
  { "nop", 2, _sym4616 },
  { "not", 2, _sym4617 },
  { "null", 2, _sym4618 },
  { "opa_nop", 1, _sym4619 },
  { "opb_nop", 1, _sym4620 },
  { "ops_nop", 2, _sym4621 },
  { "opx_nop", 1, _sym4622 },
  { "opxabvz", 1, _sym4623 },
  { "opxssz", 1, _sym4624 },
  { "opxsvz", 1, _sym4625 },
  { "opz_nop", 1, _sym4626 },
  { "or", 8, _sym4627 },
  { "orl", 2, _sym4628 },
  { "pop", 2, _sym4629 },
  { "popm", 4, _sym4630 },
  { "push", 3, _sym4631 },
  { "pushm", 4, _sym4632 },
  { "rcp", 1, _sym4633 },
  { "rcp.e", 1, _sym4634 },
  { "rd", 3, _sym4635 },
  { "rd_s0_nop", 1, _sym4636 },
  { "rd_s1_nop", 1, _sym4637 },
  { "rd_s2_nop", 1, _sym4638 },
  { "rdiv", 8, _sym4639 },
  { "rdiv.s", 4, _sym4640 },
  { "rdiv.z", 4, _sym4641 },
  { "rmod", 8, _sym4642 },
  { "rmod.s", 4, _sym4643 },
  { "rmod.z", 4, _sym4644 },
  { "rot_nop", 1, _sym4645 },
  { "rrot", 1, _sym4646 },
  { "rrt", 1, _sym4647 },
  { "rrt.e", 1, _sym4648 },
  { "rsub", 12, _sym4649 },
  { "rsub.s", 6, _sym4650 },
  { "rsub.z", 6, _sym4651 },
  { "rts", 1, _sym4652 },
  { "set.br", 1, _sym4653 },
  { "set.cgu", 1, _sym4654 },
  { "set.creg", 2, _sym4655 },
  { "set.loop", 6, _sym4656 },
  { "set.nco", 1, _sym4657 },
  { "set.prec", 1, _sym4658 },
  { "set.range", 2, _sym4659 },
  { "set.rrot", 1, _sym4660 },
  { "set.smode", 19, _sym4661 },
  { "set.vraincr", 6, _sym4662 },
  { "set.vrapg", 8, _sym4663 },
  { "set.vraptr", 11, _sym4664 },
  { "set.vrarange1", 5, _sym4665 },
  { "set.vrarange2", 5, _sym4666 },
  { "set.xtrm", 1, _sym4667 },
  { "set_loop_asx_i", 1, _sym4668 },
  { "set_loop_i", 1, _sym4669 },
  { "set_loop_i_i", 1, _sym4670 },
  { "set_nco", 1, _sym4671 },
  { "set_range1_rs0_iu22", 1, _sym4672 },
  { "set_range1_rs1_iu22", 1, _sym4673 },
  { "set_range1_rs2_iu22", 1, _sym4674 },
  { "set_range1_rst_iu22", 1, _sym4675 },
  { "set_range1_rv_iu22", 1, _sym4676 },
  { "set_range2_rs0_iu22", 1, _sym4677 },
  { "set_range2_rs1_iu22", 1, _sym4678 },
  { "set_range2_rs2_iu22", 1, _sym4679 },
  { "set_range2_rst_iu22", 1, _sym4680 },
  { "set_range2_rv_iu22", 1, _sym4681 },
  { "set_xtrm", 1, _sym4682 },
  { "seta.vrapg", 4, _sym4683 },
  { "seta.vraptr", 5, _sym4684 },
  { "setb.vrapg", 4, _sym4685 },
  { "setb.vraptr", 5, _sym4686 },
  { "sl", 4, _sym4687 },
  { "sr", 4, _sym4688 },
  { "srt", 1, _sym4689 },
  { "srt.e", 1, _sym4690 },
  { "st", 65, _sym4691 },
  { "st.h", 1, _sym4692 },
  { "st.laddr", 16, _sym4693 },
  { "st.laddr.u", 4, _sym4694 },
  { "st.laddr.w", 2, _sym4695 },
  { "st.s", 1, _sym4696 },
  { "st.u", 16, _sym4697 },
  { "st.w", 3, _sym4698 },
  { "st.w.br", 1, _sym4699 },
  { "st.w.u", 1, _sym4700 },
  { "st.w.u.br", 1, _sym4701 },
  { "st_a0_is8_u", 1, _sym4702 },
  { "st_a1_is8_u", 1, _sym4703 },
  { "st_a2_is8_u", 1, _sym4704 },
  { "st_a3_is8_u", 1, _sym4705 },
  { "st_au_st_sau_nop", 1, _sym4706 },
  { "st_ay_is8_u_gx", 2, _sym4707 },
  { "st_ay_u_is8_gx", 2, _sym4708 },
  { "st_ay_u_is8_h", 2, _sym4709 },
  { "st_ay_u_is8_u_gx", 2, _sym4710 },
  { "st_u_ay_is8_u_gx", 2, _sym4711 },
  { "st_w_ax_is8_u", 1, _sym4712 },
  { "sub", 77, _sym4713 },
  { "sub.s", 8, _sym4714 },
  { "sub.z", 8, _sym4715 },
  { "swbreak", 1, _sym4716 },
  { "swbreak_lower", 1, _sym4717 },
  { "swbreak_upper", 1, _sym4718 },
  { "wr.even", 1, _sym4719 },
  { "wr.even.fft7.fft2", 1, _sym4720 },
  { "wr.fft1", 1, _sym4721 },
  { "wr.fft2", 1, _sym4722 },
  { "wr.fft3", 1, _sym4723 },
  { "wr.fft4", 1, _sym4724 },
  { "wr.fft5", 1, _sym4725 },
  { "wr.fft6", 1, _sym4726 },
  { "wr.fft7", 1, _sym4727 },
  { "wr.fftn", 1, _sym4728 },
  { "wr.fftn.fft1", 1, _sym4729 },
  { "wr.fn", 1, _sym4730 },
  { "wr.fn.fft5", 1, _sym4731 },
  { "wr.fn1", 1, _sym4732 },
  { "wr.fn1.fft6", 1, _sym4733 },
  { "wr.normal", 1, _sym4734 },
  { "xor", 6, _sym4735 },
  { "xorl", 2, _sym4736 },
  { "xtrm", 3, _sym4737 },
};

static const int num_other_instructions = 213;

static const struct adl_name_pair ppc_regnames[] = {
  {"a0",0},
  {"a1",1},
  {"a2",2},
  {"a3",3},
  {"as0",0},
  {"as1",1},
  {"as2",2},
  {"as3",3},
  {"as4",4},
  {"as5",5},
  {"as6",6},
  {"as7",7},
  {"as8",8},
  {"as9",9},
  {"as10",10},
  {"as11",11},
  {"as12",12},
  {"as13",13},
  {"as14",14},
  {"as15",15},
  {"dl_sc_x",0},
  {"dl_sc_y",1},
  {"ul_sc_x",2},
  {"ul_sc_y",3},
  {"ul_sc_short",4},
  {"ovsf_num",5},
  {"gold_x1",6},
  {"gold_x2",7},
  {"ovsf_dl_sc_y",8},
  {"ovsf_dl_sc_y_bak",9},
  {"dl_sc_x_bak",10},
  {"g0",0},
  {"g1",1},
  {"g2",2},
  {"g3",3},
  {"g4",4},
  {"g5",5},
  {"g6",6},
  {"g7",7},
  {"g8",8},
  {"g9",9},
  {"g10",10},
  {"g11",11},
  {"nco_freq",0},
  {"nco_phase",1},
  {"nco_k",3},
  {"sp",0},
  {"cc",1},
  {"rem",2},
  {"h",3},
  {"rs0",4},
  {"rs1",5},
  {"rs2",6},
  {"rv",7},
  {"rst",8},
  {"normal",0},
  {"singles",1},
  {"radix2",2},
  {"half_fixed",0},
  {"half",1},
  {"single",2},
  {"_double",3},
  {"s2nop",0},
  {"s2normal",1},
  {"s2ones",2},
  {"s2fft4",3},
  {"s2zeros",4},
  {"s2fft5",5},
  {"s2coef1",6},
  {"s2fftn",7},
  {"s2fft3",8},
  {"s2fft2",9},
  {"s2fft1",10},
  {"s1nop",11},
  {"s1normal",12},
  {"s1udfc",13},
  {"s1cgu_udfc",14},
  {"s1straight",15},
  {"s1udfr",16},
  {"s1cgu_normal",17},
  {"s1ones",18},
  {"s1r2c",19},
  {"s1r2c_conj",20},
  {"s1conj",21},
  {"s1nco",22},
  {"s1r2c_im0",23},
  {"s1cgu_r2c_im0",24},
  {"s1r2c_re0",25},
  {"s1cgu_r2c_re0",26},
  {"s1reverse",27},
  {"s0nop",28},
  {"s0normal",29},
  {"s0singles",30},
  {"s0coef1",31},
  {"s0coef2",32},
  {"s0straight",33},
  {"s0ones",34},
  {"s0fft4",35},
  {"s0zeros",36},
  {"s0fft5",37},
  {"s0fftn",38},
  {"s0fft3",39},
  {"s0fft2",40},
  {"s0fft1",41},
  {"s0abs",42},
  {"s0pad0",43},
  {"s0pad1",44},
  {"s0chs",45},
  {"s0conj",46},
  {"R0",0},
  {"R1",1},
  {"R2",2},
  {"R3",3},
  {"R4",4},
  {"R5",5},
  {"R6",6},
  {"R7",7},
};

static const int num_ppc_regnames = 117;

static const char *ppc_itnames[] = {
  "default",
};


static reloc_howto_type ppc_elf_howto_table[] = {
  HOWTO(17,2,3,17,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_IPPU_DMEM_17",0,0,0,0), // relocation R_IPPU_DMEM_17 (R_IPPU_DMEM_17)
  HOWTO(16,2,1,16,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_IPPU_PRAM_16",0,0,0,0), // relocation R_IPPU_PRAM_16 (R_IPPU_PRAM_16)
  HOWTO(18,0,2,32,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_OCRAM_LAB_32",0,0,0,0), // relocation R_OCRAM_LAB_32 (R_OCRAM_LAB_32)
  HOWTO(9,2,3,17,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_DMEM_17",0,0,0,0), // relocation R_VSPA_DMEM_17 (R_VSPA_DMEM_17)
  HOWTO(5,2,3,17,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_HW_HI_17",0,0,0,0), // relocation R_VSPA_HW_HI_17 (R_VSPA_HW_HI_17)
  HOWTO(4,2,3,17,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_HW_LO_17",0,0,0,0), // relocation R_VSPA_HW_LO_17 (R_VSPA_HW_LO_17)
  HOWTO(20,2,1,16,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_LAB_16",0,0,0,0), // relocation R_VSPA_LAB_16 (R_VSPA_LAB_16)
  HOWTO(13,2,3,17,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_LAB_17",0,0,0,0), // relocation R_VSPA_LAB_17 (R_VSPA_LAB_17)
  HOWTO(11,2,2,32,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_LAB_32",0,0,0,0), // relocation R_VSPA_LAB_32 (R_VSPA_LAB_32)
  HOWTO(10,3,1,10,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_PMEM_10",0,0,0,0), // relocation R_VSPA_PMEM_10 (R_VSPA_PMEM_10)
  HOWTO(8,2,3,17,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_PMEM_17",0,0,0,0), // relocation R_VSPA_PMEM_17 (R_VSPA_PMEM_17)
  HOWTO(15,2,3,17,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_SP_HI_17",0,0,0,0), // relocation R_VSPA_SP_HI_17 (R_VSPA_SP_HI_17)
  HOWTO(14,2,3,17,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_SP_LO_17",0,0,0,0), // relocation R_VSPA_SP_LO_17 (R_VSPA_SP_LO_17)
  HOWTO(1,0,0,8,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_8",0,0,0,0), // relocation R_VSPA_8 (_1byte)
  HOWTO(2,0,1,16,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_16",0,0,0,0), // relocation R_VSPA_16 (_2byte)
  HOWTO(3,0,2,32,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_32",0,0,0,0), // relocation R_VSPA_32 (_4byte)
  HOWTO(12,2,2,32,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_VSPA_LAB_IND_32",0,0,0,0), // relocation R_VSPA_LAB_IND_32 (_word)
  HOWTO(19,0,2,32,0,0,complain_overflow_dont,bfd_elf_generic_reloc,"R_OCRAM_LAB_IND_32",0,0,0,0), // relocation R_OCRAM_LAB_IND_32 (_word_ocram_sym_)
  EMPTY_HOWTO(-1)
};

static unsigned num_ppc_elf_howtos = 19;

// Relocations ordered by name, for fast name -> type searches.
static struct adl_name_pair ppc_relocs_by_index [] = {
   { "R_IPPU_DMEM_17", 0 }, // R_IPPU_DMEM_17
   { "R_IPPU_PRAM_16", 1 }, // R_IPPU_PRAM_16
   { "R_OCRAM_LAB_32", 2 }, // R_OCRAM_LAB_32
   { "R_VSPA_DMEM_17", 3 }, // R_VSPA_DMEM_17
   { "R_VSPA_HW_HI_17", 4 }, // R_VSPA_HW_HI_17
   { "R_VSPA_HW_LO_17", 5 }, // R_VSPA_HW_LO_17
   { "R_VSPA_LAB_16", 6 }, // R_VSPA_LAB_16
   { "R_VSPA_LAB_17", 7 }, // R_VSPA_LAB_17
   { "R_VSPA_LAB_32", 8 }, // R_VSPA_LAB_32
   { "R_VSPA_PMEM_10", 9 }, // R_VSPA_PMEM_10
   { "R_VSPA_PMEM_17", 10 }, // R_VSPA_PMEM_17
   { "R_VSPA_SP_HI_17", 11 }, // R_VSPA_SP_HI_17
   { "R_VSPA_SP_LO_17", 12 }, // R_VSPA_SP_LO_17
   { "_1byte", 13 }, // R_VSPA_8
   { "_2byte", 14 }, // R_VSPA_16
   { "_4byte", 15 }, // R_VSPA_32
   { "_word", 16 }, // R_VSPA_LAB_IND_32
   { "_word_ocram_sym_", 17 }, // R_OCRAM_LAB_IND_32
};

static const int num_ppc_relocs_by_index = 18;


// Relocation offsets.
static struct adl_int_pair ppc_reloc_offsets [] = {
   { 17,4 }, // R_IPPU_DMEM_17
   { 16,4 }, // R_IPPU_PRAM_16
   { 18,2 }, // R_OCRAM_LAB_32
   { 9,19 }, // R_VSPA_DMEM_17
   { 5,31 }, // R_VSPA_HW_HI_17
   { 4,6 }, // R_VSPA_HW_LO_17
   { 20,2 }, // R_VSPA_LAB_16
   { 13,20 }, // R_VSPA_LAB_17
   { 11,2 }, // R_VSPA_LAB_32
   { 10,30 }, // R_VSPA_PMEM_10
   { 8,20 }, // R_VSPA_PMEM_17
   { 15,27 }, // R_VSPA_SP_HI_17
   { 14,2 }, // R_VSPA_SP_LO_17
   { 1,0 }, // R_VSPA_8
   { 2,0 }, // R_VSPA_16
   { 3,0 }, // R_VSPA_32
   { 12,0 }, // R_VSPA_LAB_IND_32
   { 19,0 }, // R_OCRAM_LAB_IND_32
};

static const int num_ppc_reloc_offsets = 18;

static const char *instr_names[] = {
  "abs",
  "add",
  "add.laddr",
  "add.s",
  "add.z",
  "adda",
  "adda.laddr",
  "adda_ax_is8",
  "and",
  "andl",
  "atan",
  "au_nop",
  "bclr",
  "bin2num",
  "btst",
  "clr",
  "clr.g",
  "clr.vra",
  "cmp",
  "cmp.s",
  "cmp.z",
  "dif",
  "dit",
  "div",
  "div.s",
  "div.z",
  "div_s_cc_gz_gx_gy",
  "done",
  "fa0to1",
  "ff0to1",
  "ff1",
  "ff1to0",
  "fix2float",
  "float2fix",
  "floatx2n",
  "fnop",
  "fns",
  "jmp",
  "jsr",
  "ld",
  "ld.br",
  "ld.h2h",
  "ld.h2l",
  "ld.h2l_l2h",
  "ld.l2h",
  "ld.l2h_h2l",
  "ld.l2l",
  "ld.laddr",
  "ld.laddr.u",
  "ld.normal",
  "ld.qam",
  "ld.replace_h",
  "ld.replace_l",
  "ld.u",
  "ld.u.br",
  "ld_ax_is8_u",
  "ld_gy_ax_is8_u",
  "ld_gy_ax_u_is8",
  "ld_gy_ax_u_is8_u",
  "ld_h_ax_u_is8",
  "ld_rx_nop",
  "ld_u_gy_ax_is8_u",
  "lfsr",
  "log2",
  "loop_begin",
  "loop_end",
  "loop_stop",
  "lsb2rf",
  "lsb2rf.sr",
  "mac",
  "mad",
  "mad_dit",
  "mads",
  "maf",
  "mod",
  "mod.s",
  "mod.z",
  "mod_s_cc_gz_gx_gy",
  "mpy",
  "mpy.s",
  "mpy.z",
  "mpy_s_cc_gz_gx_gy",
  "mv",
  "mv.h",
  "mv.ocram",
  "mv.s",
  "mv.w",
  "mv.z",
  "mvb",
  "mvip",
  "mvs",
  "nop",
  "not",
  "null",
  "opa_nop",
  "opb_nop",
  "ops_nop",
  "opx_nop",
  "opxabvz",
  "opxssz",
  "opxsvz",
  "opz_nop",
  "or",
  "orl",
  "pop",
  "popm",
  "push",
  "pushm",
  "rcp",
  "rcp.e",
  "rd",
  "rd_s0_nop",
  "rd_s1_nop",
  "rd_s2_nop",
  "rdiv",
  "rdiv.s",
  "rdiv.z",
  "rmod",
  "rmod.s",
  "rmod.z",
  "rot_nop",
  "rrot",
  "rrt",
  "rrt.e",
  "rsub",
  "rsub.s",
  "rsub.z",
  "rts",
  "set.br",
  "set.cgu",
  "set.creg",
  "set.loop",
  "set.nco",
  "set.prec",
  "set.range",
  "set.rrot",
  "set.smode",
  "set.vraincr",
  "set.vrapg",
  "set.vraptr",
  "set.vrarange1",
  "set.vrarange2",
  "set.xtrm",
  "set_loop_asx_i",
  "set_loop_i",
  "set_loop_i_i",
  "set_nco",
  "set_range1_rs0_iu22",
  "set_range1_rs1_iu22",
  "set_range1_rs2_iu22",
  "set_range1_rst_iu22",
  "set_range1_rv_iu22",
  "set_range2_rs0_iu22",
  "set_range2_rs1_iu22",
  "set_range2_rs2_iu22",
  "set_range2_rst_iu22",
  "set_range2_rv_iu22",
  "set_xtrm",
  "seta.vrapg",
  "seta.vraptr",
  "setb.vrapg",
  "setb.vraptr",
  "sl",
  "sr",
  "srt",
  "srt.e",
  "st",
  "st.h",
  "st.laddr",
  "st.laddr.u",
  "st.laddr.w",
  "st.s",
  "st.u",
  "st.w",
  "st.w.br",
  "st.w.u",
  "st.w.u.br",
  "st_a0_is8_u",
  "st_a1_is8_u",
  "st_a2_is8_u",
  "st_a3_is8_u",
  "st_au_st_sau_nop",
  "st_ay_is8_u_gx",
  "st_ay_u_is8_gx",
  "st_ay_u_is8_h",
  "st_ay_u_is8_u_gx",
  "st_u_ay_is8_u_gx",
  "st_w_ax_is8_u",
  "sub",
  "sub.s",
  "sub.z",
  "swbreak",
  "swbreak_lower",
  "swbreak_upper",
  "wr.even",
  "wr.even.fft7.fft2",
  "wr.fft1",
  "wr.fft2",
  "wr.fft3",
  "wr.fft4",
  "wr.fft5",
  "wr.fft6",
  "wr.fft7",
  "wr.fftn",
  "wr.fftn.fft1",
  "wr.fn",
  "wr.fn.fft5",
  "wr.fn1",
  "wr.fn1.fft6",
  "wr.normal",
  "xor",
  "xorl",
  "xtrm",
};

static int num_instr_names = 213;

static const char *instr_pfx_fields[] = {
   0 };

static int num_instr_pfx_fields = 0;

//
// Helper code.
//

 uint32_t im112im22 ( uint32_t u11 , uint32_t v11 ) {
       int current_position = 0 ;
      if ( AU_NUM < 32 ) {
            if ( u11 > 511 || v11 > 511 ) {
                  { std::ostringstream ss; ss    <<  "Invalid operand: "  <<  u11  <<  v11 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
              }
            return ( ( u11 << 13 ) | ( v11 << 3 ) ) & 0x3FFFFF ;
        } else {
            return ( ( u11 << 11 ) | v11 ) & 0x3FFFFF ;
        }
}

 uint32_t im15n2im8n ( uint32_t u15 ) {
       int current_position = 0 ;
      if ( u15 > 128 * 2 * AU_NUM ) {
            { std::ostringstream ss; ss    <<  "Invalid operand: "  <<  u15 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
        }
      if ( u15 > 128 && ( ( u15 % ( AU_NUM * 2 ) ) != 0 ) ) {
            { std::ostringstream ss; ss    <<  "Invalid operand: "  <<  u15 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
        }
      return ( u15 > 128 ) ? ( u15 >> log2_num_elem_per_line_as ( AU_NUM , 32 ) ) : u15 ;
}

 uint32_t im15n2line ( uint32_t u15 ) {
       int current_position = 0 ;
      if ( u15 > 128 * 2 * AU_NUM ) {
            { std::ostringstream ss; ss    <<  "Invalid operand: "  <<  u15 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
        }
      return ( u15 > 128 ) ? 1 : 0 ;
}

 uint32_t im15s2im8s ( uint32_t u15 ) {
       int current_position = 0 ;
       uint32_t mask = 1 << 14 ;
       int32_t i15 = ( ( u15 & ( mask ) ) == 0 ) ? ( int32_t  ) ( u15 & ( mask - 1 ) ) : ( int32_t  ) ( u15 | ~ ( mask - 1 ) ) ;
      if ( i15 > 127 || i15 < - 128 ) {
            if ( ( i15 > ( int32_t  ) ( 127 * 2 * AU_NUM ) ) || ( i15 < ( int32_t  ) ( - 128 * 2 * AU_NUM ) ) || ( ( i15 % ( ( int32_t  ) ( 2 * AU_NUM ) ) ) != 0 ) ) {
                  { std::ostringstream ss; ss    <<  "Invalid operand: "  <<  i15 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
              }
            return ( uint32_t  ) ( i15 >> log2_num_elem_per_line_as ( AU_NUM , 32 ) ) ;
        } else {
            return ( uint32_t  ) i15 ;
        }
}

 uint32_t im15s2line ( uint32_t u15 ) {
       int current_position = 0 ;
       uint32_t mask = 1 << 14 ;
       int32_t i15 = ( ( u15 & ( mask ) ) == 0 ) ? ( int32_t  ) ( u15 & ( mask - 1 ) ) : ( int32_t  ) ( u15 | ~ ( mask - 1 ) ) ;
      return ( i15 > 127 || i15 < - 128 ) ? 1 : 0 ;
}

 uint32_t log2_fun_as ( uint32_t num ) {
       int current_position = 0 ;
      if ( ( ( num % 2 ) != 0 ) || ( num < 1 ) || ( num > 512 ) ) {
            { std::ostringstream ss; ss    <<  "Invalid log2() argument: "  <<  num ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
        }
      static const unsigned char log2_table [ 16 ] = {
            0
            ,
            1
            ,
            1
            ,
            2
            ,
            2
            ,
            2
            ,
            2
            ,
            3
            ,
            3
            ,
            3
            ,
            3
            ,
            3
            ,
            3
            ,
            3
            ,
            3
            ,
            4
        } ;
      if ( num > 16 ) return log2_table [ num / 32 - 1 ] + 5 ; else return log2_table [ num - 1 ] ;
}

 uint32_t log2_num_elem_per_line_as ( uint32_t au_num , uint32_t elem_size ) {
       int current_position = 0 ;
      if ( ( ( au_num % 2 ) != 0 ) || ( au_num < 2 ) || ( au_num > 64 ) || ( ( elem_size % 16 ) != 0 ) || ( elem_size < 16 ) || ( elem_size > 128 ) ) {
            { std::ostringstream ss; ss    <<  "Invalid AU_NUM or element size: "  <<  au_num  <<  elem_size ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
        }
      return log2_fun_as ( au_num * 64 / elem_size ) ;
}

 uint32_t nau2bit48 (  ) {
      return ( AU_NUM > 16 ) ? 1 : 0 ;
}

 uint32_t xtrm1b ( uint32_t xtrm_n ) {
       int current_position = 0 ;
      if ( xtrm_n > ( AU_NUM * 2 ) ) {
            return 1 ;
        } else {
            return 0 ;
        }
}

 uint32_t xtrm4b ( uint32_t xtrm_n ) {
       int current_position = 0 ;
      if ( xtrm_n > AU_NUM * 2 * 16 ) {
            { std::ostringstream ss; ss    <<  "Invalid operand: "  <<  xtrm_n ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
        } else {
            if ( xtrm_n > ( AU_NUM * 2 ) ) {
                  if ( ( xtrm_n % ( AU_NUM * 2 ) ) != 0 ) {
                        { std::ostringstream ss; ss    <<  "Invalid operand: "  <<  xtrm_n ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                        return 0 ;
                    }
                  return xtrm_n / ( AU_NUM * 2 ) - 1 ;
              } else {
                  if ( ( xtrm_n < 2 ) || ( xtrm_n > 128 ) || ( xtrm_n & ( xtrm_n - 1 ) ) ) {
                        { std::ostringstream ss; ss    <<  "Invalid operand: "  <<  xtrm_n ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                    }
                  return log2_fun_as ( xtrm_n ) ;
              }
        }
}


static void post_packet_asm(adl::InstrBundle & b,int current_position ATTRIBUTE_UNUSED)
{
       adl::InstrBundle bb ;
       adl::InstrInfo ii , ii_null , ii_swbreak ;
       bool extVs0 = false , extVs1 = false , extVs2 = false , extVrot = false , extVr = false , extVd = false , extVau = false ;
       bool extA = false , extB = false , extC = false , extD = false , extZ = false , extX = false ;
       bool extFNOP = false , extLOOPEND = false , extDONE = false ;
       int extS = 0 ;
       int posA , posB , posC , posD , posS [ 2 ] , posVs0 , posVs1 , posVs2 , posVrot , posVr , posVd , posVau , posZ , posX ;
       int Size = b . size (  ) ;
       bool extFlag , formatFlag ;
      if ( ( Size < 1 ) || ( Size > 12 ) ) {
            { std::ostringstream ss; ss    <<  "Invalid instruction formation size: "  <<  Size ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
        } else {
            for (  int i = 0 ; i < Size ; ++ i ) {
                  extFlag = false ;
                  if ( b [ i ] . instrHasAttr ( instr_opA ) ) {
                        if ( extA || extC || extD || ( extS > 0 ) || extFNOP || extDONE ) {
                              { std::ostringstream ss; ss    <<  "Invalid opA instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extA = true ;
                              posA = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opB ) ) {
                        if ( extB || extC || extD || ( extS > 0 ) || extFNOP || extDONE ) {
                              { std::ostringstream ss; ss    <<  "Invalid opB instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extB = true ;
                              posB = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opC ) ) {
                        if ( extA || extB || extC || extD || ( extS > 0 ) || extFNOP || extDONE ) {
                              { std::ostringstream ss; ss    <<  "Invalid opC instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extC = true ;
                              posC = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opD ) ) {
                        if ( extA || extB || extC || extD || ( extS > 0 ) || extVs0 || extVs1 || extVs2 || extVrot || extVd || extVr || extVau || extFNOP || extDONE ) {
                              { std::ostringstream ss; ss    <<  "Invalid opD instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extD = true ;
                              posD = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opS ) ) {
                        if ( extA || extB || extC || extD || ( extS >= 2 ) || extFNOP || extDONE ) {
                              { std::ostringstream ss; ss    <<  "Invalid opS instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              posS [ extS ++ ] = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opVs0 ) ) {
                        if ( extVs0 || extFNOP || extDONE || extD ) {
                              { std::ostringstream ss; ss    <<  "Invalid opVs0 instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extVs0 = true ;
                              posVs0 = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opVs1 ) ) {
                        if ( extVs1 || extFNOP || extDONE || extD ) {
                              { std::ostringstream ss; ss    <<  "Invalid opVs1 instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extVs1 = true ;
                              posVs1 = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opVs2 ) ) {
                        if ( extVs2 || extFNOP || extDONE || extD ) {
                              { std::ostringstream ss; ss    <<  "Invalid opVs2 instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extVs2 = true ;
                              posVs2 = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opVrot ) ) {
                        if ( extVrot || extFNOP || extDONE || extD ) {
                              { std::ostringstream ss; ss    <<  "Invalid opVrot instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extVrot = true ;
                              posVrot = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opVr ) ) {
                        if ( extVr || extFNOP || extDONE || extD ) {
                              { std::ostringstream ss; ss    <<  "Invalid opVr instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extVr = true ;
                              posVr = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opVd ) ) {
                        if ( extVd || extFNOP || extDONE || extD ) {
                              { std::ostringstream ss; ss    <<  "Invalid opVd instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extVd = true ;
                              posVd = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opVau ) ) {
                        if ( extVau || extFNOP || extDONE || extD ) {
                              { std::ostringstream ss; ss    <<  "Invalid opVau instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extVau = true ;
                              posVau = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opZ ) ) {
                        if ( extZ || extDONE ) {
                              { std::ostringstream ss; ss    <<  "Invalid opZ instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extZ = true ;
                              posZ = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_opX ) ) {
                        if ( extX || extDONE ) {
                              { std::ostringstream ss; ss    <<  "Invalid opX instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extX = true ;
                              posX = i ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_fnop ) && ! b [ i ] . instrHasAttr ( instr_loop_end ) ) {
                        if ( extFNOP || extA || extB || extC || extD || ( extS > 0 ) || extDONE || extVs0 || extVs1 || extVs2 || extVrot || extVd || extVr || extVau ) {
                              { std::ostringstream ss; ss    <<  "Invalid fnop instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extFNOP = true ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_loop_end ) ) {
                        if ( extLOOPEND || extDONE ) {
                              { std::ostringstream ss; ss    <<  "Invalid loop_end instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extLOOPEND = true ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_done ) ) {
                        if ( extDONE || extA || extB || extC || extD || ( extS > 0 ) || extFNOP || extVs0 || extVs1 || extVs2 || extVrot || extVd || extVr || extVau || extLOOPEND || extZ || extX ) {
                              { std::ostringstream ss; ss    <<  "Invalid done instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                          } else {
                              extDONE = true ;
                          }
                        extFlag = true ;
                    }
                  if ( b [ i ] . instrHasAttr ( instr_jmp_jsr ) || b [ i ] . instrHasAttr ( instr_rts ) || b [ i ] . instrHasAttr ( instr_null ) || b [ i ] . instrHasAttr ( instr_loop_begin ) || b [ i ] . instrHasAttr ( instr_loop_label ) || b [ i ] . instrHasAttr ( instr_inst ) || b [ i ] . instrHasAttr ( instr_wide_imm ) || b [ i ] . instrHasAttr ( instr_opAB ) || b [ i ] . instrHasAttr ( instr_opBS ) || b [ i ] . instrHasAttr ( instr_opV ) || b [ i ] . instrHasAttr ( instr_store ) || b [ i ] . instrHasAttr ( instr_load ) || b [ i ] . instrHasAttr ( instr_loop ) || b [ i ] . instrHasAttr ( instr_ctrl ) || b [ i ] . instrHasAttr ( instr_var ) || b [ i ] . instrHasAttr ( instr_en_4au ) || b [ i ] . instrHasAttr ( instr_dis_64au_sp ) || b [ i ] . instrHasAttr ( instr_dis_all_dp ) || b [ i ] . instrHasAttr ( instr_cmp_aX_Iu17 ) || b [ i ] . instrHasAttr ( instr_dis_64au ) || b [ i ] . instrHasAttr ( instr_set_range ) || b [ i ] . instrHasAttr ( instr_set_prec ) || b [ i ] . instrHasAttr ( instr_set_vra_ptr ) || b [ i ] . instrHasAttr ( instr_pseudo ) || b [ i ] . instrHasAttr ( instr_illegal ) || b [ i ] . instrHasAttr ( instr_no_comp ) ) {
                    }
                  if ( ! extFlag ) {
                        { std::ostringstream ss; ss    <<  "Invalid instruction at the position of "  <<  i + 1 ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
                    }
              }
            formatFlag = false ;
            if ( extA && extB && extZ ) {
                  ii = combineInstr ( 11 , "opXABVZ" , - 1 , posA , posB , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , posZ ) ;
                  formatFlag = true ;
              }
            if ( extA && extB && ! extZ ) {
                  ii = combineInstr ( 11 , "opXABVZ" , - 1 , posA , posB , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 ) ;
                  formatFlag = true ;
              }
            if ( extA && ! extB && extZ ) {
                  ii = combineInstr ( 11 , "opXABVZ" , - 1 , posA , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , posZ ) ;
                  formatFlag = true ;
              }
            if ( extA && ! extB && ! extZ ) {
                  ii = combineInstr ( 11 , "opXABVZ" , - 1 , posA , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 ) ;
                  formatFlag = true ;
              }
            if ( ! extA && extB && extZ ) {
                  ii = combineInstr ( 11 , "opXABVZ" , - 1 , - 1 , posB , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , posZ ) ;
                  formatFlag = true ;
              }
            if ( ! extA && extB && ! extZ ) {
                  ii = combineInstr ( 11 , "opXABVZ" , - 1 , - 1 , posB , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 ) ;
                  formatFlag = true ;
              }
            if ( extS == 2 ) {
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_st_Iu17_gX ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "st_Iu17_gX_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_st_Iu17_H ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "st_Iu17_H_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_ld_gX_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "ld_gX_Iu17_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_ld_H_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "ld_H_Iu17_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_mv_sp_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "mv_sp_Iu17_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 1 ] ] . instrHasAttr ( instr_opS_LO_st_Iu17_gX ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 1 ] ] , "st_Iu17_gX_opS_HI" ) ) ;
                        posS [ 1 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 1 ] ] . instrHasAttr ( instr_opS_LO_st_Iu17_H ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 1 ] ] , "st_Iu17_H_opS_HI" ) ) ;
                        posS [ 1 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 1 ] ] . instrHasAttr ( instr_opS_LO_ld_gX_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 1 ] ] , "ld_gX_Iu17_opS_HI" ) ) ;
                        posS [ 1 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 1 ] ] . instrHasAttr ( instr_opS_LO_ld_H_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 1 ] ] , "ld_H_Iu17_opS_HI" ) ) ;
                        posS [ 1 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 1 ] ] . instrHasAttr ( instr_opS_LO_mv_sp_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 1 ] ] , "mv_sp_Iu17_opS_HI" ) ) ;
                        posS [ 1 ] = b . size (  ) - 1 ;
                    }
                  ii = combineInstr ( 4 , "opXSSZ" , - 1 , posS [ 1 ] , posS [ 0 ] , extZ ? posZ : - 1 ) ;
                  formatFlag = true ;
              }
            if ( ( extS == 1 ) && ! ( extVs0 || extVs1 || extVs2 || extVrot || extVd || extVr || extVau ) ) {
                  ii_null = createInstr ( 0 , "null" ) ;
                  b . push_back ( ii_null ) ;
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_st_Iu17_gX ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "st_Iu17_gX_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_st_Iu17_H ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "st_Iu17_H_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_ld_gX_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "ld_gX_Iu17_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_ld_H_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "ld_H_Iu17_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_HI_mv_sp_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "mv_sp_Iu17_opS_LO" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  ii = combineInstr ( 4 , "opXSSZ" , - 1 , Size , posS [ 0 ] , extZ ? posZ : - 1 ) ;
                  formatFlag = true ;
              }
            if ( ( extS == 1 ) && ( extVs0 || extVs1 || extVs2 || extVrot || extVd || extVr || extVau ) ) {
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_LO_st_Iu17_gX ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "st_Iu17_gX_opS_HI" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_LO_st_Iu17_H ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "st_Iu17_H_opS_HI" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_LO_ld_gX_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "ld_gX_Iu17_opS_HI" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_LO_ld_H_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "ld_H_Iu17_opS_HI" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  if ( b [ posS [ 0 ] ] . instrHasAttr ( instr_opS_LO_mv_sp_Iu17 ) ) {
                        b . push_back ( replaceInstr ( b [ posS [ 0 ] ] , "mv_sp_Iu17_opS_HI" ) ) ;
                        posS [ 0 ] = b . size (  ) - 1 ;
                    }
                  ii = combineInstr ( 10 , "opXSVZ" , - 1 , posS [ 0 ] , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , extZ ? posZ : - 1 ) ;
                  formatFlag = true ;
              }
            if ( extC && extZ ) {
                  ii = patchInstr ( b [ posC ] , b [ posZ ] , 0 ) ;
                  formatFlag = true ;
              }
            if ( extC && ! extZ ) {
                  ii = b [ posC ] ;
                  formatFlag = true ;
              }
            if ( extD && extZ ) {
                  ii = patchInstr ( b [ posD ] , b [ posZ ] , 0 ) ;
                  formatFlag = true ;
              }
            if ( extD && ! extZ ) {
                  ii = b [ posD ] ;
                  formatFlag = true ;
              }
            if ( extFNOP && extZ ) {
                  ii = combineInstr ( 11 , "opXABVZ" , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , posZ ) ;
                  formatFlag = true ;
              }
            if ( extFNOP && ! extZ ) {
                  ii = createInstr ( 11 , "opXABVZ" , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ) ;
                  formatFlag = true ;
              }
            if ( extZ && ! extA && ! extB && ! extC && ! extD && ( extS == 0 ) && ! extFNOP ) {
                  ii = combineInstr ( 11 , "opXABVZ" , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , posZ ) ;
                  formatFlag = true ;
              }
            if ( extLOOPEND && ! extA && ! extB && ! extC && ! extD && ( extS == 0 ) && ! extFNOP && ! extZ && ! extVs0 && ! extVs1 && ! extVs2 && ! extVrot && ! extVr && ! extVd && ! extVau ) {
                  ii = createInstr ( 11 , "opXABVZ" , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ) ;
                  formatFlag = true ;
              }
            if ( extDONE ) {
                  ii = b [ 0 ] ;
                  formatFlag = true ;
              }
            if ( ( extVs0 || extVs1 || extVs2 || extVrot || extVr || extVd || extVau || extX ) && ! extA && ! extB && ! extC && ! extD && ( extS == 0 ) && ! extZ ) {
                  ii = createInstr ( 11 , "opXABVZ" , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ) ;
                  formatFlag = true ;
              }
            if ( ! formatFlag ) {
                  { std::ostringstream ss; ss    <<  "Invalid instruction format" ; error(ss.str().c_str(),adl_group_size(current_position) - 1,current_position); } ;
              }
            if ( extX ) {
                  if ( extS == 1 ) {
                        ii_swbreak = createInstr ( 0 , "swbreak_lower" ) ;
                    } else {
                        ii_swbreak = b [ posX ] ;
                    }
                  ii = patchInstr ( ii , ii_swbreak , 54 ) ;
              }
            if ( extVs0 ) {
                  ii = patchInstr ( ii , b [ posVs0 ] , 17 ) ;
              }
            if ( extVs1 ) {
                  ii = patchInstr ( ii , b [ posVs1 ] , 18 ) ;
              }
            if ( extVs2 ) {
                  ii = patchInstr ( ii , b [ posVs2 ] , 19 ) ;
              }
            if ( extVrot ) {
                  ii = patchInstr ( ii , b [ posVrot ] , 16 ) ;
              }
            if ( extVr ) {
                  ii = patchInstr ( ii , b [ posVr ] , 9 ) ;
              }
            if ( extVd ) {
                  ii = patchInstr ( ii , b [ posVd ] , 6 ) ;
              }
            if ( extVau ) {
                  ii = patchInstr ( ii , b [ posVau ] , 2 ) ;
              }
        }
      bb . push_back ( ii ) ;
      b = bb ;
}
static struct adl_asm_instr asm_instrs[] = {
   {"",0 } 
};
static int num_asm_instrs = 0;
static int internal_current_table = 0;
static bool show_warnings = false;
static struct hash_control *instr_hash[1];

static struct hash_control *reg_hash;

static struct hash_control *asm_instr_hash;

static struct hash_control *instr_pfx_fields_hash;

static const char *terminating_chars     = "\t .{}\n";

static const char *min_terminating_chars = "\t {}\n";

static bool setup_endianness()
{
  adl_setup_endianness(false); return true;
}

static bool setup_endianness_var = setup_endianness();

void vcpu_md_begin()
{
  adl_setup_general(min_terminating_chars,terminating_chars,1,0,0,post_packet_asm,0,init_queue_size, show_warnings, true);
  adl_setup_comments(init_comment_strs, init_num_comment_strs, init_line_comment_strs, init_num_line_comment_strs);
  adl_setup_instrfields(ppc_operands, num_ppc_operands,ppc_operands_by_index, num_ppc_operands_by_index);
  adl_setup_grouping(packet_begin_chars, packet_end_chars);
  adl_setup_prefix(pfx_queue, 0,0,0,reset_prefix_counters);
  adl_setup_instr_separators(instr_separator_chars);
  adl_setup_relocations(ppc_elf_howto_table,num_ppc_elf_howtos,ppc_relocs_by_index,num_ppc_relocs_by_index,ppc_reloc_offsets,num_ppc_reloc_offsets);
  instr_hash[0] = adl_setup_instructions(other_instructions,num_other_instructions,ppc_operands);
  reg_hash = adl_setup_name_hash(ppc_regnames,num_ppc_regnames,"register");
  asm_instr_hash = 0;
  instr_pfx_fields_hash = 0;
}

std::string adl_asm_version = "2015.11.13";

extern "C" void vcpu_md_assemble(char *str, unsigned line_number)
{
  adl_assemble(str,instr_hash[internal_current_table],asm_instr_hash,reg_hash,instr_pfx_fields_hash,16,internal_current_table,ppc_itnames[internal_current_table], line_number);
}

extern "C" void vcpu_md_apply_fix (fixS *fixP ,valueT *valP ,segT seg)
{
  adl_apply_fix(fixP,valP,seg);
}

int ppc_parse_option(int,char*);

extern "C" int vcpu_md_parse_option (int c,char *arg)
{
  if (c == 'd') {
    show_warnings = TRUE;
    return 1;
  } else if (c == 'm') {
    if (!strcmp(arg,"default")) {
      internal_current_table = 0;
      return 1;
    }
     else if (!strcmp(arg,"instr_opA")) {
      internal_current_table = 1;
      return 1;
    }
     else if (!strcmp(arg,"instr_opB")) {
      internal_current_table = 2;
      return 1;
    }
     else if (!strcmp(arg,"instr_opZ")) {
      internal_current_table = 3;
      return 1;
    }
     else if (!strcmp(arg,"instr_opX")) {
      internal_current_table = 4;
      return 1;
    }
     else if (!strcmp(arg,"instr_fnop")) {
      internal_current_table = 5;
      return 1;
    }
     else if (!strcmp(arg,"instr_opVs0")) {
      internal_current_table = 6;
      return 1;
    }
     else if (!strcmp(arg,"instr_opVs1")) {
      internal_current_table = 7;
      return 1;
    }
     else if (!strcmp(arg,"instr_opVs2")) {
      internal_current_table = 8;
      return 1;
    }
     else if (!strcmp(arg,"instr_opVrot")) {
      internal_current_table = 9;
      return 1;
    }
     else if (!strcmp(arg,"instr_opVr")) {
      internal_current_table = 10;
      return 1;
    }
     else if (!strcmp(arg,"instr_opVd")) {
      internal_current_table = 11;
      return 1;
    }
     else if (!strcmp(arg,"instr_opVau")) {
      internal_current_table = 12;
      return 1;
    }
     else if (!strcmp(arg,"instr_opS_HI")) {
      internal_current_table = 13;
      return 1;
    }
     else if (!strcmp(arg,"instr_opS_LO")) {
      internal_current_table = 14;
      return 1;
    }
     else if (!strcmp(arg,"instr_ocram")) {
      internal_current_table = 15;
      return 1;
    }
  }
  return ppc_parse_option(c,arg);
}

void ppc_show_usage(FILE*);

extern "C" void vcpu_md_show_usage (FILE *stream ATTRIBUTE_UNUSED)
{
  fprintf (stream,
  "\nInstruction-selection options:\n\n"
  "-mdefault		Select the default instruction table.\n"
  "-minstr_opA		Select the 'instr_opA' instruction table.\n"
  "-minstr_opB		Select the 'instr_opB' instruction table.\n"
  "-minstr_opZ		Select the 'instr_opZ' instruction table.\n"
  "-minstr_opX		Select the 'instr_opX' instruction table.\n"
  "-minstr_fnop		Select the 'instr_fnop' instruction table.\n"
  "-minstr_opVs0		Select the 'instr_opVs0' instruction table.\n"
  "-minstr_opVs1		Select the 'instr_opVs1' instruction table.\n"
  "-minstr_opVs2		Select the 'instr_opVs2' instruction table.\n"
  "-minstr_opVrot		Select the 'instr_opVrot' instruction table.\n"
  "-minstr_opVr		Select the 'instr_opVr' instruction table.\n"
  "-minstr_opVd		Select the 'instr_opVd' instruction table.\n"
  "-minstr_opVau		Select the 'instr_opVau' instruction table.\n"
  "-minstr_opS_HI		Select the 'instr_opS_HI' instruction table.\n"
  "-minstr_opS_LO		Select the 'instr_opS_LO' instruction table.\n"
  "-minstr_ocram		Select the 'instr_ocram' instruction table.\n"
  "-d			Show debugging warnings about undefined symbols.\n"
  );
  ppc_show_usage(stream);
}

extern "C" void vcpu_adl_get_instr_names(const char ***names, int *num_names)
{
  *names = instr_names;
  *num_names = num_instr_names;
};

extern "C" void vcpu_adl_get_instr_ops(const struct adl_name_pair **names, int* num_names)
{
  *names = ppc_regnames;
  *num_names = num_ppc_regnames;
}

extern "C" bfd_boolean  vcpu_dt_debug(void);

extern "C" bfd_boolean  vcpu_dt_debug(void)
{
  #ifdef _DEVTECH_DEBUG_
  return TRUE;
  #else
  return FALSE;
  #endif
}

#include "vcpu-assembler.inc"

const size_t idx_list_0[] = { 0 };
const size_t idx_list_1[] = { 0, 1 };
const size_t idx_list_2[] = { 1 };
const size_t idx_list_3[] = { 2 };
const size_t idx_list_4[] = { 3 };

size_t num_vcpu_modifiers = 155;
struct modifier_info vcpu_modifiers[] = {
	{ _sym1011_modifier, 1, idx_list_0 },
	{ _sym1022_modifier, 1, idx_list_0 },
	{ _sym1033_modifier, 1, idx_list_0 },
	{ _sym1044_modifier, 1, idx_list_0 },
	{ _sym1058_modifier, 1, idx_list_2 },
	{ _sym1059_modifier, 1, idx_list_2 },
	{ _sym1065_modifier, 1, idx_list_2 },
	{ _sym1066_modifier, 1, idx_list_2 },
	{ _sym1083_modifier, 1, idx_list_2 },
	{ _sym1249_modifier, 1, idx_list_0 },
	{ _sym1944_modifier, 1, idx_list_0 },
	{ _sym2018_modifier, 1, idx_list_2 },
	{ _sym2038_modifier, 1, idx_list_0 },
	{ _sym2055_modifier, 1, idx_list_2 },
	{ _sym2072_modifier, 1, idx_list_3 },
	{ _sym2073_modifier, 1, idx_list_3 },
	{ _sym2079_modifier, 1, idx_list_3 },
	{ _sym2080_modifier, 1, idx_list_3 },
	{ _sym2089_modifier, 1, idx_list_3 },
	{ _sym2090_modifier, 1, idx_list_3 },
	{ _sym2096_modifier, 1, idx_list_3 },
	{ _sym2097_modifier, 1, idx_list_3 },
	{ _sym2116_modifier, 1, idx_list_3 },
	{ _sym2127_modifier, 1, idx_list_3 },
	{ _sym2141_modifier, 1, idx_list_2 },
	{ _sym2158_modifier, 1, idx_list_2 },
	{ _sym2170_modifier, 1, idx_list_0 },
	{ _sym2184_modifier, 1, idx_list_2 },
	{ _sym2198_modifier, 1, idx_list_3 },
	{ _sym2209_modifier, 1, idx_list_3 },
	{ _sym2210_modifier, 1, idx_list_3 },
	{ _sym2216_modifier, 1, idx_list_3 },
	{ _sym2217_modifier, 1, idx_list_3 },
	{ _sym2235_modifier, 1, idx_list_0 },
	{ _sym2294_modifier, 1, idx_list_0 },
	{ _sym2666_modifier, 1, idx_list_2 },
	{ _sym2692_modifier, 1, idx_list_2 },
	{ _sym2693_modifier, 1, idx_list_2 },
	{ _sym2699_modifier, 1, idx_list_2 },
	{ _sym2700_modifier, 1, idx_list_2 },
	{ _sym2714_modifier, 1, idx_list_2 },
	{ _sym2715_modifier, 1, idx_list_2 },
	{ _sym2721_modifier, 1, idx_list_2 },
	{ _sym2722_modifier, 1, idx_list_2 },
	{ _sym2733_modifier, 1, idx_list_2 },
	{ _sym2744_modifier, 1, idx_list_2 },
	{ _sym2758_modifier, 1, idx_list_0 },
	{ _sym2772_modifier, 1, idx_list_0 },
	{ _sym2786_modifier, 1, idx_list_2 },
	{ _sym2800_modifier, 1, idx_list_2 },
	{ _sym2811_modifier, 1, idx_list_2 },
	{ _sym2812_modifier, 1, idx_list_2 },
	{ _sym2818_modifier, 1, idx_list_2 },
	{ _sym2819_modifier, 1, idx_list_2 },
	{ _sym2834_modifier, 1, idx_list_2 },
	{ _sym2849_modifier, 1, idx_list_0 },
	{ _sym2863_modifier, 1, idx_list_0 },
	{ _sym3420_modifier, 1, idx_list_0 },
	{ _sym3494_modifier, 1, idx_list_2 },
	{ _sym3514_modifier, 1, idx_list_0 },
	{ _sym3531_modifier, 1, idx_list_2 },
	{ _sym3548_modifier, 1, idx_list_3 },
	{ _sym3549_modifier, 1, idx_list_3 },
	{ _sym3555_modifier, 1, idx_list_3 },
	{ _sym3556_modifier, 1, idx_list_3 },
	{ _sym3565_modifier, 1, idx_list_3 },
	{ _sym3566_modifier, 1, idx_list_3 },
	{ _sym3572_modifier, 1, idx_list_3 },
	{ _sym3573_modifier, 1, idx_list_3 },
	{ _sym3592_modifier, 1, idx_list_3 },
	{ _sym3603_modifier, 1, idx_list_3 },
	{ _sym3617_modifier, 1, idx_list_2 },
	{ _sym3634_modifier, 1, idx_list_2 },
	{ _sym3646_modifier, 1, idx_list_0 },
	{ _sym3660_modifier, 1, idx_list_2 },
	{ _sym3674_modifier, 1, idx_list_3 },
	{ _sym3685_modifier, 1, idx_list_3 },
	{ _sym3686_modifier, 1, idx_list_3 },
	{ _sym3692_modifier, 1, idx_list_3 },
	{ _sym3693_modifier, 1, idx_list_3 },
	{ _sym3711_modifier, 1, idx_list_0 },
	{ _sym3770_modifier, 1, idx_list_0 },
	{ _sym4142_modifier, 1, idx_list_2 },
	{ _sym4168_modifier, 1, idx_list_2 },
	{ _sym4169_modifier, 1, idx_list_2 },
	{ _sym4175_modifier, 1, idx_list_2 },
	{ _sym4176_modifier, 1, idx_list_2 },
	{ _sym4190_modifier, 1, idx_list_2 },
	{ _sym4191_modifier, 1, idx_list_2 },
	{ _sym4197_modifier, 1, idx_list_2 },
	{ _sym4198_modifier, 1, idx_list_2 },
	{ _sym4209_modifier, 1, idx_list_2 },
	{ _sym4220_modifier, 1, idx_list_2 },
	{ _sym4234_modifier, 1, idx_list_0 },
	{ _sym4248_modifier, 1, idx_list_0 },
	{ _sym4262_modifier, 1, idx_list_2 },
	{ _sym4276_modifier, 1, idx_list_2 },
	{ _sym4287_modifier, 1, idx_list_2 },
	{ _sym4288_modifier, 1, idx_list_2 },
	{ _sym4294_modifier, 1, idx_list_2 },
	{ _sym4295_modifier, 1, idx_list_2 },
	{ _sym429_modifier, 1, idx_list_0 },
	{ _sym430_modifier, 1, idx_list_0 },
	{ _sym4310_modifier, 1, idx_list_2 },
	{ _sym4325_modifier, 1, idx_list_0 },
	{ _sym4339_modifier, 1, idx_list_0 },
	{ _sym441_modifier, 1, idx_list_0 },
	{ _sym442_modifier, 1, idx_list_0 },
	{ _sym544_modifier, 1, idx_list_0 },
	{ _sym550_modifier, 1, idx_list_2 },
	{ _sym551_modifier, 1, idx_list_0 },
	{ _sym565_modifier, 1, idx_list_2 },
	{ _sym574_modifier, 1, idx_list_3 },
	{ _sym575_modifier, 1, idx_list_3 },
	{ _sym585_modifier, 2, idx_list_1 },
	{ _sym595_modifier, 2, idx_list_1 },
	{ _sym605_modifier, 2, idx_list_1 },
	{ _sym615_modifier, 2, idx_list_1 },
	{ _sym625_modifier, 2, idx_list_1 },
	{ _sym635_modifier, 2, idx_list_1 },
	{ _sym645_modifier, 2, idx_list_1 },
	{ _sym655_modifier, 2, idx_list_1 },
	{ _sym665_modifier, 2, idx_list_1 },
	{ _sym675_modifier, 2, idx_list_1 },
	{ _sym696_modifier, 1, idx_list_4 },
	{ _sym697_modifier, 1, idx_list_4 },
	{ _sym742_modifier, 1, idx_list_2 },
	{ _sym743_modifier, 1, idx_list_2 },
	{ _sym749_modifier, 1, idx_list_2 },
	{ _sym750_modifier, 1, idx_list_2 },
	{ _sym756_modifier, 1, idx_list_3 },
	{ _sym757_modifier, 1, idx_list_3 },
	{ _sym764_modifier, 1, idx_list_3 },
	{ _sym765_modifier, 1, idx_list_3 },
	{ _sym809_modifier, 1, idx_list_2 },
	{ _sym810_modifier, 1, idx_list_2 },
	{ _sym816_modifier, 1, idx_list_2 },
	{ _sym817_modifier, 1, idx_list_2 },
	{ _sym823_modifier, 1, idx_list_2 },
	{ _sym940_modifier, 1, idx_list_0 },
	{ _sym941_modifier, 1, idx_list_0 },
	{ _sym947_modifier, 1, idx_list_0 },
	{ _sym948_modifier, 1, idx_list_0 },
	{ _sym957_modifier, 1, idx_list_0 },
	{ _sym958_modifier, 1, idx_list_0 },
	{ _sym964_modifier, 1, idx_list_0 },
	{ _sym965_modifier, 1, idx_list_0 },
	{ _sym974_modifier, 1, idx_list_0 },
	{ _sym975_modifier, 1, idx_list_0 },
	{ _sym981_modifier, 1, idx_list_0 },
	{ _sym982_modifier, 1, idx_list_0 },
	{ _sym991_modifier, 1, idx_list_0 },
	{ _sym992_modifier, 1, idx_list_0 },
	{ _sym998_modifier, 1, idx_list_0 },
	{ _sym999_modifier, 1, idx_list_0 },
	{ NULL, 0, NULL, },
};
